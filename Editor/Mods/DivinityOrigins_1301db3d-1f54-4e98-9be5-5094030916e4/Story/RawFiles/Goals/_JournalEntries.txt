Version 1
SubGoalCombiner SGC_AND
INITSECTION
// 	TUT_Tutorial_A
//REGION Tutorial
DB_QuestDef_State("TUT_ShipMurder","WakeUp", 1);
DB_QuestDef_State("TUT_ShipMurder","CollaringSourcerer");
DB_QuestDef_State("TUT_ShipMurder","AfterWindego");
DB_QuestDef_State("TUT_ShipMurder","MiddleDeckCarnage");
DB_QuestDef_State("TUT_ShipMurder","Weapons_Found");
DB_QuestDef_UpdateEvent("TUT_ShipMurder","Weapons_Search", "QuestUpdate_TUT_ShipMurder_AfterWindego");
DB_QuestDef_State("TUT_ShipMurder","Weapons_Made");
DB_QuestDef_State("TUT_ShipMurder","DeathFog");
DB_QuestDef_State("TUT_ShipMurder","Kraken");
DB_QuestDef_State("TUT_ShipMurder","Fled", -1);
DB_QuestDef_State("TUT_ShipMurder","GoRescueOrigins");
DB_QuestDef_State("TUT_ShipMurder","Rescued", -1);
DB_QuestDef_State("TUT_ShipMurder","Failed", -1);

//REMOVED Tutorial entries - WILL CAUSE ASSERT BUT AS INTENDED
DB_QuestDef_State("TUT_ShipMurder","Start");
DB_QuestDef_State("TUT_ShipMurder","AteVictimLimb");
DB_QuestDef_State("TUT_ShipMurder","CoweringMagisters");

//INVESTIGATION - NEW JOURNAL ADDITION
DB_QuestDef_State("TUT_ShipInvestigation","Start", 1);
DB_QuestDef_State("TUT_ShipInvestigation","AteVictimLimb");
DB_QuestDef_State("TUT_ShipInvestigation","SearchWoman");
DB_QuestDef_State("TUT_ShipInvestigation","AfterWindego", -1);

//END_REGION //Tutorial


//	FJ_FortJoy_Main - QCA_Chapter_02
//REGION Fort Joy
DB_QuestDef_State("Test_CharacterQuest","Start");

// FTJ_Escape - user
DB_QuestDef_AddEvent("FTJ_Escape","QuestAdd_FTJ_Escape");
DB_QuestDef_State("FTJ_Escape","StartEscape");
DB_QuestDef_State("FTJ_Escape","PeopleTalkSaheila"); //QuestUpdate_FTJ_Escape_PeopleTalkSaheila
DB_QuestDef_State("FTJ_Escape","PeopleTalkGriff"); //QuestUpdate_FTJ_Escape_PeopleTalkGriff
DB_QuestDef_State("FTJ_Escape","GriffNoClue");
DB_QuestDef_State("FTJ_Escape","EscapePrisoner");
DB_QuestDef_State("FTJ_Escape","AtusaLimb"); //QuestUpdate_FTJ_Escape_AtusaLimb
DB_QuestDef_State("FTJ_Escape","ArriveGhetto");
DB_QuestDef_State("FTJ_Escape","StartFlorence");
DB_QuestDef_State("FTJ_Escape","FlorenceEnd");
DB_QuestDef_UpdateEvent("FTJ_Escape", "StartFlorence","QuestUpdate_FTJ_Escape_StartFlorence");
DB_QuestDef_UpdateEvent("FTJ_Escape", "FlorenceEnd","QuestUpdate_FTJ_Escape_FlorenceEnd");
DB_QuestDef_UpdateEvent("FTJ_Escape","FindAmyro", "FTJ_SaheilaToldPlayerAboutAmyro");
DB_QuestDef_State("FTJ_Escape","AmyroMet");
DB_QuestDef_State("FTJ_Escape","AmyroSaved");
DB_QuestDef_State("FTJ_Escape","AmyroDead");//QuestUpdate_FTJ_Escape_AmyroDead
DB_QuestDef_State("FTJ_Escape","GriffNoEscape");//REMOVED
DB_QuestDef_State("FTJ_Escape","WithermooreDeal");
DB_QuestDef_State("FTJ_Escape","YarrowReward");
DB_QuestDef_State("FTJ_Escape","TeleportMet");
DB_QuestDef_State("FTJ_Escape","DelorusSaved");
DB_QuestDef_State("FTJ_Escape","EnterUnderground");
DB_QuestDef_State("FTJ_Escape","EnterDunes", -1);
DB_QuestDef_State("FTJ_Escape","Purging");
DB_QuestDef_State("FTJ_Escape","Teleport_Fail");//QuestUpdate_FTJ_Escape_Teleport_Fail
DB_QuestDef_UpdateEvent("FTJ_Escape", "MetGareth", "FTJ_SW_HasMetGareth");
DB_QuestDef_UpdateEvent("FTJ_Escape", "CallToArmReady", "QuestUpdate_FTJ_SW_CallToArms_GotCallToArms");
DB_QuestDef_UpdateEvent("FTJ_Escape", "CallToArmReady", "QuestUpdate_FTJ_SW_CallToArms_GotCallToArms_Exter"); 
DB_QuestDef_State("FTJ_Escape","DivineStatueInfo");
DB_QuestDef_State("FTJ_Escape","KidnappedKid");
DB_QuestDef_State("FTJ_Escape","KnilesSlaughter");

//NEW JOURNAL ADDITION
DB_QuestDef_State("FTJ_Escape","Yarrow_KeyUsed");
DB_QuestDef_State("FTJ_Escape","DivineStatue_Passage");
DB_QuestDef_UpdateEvent("FTJ_Escape","Gawin_Teleport", "QuestUpdate_FTJ_Teleporter_End");
DB_QuestDef_State("FTJ_Escape","Escape_Own");
DB_QuestDef_State("FTJ_Escape","Arrested");//QuestUpdate_FTJ_Escape_Arrested
DB_QuestDef_State("FTJ_Escape","Free_Own");

//REMOVED FTJ Entries - WILL CAUSE ASSERT BUT AS INTENDED - Most of them are converted into FTJ_Escape_Island
DB_QuestDef_State("FTJ_Escape","BeachVoidlings");
DB_QuestDef_State("FTJ_Escape","DallisDefeatedInGhetto");
DB_QuestDef_State("FTJ_Escape","VasnyaShelter");
DB_QuestDef_State("FTJ_Escape","EscapeHan");
DB_QuestDef_State("FTJ_Escape","EnterUpperArea");
DB_QuestDef_State("FTJ_Escape","ChapelInfo_1");
DB_QuestDef_State("FTJ_Escape","DallisWarning");
DB_QuestDef_State("FTJ_Escape","EnterMainGate");
DB_QuestDef_State("FTJ_Escape","MeetZaleskar"); //QuestUpdate_FTJ_Escape_MeetZaleskar
DB_QuestDef_State("FTJ_Escape","FindGratiana"); //QuestUpdate_FTJ_Escape_FindGratiana
DB_QuestDef_UpdateEvent("FTJ_Escape","FightShriekers","QuestUpdate_FTJ_SW_Shriekers_Know_Shrieker");
DB_QuestDef_State("FTJ_Escape","FindWand_Gratiana");
DB_QuestDef_State("FTJ_Escape","FindWand_Gareth");
DB_QuestDef_State("FTJ_Escape","FindWand_Exter");
DB_QuestDef_UpdateEvent("FTJ_Escape","FindGareth","QuestUpdate_FTJ_SW_BatteredAndCornered_GarethAfterWeapons");
DB_QuestDef_State("FTJ_Escape","MetGareth");
DB_QuestDef_State("FTJ_Escape","GarethPlan"); //QuestUpdate_FTJ_Escape_GarethPlan
DB_QuestDef_State("FTJ_Escape","FoundShelter");
DB_QuestDef_State("FTJ_Escape","BaharaWelcome");
DB_QuestDef_State("FTJ_Escape","CallToArmReady");
DB_QuestDef_State("FTJ_Escape","LadyVengeanceSpotted");
DB_QuestDef_State("FTJ_Escape","FinalBattle_Start");
DB_QuestDef_State("FTJ_Escape","FinalBattle");
DB_QuestDef_State("FTJ_Escape","FinalBattleNoSeeker");
DB_QuestDef_State("FTJ_Escape","MetRiver");
DB_QuestDef_State("FTJ_Escape","LadyVengeance");
DB_QuestDef_State("FTJ_Escape","LeaveRiver"); //QuestUpdate_FTJ_Escape_LeaveRiver
DB_QuestDef_State("FTJ_Escape","EscapeLadyVengeance");
DB_QuestDef_State("FTJ_Escape","FindWand_Shrieker"); 

//FTJ_Escape_Island - USER
//NEW JOURNAL ADDITION
DB_QuestDef_AddEvent("FTJ_Escape_Island","QuestUpdate_FTJ_Escape_EnterMainGate");
DB_QuestDef_AddEvent("FTJ_Escape_Island","QuestUpdate_FTJ_Escape_EnterDunes");
DB_QuestDef_AddEvent("FTJ_Escape_Island","QuestUpdate_FTJ_Escape_Island_EscapeFort");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","EnterMainGate", "QuestUpdate_FTJ_Escape_EnterMainGate");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","EnterDunes", "QuestUpdate_FTJ_Escape_EnterDunes");
DB_QuestDef_State("FTJ_Escape_Island","EscapeHan");
DB_QuestDef_State("FTJ_Escape_Island","VasnyaShelter");
DB_QuestDef_State("FTJ_Escape_Island","DallisWarning");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","MeetZaleskar","QuestUpdate_FTJ_Escape_MeetZaleskar");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","FindGratiana","QuestUpdate_FTJ_SW_StuckHaunting_BaharaTalk");
DB_QuestDef_State("FTJ_Escape_Island","FindGareth");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","MetGareth", "QuestUpdate_FTJ_Escape_MetGareth");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","GarethPlan", "QuestUpdate_FTJ_Escape_GarethPlan");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","FindWand_Gratiana", "QuestUpdate_FTJ_Escape_FindWand_Gratiana");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","FindWand_Gareth", "QuestUpdate_FTJ_Escape_FindWand_Gareth");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","FindWand_Exter", "QuestUpdate_FTJ_Escape_FindWand_Exter");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","FinalBattle", "QuestUpdate_FTJ_Escape_FinalBattle");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","MetDragon", "QuestUpdate_FTJ_SW_PurgedDragon_MetDragon");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","DragonPromise", "QuestUpdate_FTJ_SW_PurgedDragon_DragonPromise");
DB_QuestDef_State("FTJ_Escape_Island","DragonHelp");
DB_QuestDef_State("FTJ_Escape_Island","FinalBattleDragon");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","FightShriekers","QuestUpdate_FTJ_SW_Shriekers_Know_Shrieker");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","FightShriekers","QuestUpdate_FTJ_SW_Shriekers_SawShrieker");
DB_QuestDef_State("FTJ_Escape_Island","Destroy_Shrieker");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","MetRiver", "QuestUpdate_FTJ_Escape_MetRiver");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","LeaveRiver", "QuestUpdate_FTJ_Escape_LeaveRiver");
DB_QuestDef_UpdateEvent("FTJ_Escape_Island","FinalBattleNoSeeker", "QuestUpdate_FTJ_Escape_FinalBattleNoSeeker");
DB_QuestDef_State("FTJ_Escape_Island","EscapeSeeker");
DB_QuestDef_State("FTJ_Escape_Island","EscapeFort");
DB_QuestDef_State("FTJ_Escape_Island","EscapeLadyVengeance",-1);

//NEW JOURNAL UPDATE
DB_QuestDef_CloseEvent("FTJ_Escape_Island_SUBA","QuestUpdate_FTJ_Escape_MetRiver");
DB_QuestDef_CloseEvent("FTJ_Escape_Island_SUBB","QuestUpdate_FTJ_Escape_MetRiver");
DB_QuestDef_CloseEvent("FTJ_Escape_Island_SUBC","QuestUpdate_FTJ_Escape_MetRiver");

DB_QuestDef_CloseEvent("FTJ_Escape_Island_SUBC","QuestClose_FTJ_Escape_Island_SUBC");


//FTJ_Voice - USER
DB_QuestDef_State("FTJ_Voice","TUT_Voice"); //REMOVED
DB_QuestDef_State("FTJ_Voice","Surface1");
DB_QuestDef_State("FTJ_Voice","Surface2"); //REMOVED
DB_QuestDef_State("FTJ_Voice","Surface3"); //REMOVED
DB_QuestDef_State("FTJ_Voice","Surface4"); //REMOVED
DB_QuestDef_State("FTJ_Voice","VWTalk");
DB_QuestDef_State("FTJ_Voice","HOEArrive");//REMOVED
DB_QuestDef_State("FTJ_Voice","GodMet");//REMOVED

//NEW JOURNAL ADDITION
DB_QuestDef_UpdateEvent("FTJ_Voice","Surface1","FTJ_SW_RiverSurface1");
DB_QuestDef_UpdateEvent("FTJ_Voice","Surface1","FTJ_SW_RiverSurface2");
DB_QuestDef_UpdateEvent("FTJ_Voice","Surface1","FTJ_SW_RiverSurface3");
DB_QuestDef_UpdateEvent("FTJ_Voice","Surface1","FTJ_SW_RiverSurface4");

//FTJ_Godwoken - CHARACTER
DB_QuestDef_State("FTJ_Godwoken","GodMission");
DB_QuestDef_State("FTJ_Godwoken","GodMission_Lohse");
DB_QuestDef_State("FTJ_Godwoken","SeekMeistr");
DB_QuestDef_State("FTJ_Godwoken","VWTalk");
DB_QuestDef_State("FTJ_Godwoken","MeistrPurged"); //QuestUpdate_FTJ_Godwoken_MeistrPurged
DB_QuestDef_State("FTJ_Godwoken","FocusDivinity"); //QuestUpdate_FTJ_Godwoken_FocusDivinity
DB_QuestDef_State("FTJ_Godwoken","DutyDivinity"); //QuestUpdate_FTJ_Godwoken_DutyDivinity
DB_QuestDef_State("FTJ_Godwoken","TaskedRitual"); //QuestUpdate_FTJ_Godwoken_TaskedRitual
DB_QuestDef_State("FTJ_Godwoken","MetGodRC1");
DB_QuestDef_State("FTJ_Godwoken","MetGodRC2Start");
DB_QuestDef_State("FTJ_Godwoken","MetGodRC2");
DB_QuestDef_State("FTJ_Godwoken","MetGodRC3Start");
DB_QuestDef_State("FTJ_Godwoken","MetGodRC3");
DB_QuestDef_State("FTJ_Godwoken","MetGodRC1_Lohse");
DB_QuestDef_State("FTJ_Godwoken","MetGodRC2Start_Lohse");
DB_QuestDef_State("FTJ_Godwoken","MetGodRC2_Lohse");
DB_QuestDef_State("FTJ_Godwoken","MetGodRC3Start_Lohse");
DB_QuestDef_State("FTJ_Godwoken","MetGodRC3");
DB_QuestDef_State("FTJ_Godwoken","HeadingCOS");
DB_QuestDef_State("FTJ_Godwoken","AlexandarGone"); //QuestUpdate_FTJ_Godwoken_AlexandarGone

DB_QuestDef_UpdateEvent("FTJ_Godwoken","TaskedRitual","QuestUpdate_RC_DW_Meistr_BookRead"); //TaskedRitual is now given both by reading the book & talking to Meistr

DB_QuestDef_State("FTJ_Godwoken","DallisCrypt");
DB_QuestDef_State("FTJ_Godwoken","DivinityAccept_End1");
DB_QuestDef_State("FTJ_Godwoken","DivinityAccept_End2");
DB_QuestDef_State("FTJ_Godwoken","DivinityAccept_End3");
DB_QuestDef_State("FTJ_Godwoken","DivinityAccept_End3_NoLucian");
DB_QuestDef_State("FTJ_Godwoken","DivinityAccept_End4");
DB_QuestDef_State("FTJ_Godwoken","DivinityAccept_End5");
DB_QuestDef_State("FTJ_Godwoken","DivinityFail");

DB_QuestDef_UpdateEvent("FTJ_Godwoken","Academy","QuestUpdate_CoS_Academy_Start");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","ArenaOne","QuestUpdate_CoS_ArenaOfTheOne_Phase_1_End");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","ArenaOne_GodAppear","CoS_ArenaOfTheOne_Phase_2_Gods");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","ArenaOne_GodResisted","CoS_ArenaOfTheOne_End");

DB_QuestDef_State("FTJ_Godwoken","GodHanged"); //QuestUpdate_FTJ_Godwoken_GodHanged
DB_QuestDef_State("FTJ_Godwoken","GodHanged_Lohse");

//FTJ_GODWOKEN SPLITS
DB_QuestDef_UpdateEvent("FTJ_Godwoken","MetGodRC1_2","QuestUpdate_FTJ_Godwoken_MetGodRC1");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","MetGodRC1_Lohse_2","QuestUpdate_FTJ_Godwoken_MetGodRC1_Lohse");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","MetGodRC1_Lohse_3","QuestUpdate_FTJ_Godwoken_MetGodRC1_Lohse");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","MetGodRC2Start_2","QuestUpdate_FTJ_Godwoken_MetGodRC2Start");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","MetGodRC2Start_3","QuestUpdate_FTJ_Godwoken_MetGodRC2Start");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","MetGodRC2Start_Lohse_2","QuestUpdate_FTJ_Godwoken_MetGodRC2Start_Lohse");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","MetGodRC2Start_Lohse_3","QuestUpdate_FTJ_Godwoken_MetGodRC2Start_Lohse");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","MetGodRC2_2","QuestUpdate_FTJ_Godwoken_MetGodRC2");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","MetGodRC2_Lohse_2","QuestUpdate_FTJ_Godwoken_MetGodRC2_Lohse");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","MetGodRC3Start_2","QuestUpdate_FTJ_Godwoken_MetGodRC3Start");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","MetGodRC3Start_3","QuestUpdate_FTJ_Godwoken_MetGodRC3Start");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","MetGodRC3Start_Lohse_2","QuestUpdate_FTJ_Godwoken_MetGodRC3Start_Lohse");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","MetGodRC3Start_Lohse_3","QuestUpdate_FTJ_Godwoken_MetGodRC3Start_Lohse");


//NEW JOURNAL ADDITION
DB_QuestDef_UpdateEvent("FTJ_Godwoken","PrayedShrine", "FTJ_SW_ShrineSendToHoE");

DB_QuestDef_UpdateEvent("FTJ_Godwoken","Close","QuestUpdate_FTJ_Godwoken_DivinityAccept_End1");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","Close","QuestUpdate_FTJ_Godwoken_DivinityAccept_End2");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","Close","QuestUpdate_FTJ_Godwoken_DivinityAccept_End3");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","Close","QuestUpdate_FTJ_Godwoken_DivinityAccept_End4");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","Close","QuestUpdate_FTJ_Godwoken_DivinityAccept_End5");
DB_QuestDef_UpdateEvent("FTJ_Godwoken","Close","FTJ_Godwoken_DivinityFail");


//FTJ_Hunted
DB_QuestDef_State("FTJ_Hunted","GarethHunted"); //QuestUpdate_FTJ_Hunted_GarethHunted
DB_QuestDef_State("FTJ_Hunted","BaharaHunted"); //QuestUpdate_FTJ_Hunted_BaharaHunted
DB_QuestDef_State("FTJ_Hunted","AlexandarHunted"); //QuestUpdate_FTJ_Hunted_AlexandarHunted
DB_QuestDef_State("FTJ_Hunted","IfanHunted"); //QuestUpdate_FTJ_Hunted_IfanHunted
DB_QuestDef_State("FTJ_Hunted","FoundContract");
DB_QuestDef_State("FTJ_Hunted","LearnedBaran");
DB_QuestDef_State("FTJ_Hunted","LearnedRoost");
DB_QuestDef_State("FTJ_Hunted","FoundContractSawmill");

DB_QuestDef_State("FTJ_Hunted","WindegoMet");
DB_QuestDef_State("FTJ_Hunted","WindegoKill");
DB_QuestDef_State("FTJ_Hunted","LearnDivineOrder");
DB_QuestDef_State("FTJ_Hunted","LearnDOBR");
DB_QuestDef_State("FTJ_Hunted","BlackRingInvader");
DB_QuestDef_State("FTJ_Hunted","LearnedSallowMan");
DB_QuestDef_State("FTJ_Hunted","MetSallowMan");
DB_QuestDef_State("FTJ_Hunted","TrackHunter");

DB_QuestDef_State("FTJ_Hunted","AllySallowMan");//REMOVED
DB_QuestDef_State("FTJ_Hunted","KillSallowMan");//REMOVED
DB_QuestDef_State("FTJ_Hunted","CloseLeftCOS");//REMOVED

DB_QuestDef_UpdateEvent("FTJ_Hunted","Close","QuestUpdate_FTJ_Hunted_LearnDOBR");//NEW JOURNAL ADDITION
DB_QuestDef_UpdateEvent("FTJ_Hunted","Close","QuestUpdate_FTJ_Hunted_BlackRingInvader");//NEW JOURNAL ADDITION


//FTJ_Seeker - user
DB_QuestDef_State("FTJ_Seeker","VerdasMet");
DB_QuestDef_State("FTJ_Seeker","MaladyWillAnswer"); //start/close
DB_QuestDef_State("FTJ_Seeker","BaharaMetToldSeeker");
DB_QuestDef_State("FTJ_Seeker","SeekerTrueGoalAfterGod");
DB_QuestDef_State("FTJ_Seeker","SeekerTrueGoalGod");
DB_QuestDef_State("FTJ_Seeker","SeekerTrueGoal");
DB_QuestDef_State("FTJ_Seeker","MagsiterOrders");
DB_QuestDef_State("FTJ_Seeker","VasnyaMetStart");
DB_QuestDef_State("FTJ_Seeker","UnnisMetAtusa");
DB_QuestDef_State("FTJ_Seeker","MeetZaleskar");
DB_QuestDef_State("FTJ_Seeker","HanMetStart");
DB_QuestDef_State("FTJ_Seeker","DelorusMet");
DB_QuestDef_State("FTJ_Seeker","AtusaEvent"); 
DB_QuestDef_State("FTJ_Seeker","GarethMet");
DB_QuestDef_State("FTJ_Seeker","AtusaLimb");
DB_QuestDef_State("FTJ_Seeker","UnnisMet");

DB_QuestDef_UpdateEvent("FTJ_Seeker","MissingLeaders","QuestUpdate_FTJ_Seeker_MissingLeaders");
DB_QuestDef_UpdateEvent("FTJ_Seeker","MissingLeaders","FTJ_SW_KnowOfGareth");
DB_QuestDef_State("FTJ_Seeker","CrucifiedSeekerMet");
DB_QuestDef_State("FTJ_Seeker","TarleneToldGareth");
DB_QuestDef_State("FTJ_Seeker","DissidentSeekers");
DB_QuestDef_State("FTJ_Seeker","DallisWarning");
DB_QuestDef_State("FTJ_Seeker","ZaleskarShip");
DB_QuestDef_State("FTJ_Seeker","SeekerEscape");
DB_QuestDef_State("FTJ_Seeker","VasnyaVerdas");
DB_QuestDef_State("FTJ_Seeker","HanVerdas");
DB_QuestDef_State("FTJ_Seeker","VerdasDead");
DB_QuestDef_State("FTJ_Seeker","HanVasnyaVerdasMet");
DB_QuestDef_State("FTJ_Seeker","VasnyaDeadVerdas");

//NEW JOURNAL ADDITION
DB_QuestDef_UpdateEvent("FTJ_Seeker","LearnMeistr","QuestUpdate_FTJ_Godwoken_SeekMeistr");
DB_QuestDef_UpdateEvent("FTJ_Seeker","TeleportedLVHOE","QuestUpdate_LV_HoE_Main_Start");
DB_QuestDef_UpdateEvent("FTJ_Seeker","MeistrVault","QuestUpdate_RC_DW_Meistr_VaultInstruction");
DB_QuestDef_State("FTJ_Seeker","MeistrDied");
DB_QuestDef_State("FTJ_Seeker","NoMeistr");

DB_QuestDef_State("FTJ_Seeker","MaladyWillAnswer"); //start/close
DB_QuestDef_State("FTJ_Seeker","CloseLeftFortJoy");

DB_QuestDef_UpdateEvent("FTJ_Seeker","Close","QuestUpdate_RC_DW_Meistr_VaultInstruction");
DB_QuestDef_UpdateEvent("FTJ_Seeker","Close","QuestUpdate_FTJ_Seeker_MeistrDied");
DB_QuestDef_UpdateEvent("FTJ_Seeker","Close","QuestUpdate_FTJ_Seeker_NoMeistr");


//Griff - Saheila
DB_QuestDef_AddEvent("RC_FTJ_OlgoSaheila","FTJ_OlgoGaveQuest");
DB_QuestDef_AddEvent("RC_FTJ_OlgoSaheila","FTJ_SaheilaGaveQuest");
DB_QuestDef_AddEvent("RC_FTJ_OlgoSaheila","FTJ_AmryoGaveQuest");
DB_QuestDef_UpdateEvent("RC_FTJ_OlgoSaheila","OlgoAgreeToHelp","FTJ_OlgoGaveQuest");
DB_QuestDef_UpdateEvent("RC_FTJ_OlgoSaheila","SkepticAgreeToHelp","FTJ_AmryoGaveQuest");
DB_QuestDef_UpdateEvent("RC_FTJ_OlgoSaheila","OlgoHelped","FTJ_OlgoReleasePrisoner");
DB_QuestDef_UpdateEvent("RC_FTJ_OlgoSaheila","PersuadeDreamer","FTJ_LizardDreamerGiveSuppliesToPlayer");

DB_QuestDef_State("RC_FTJ_OlgoSaheila","SkepticAgreeToHelp");
DB_QuestDef_State("RC_FTJ_OlgoSaheila","SaheilaAgreeToHelp");
DB_QuestDef_State("RC_FTJ_OlgoSaheila","SkepticReleased"); 
DB_QuestDef_State("RC_FTJ_OlgoSaheila","SkepticReleased_Saheila");
DB_QuestDef_UpdateEvent("RC_FTJ_OlgoSaheila","SkepticReleased_SUB","FTJ_SkepticReleased");

DB_QuestDef_State("RC_FTJ_OlgoSaheila","FoundDrugs");
DB_QuestDef_State("RC_FTJ_OlgoSaheila","SkepticHelped");
DB_QuestDef_State("RC_FTJ_OlgoSaheila","GriffDead");//REMOVED

DB_QuestDef_State("RC_FTJ_OlgoSaheila","RatHint");
DB_QuestDef_State("RC_FTJ_OlgoSaheila","CrateFound");
DB_QuestDef_State("RC_FTJ_OlgoSaheila","GriffHint"); //QuestUpdate_RC_FTJ_OlgoSaheila_GriffHint
DB_QuestDef_State("RC_FTJ_OlgoSaheila","AmyroHint"); //QuestUpdate_RC_FTJ_OlgoSaheila_AmyroHint
DB_QuestDef_State("RC_FTJ_OlgoSaheila","SaheilaAmyroConfirm"); //QuestUpdate_RC_FTJ_OlgoSaheila_SaheilaAmyroConfirm
DB_QuestDef_State("RC_FTJ_OlgoSaheila","Fail_SaheilaDead"); //QuestUpdate_RC_FTJ_OlgoSaheila_Fail_SaheilaDead
DB_QuestDef_State("RC_FTJ_OlgoSaheila","CloseLeftFortJoySaheila"); //QuestUpdate_RC_FTJ_OlgoSaheila_CloseLeftFortJoySaheila

DB_QuestDef_UpdateEvent("RC_FTJ_OlgoSaheila","FightGriff","FTJ_OlgoGaveQuest");//NEW JOURNAL ADDITION
DB_QuestDef_UpdateEvent("RC_FTJ_OlgoSaheila","OpenCage","QuestUpdate_RC_FTJ_OlgoSaheila_GriffDead");//NEW JOURNAL ADDITION

DB_QuestDef_State("RC_FTJ_OlgoSaheila","SaheilaThanks",-1);
DB_QuestDef_State("RC_FTJ_OlgoSaheila","AmyroDead",-1);
DB_QuestDef_State("RC_FTJ_OlgoSaheila","CloseLeftFortJoy",-1);
DB_QuestDef_CloseEvent("RC_FTJ_OlgoSaheila","QuestUpdate_RC_FTJ_OlgoSaheila_Fail_SaheilaDead");
DB_QuestDef_CloseEvent("RC_FTJ_OlgoSaheila","QuestUpdate_RC_FTJ_OlgoSaheila_CloseLeftFortJoySaheila");

DB_QuestDef_CloseEvent("RC_FTJ_OlgoSaheila_SUBA","FTJ_SkepticReleased");
DB_QuestDef_CloseEvent("RC_FTJ_OlgoSaheila_SUBB","FTJ_SkepticReleased");

//collars
DB_QuestDef_AddEvent("RC_FTJ_SourceCollar","QuestUpdate_RC_FTJ_SourceCollar_StartSourceCollar");

DB_QuestDef_State("RC_FTJ_SourceCollar","StartSourceCollar");
DB_QuestDef_State("RC_FTJ_SourceCollar","MetBlackSmith");
DB_QuestDef_State("RC_FTJ_SourceCollar","EndSourceCollar");
DB_QuestDef_State("RC_FTJ_SourceCollar","CollarInfoHan");
DB_QuestDef_State("RC_FTJ_SourceCollar","MetCollarRemover");
DB_QuestDef_State("RC_FTJ_SourceCollar","FoundBrokenCollar");
DB_QuestDef_State("RC_FTJ_SourceCollar","GarethCollarAdvice");
DB_QuestDef_State("RC_FTJ_SourceCollar","CloseEscapeShip");
DB_QuestDef_State("RC_FTJ_SourceCollar","CollarTested");
DB_QuestDef_State("RC_FTJ_SourceCollar","ChampionSmith");
DB_QuestDef_State("RC_FTJ_SourceCollar","LeyaSentGarethDead");
DB_QuestDef_State("RC_FTJ_SourceCollar","LeyaSentGarethSafe");

DB_QuestDef_State("RC_FTJ_SourceCollar","ReturnGarethCollar");

DB_QuestDef_CloseEvent("RC_FTJ_SourceCollar","QuestUpdate_RC_FTJ_SourceCollar_EndSourceCollar");

DB_QuestDef_CloseEvent("RC_FTJ_SourceCollar_SUBA","QuestClose_RC_FTJ_SourceCollar_SUB");
DB_QuestDef_CloseEvent("RC_FTJ_SourceCollar_SUBB","QuestClose_RC_FTJ_SourceCollar_SUB");

//Gheist
DB_QuestDef_State("RC_FTJ_MurderousGheist","StartGheist");
DB_QuestDef_State("RC_FTJ_MurderousGheist","MigoSpot",1);
DB_QuestDef_State("RC_FTJ_MurderousGheist","InfoGheist");
DB_QuestDef_State("RC_FTJ_MurderousGheist","PacifiedGheist");
DB_QuestDef_State("RC_FTJ_MurderousGheist","GheistGaveRing");
DB_QuestDef_State("RC_FTJ_MurderousGheist","EndGheist_Peaceful");
DB_QuestDef_State("RC_FTJ_MurderousGheist","EndGheist");
DB_QuestDef_State("RC_FTJ_MurderousGheist","CloseLeftFortJoyYarrow",-1);
DB_QuestDef_State("RC_FTJ_MurderousGheist","CloseLeftFortJoyMigo",-1);
DB_QuestDef_State("RC_FTJ_MurderousGheist","YarrowReunited",-1);
DB_QuestDef_State("RC_FTJ_MurderousGheist","YarrowDead",-1);

DB_QuestDef_AddEvent("RC_FTJ_MurderousGheist","QuestUpdate_RC_FTJ_MurderousGheist_StartGheist");
//DB_QuestDef_AddEvent("RC_FTJ_MurderousGheist","QuestUpdate_RC_FTJ_MurderousGheist_PacifiedGheist");
DB_QuestDef_CloseEvent("RC_FTJ_MurderousGheist","QuestUpdate_RC_FTJ_MurderousGheist_EndGheist");
//DB_QuestDef_CloseEvent("RC_FTJ_MurderousGheist","QuestUpdate_RC_FTJ_MurderousGheist_EndGheist_Peaceful");

//Source Hound
DB_QuestDef_AddEvent("FTJ_SourceHounds","QuestUpdate_FTJ_SourceHounds_Start");
DB_QuestDef_AddEvent("FTJ_SourceHounds","QuestUpdate_FTJ_SourceHounds_End_Peaceful");
DB_QuestDef_AddEvent("FTJ_SourceHounds","QuestUpdate_FTJ_SourceHounds_End_EmmyDead");
DB_QuestDef_State("FTJ_SourceHounds","Start");
DB_QuestDef_State("FTJ_SourceHounds","End_Peaceful");
DB_QuestDef_State("FTJ_SourceHounds","End_EmmyDead");
DB_QuestDef_State("FTJ_SourceHounds","CloseLeftFortJoy",-1);
DB_QuestDef_CloseEvent("FTJ_SourceHounds","QuestUpdate_FTJ_SourceHounds_End_Peaceful");
DB_QuestDef_CloseEvent("FTJ_SourceHounds","QuestUpdate_FTJ_SourceHounds_End_EmmyDead");

//Arena
DB_QuestDef_State("FTJ_Arena","Know_Arena",1);			//QuestUpdate_FTJ_Arena_Know_Arena
DB_QuestDef_State("FTJ_Arena","Found_Arena",1);			//QuestUpdate_FTJ_Arena_Found_Arena
DB_QuestDef_State("FTJ_Arena","Fought_Arena_Won");	//QuestUpdate_FTJ_Arena_Fought_Arena_Won
DB_QuestDef_State("FTJ_Arena","Found_Arena_Reward",-1);
DB_QuestDef_State("FTJ_Arena","Found_Arena_Tinkerer",-1);
DB_QuestDef_State("FTJ_Arena","Fought_Arena_Loss",-1);	//QuestUpdate_FTJ_Arena_Fought_Arena_Loss
DB_QuestDef_State("FTJ_Arena","CloseLeftFortJoyArena",-1);


//Soul Jar
DB_QuestDef_State("RC_FTJ_SoulJar","WithermooreMet",1); //QuestUpdate_RC_FTJ_SoulJar_WithermooreMet
DB_QuestDef_AddEvent("RC_FTJ_SoulJar","FTJ_SoulJar_Accepted");
DB_QuestDef_UpdateEvent("RC_FTJ_SoulJar","StartSJ","FTJ_SoulJar_Accepted");
DB_QuestDef_UpdateEvent("RC_FTJ_SoulJar","StartSJ2","FTJ_SoulJar_Accepted"); //REMOVED

DB_QuestDef_State("RC_FTJ_SoulJar","WithermooreFreed",1); //QuestUpdate_RC_FTJ_SoulJar_WithermooreFreed
DB_QuestDef_State("RC_FTJ_SoulJar","WithermooreQuestNotFreed",1);
DB_QuestDef_State("RC_FTJ_SoulJar","UsedSoulJar");
DB_QuestDef_State("RC_FTJ_SoulJar","DestroyedSJ",-1);
DB_QuestDef_State("RC_FTJ_SoulJar","EndSJFight");
DB_QuestDef_State("RC_FTJ_SoulJar","EndSJGhost");

DB_QuestDef_State("RC_FTJ_SoulJar","PickupSJ");//NEW JOURNAL ADDITION

DB_QuestDef_State("RC_FTJ_SoulJar","WithermooreKilledBeforeStartSJ",-1);
DB_QuestDef_State("RC_FTJ_SoulJar","WithermooreDeadBeforeStartSJ",-1);
DB_QuestDef_State("RC_FTJ_SoulJar","WithermooreKilledAfterStartSJ",-1);
DB_QuestDef_State("RC_FTJ_SoulJar","WithermooreDeadAfterStartSJ",-1);
DB_QuestDef_State("RC_FTJ_SoulJar","CloseLeftFortJoy",-1);
DB_QuestDef_CloseEvent("RC_FTJ_SoulJar","QuestUpdate_RC_FTJ_SoulJar_UsedSoulJar");

//FTJ_SaheilaFate - PARTY
DB_QuestDef_State("FTJ_SaheilaFate","AmyroMemento",1);
DB_QuestDef_State("FTJ_SaheilaFate","RCStart");
DB_QuestDef_State("FTJ_SaheilaFate","SaheilaAlive");
DB_QuestDef_State("FTJ_SaheilaFate","HintElf");
DB_QuestDef_State("FTJ_SaheilaFate","AmyroInfo");
DB_QuestDef_State("FTJ_SaheilaFate","FoundElf",-1);
DB_QuestDef_State("FTJ_SaheilaFate","NotFoundElf",-1);
DB_QuestDef_State("FTJ_SaheilaFate","FoundElf",-1);


//Saheila's Signet
DB_QuestDef_State("RC_FTJ_SaheilaSignet","SignetStart");
DB_QuestDef_State("RC_FTJ_SaheilaSignet","SignetEnd");

//Teleporter
DB_QuestDef_State("FTJ_Teleporter","Start"); //FTJ_Teleporter_Start
DB_QuestDef_UpdateEvent("FTJ_Teleporter","Start2","QuestUpdate_FTJ_Teleporter_Start"); //REMOVED
DB_QuestDef_State("FTJ_Teleporter","EndOpportunityLost");
DB_QuestDef_State("FTJ_Teleporter","DropGlove");
DB_QuestDef_State("FTJ_Teleporter","Alcove");
DB_QuestDef_State("FTJ_Teleporter","PuzzleStart");
DB_QuestDef_State("FTJ_Teleporter","EndFail");
DB_QuestDef_State("FTJ_Teleporter","End");
DB_QuestDef_State("FTJ_Teleporter","CloseLeftFortJoy",-1);

DB_QuestDef_CloseEvent("FTJ_Teleporter","QuestUpdate_FTJ_Teleporter_EndOpportunityLost");
DB_QuestDef_CloseEvent("FTJ_Teleporter","QuestUpdate_FTJ_Teleporter_End");
DB_QuestDef_CloseEvent("FTJ_Teleporter","QuestUpdate_FTJ_Teleporter_EndFail");

//Elodi's Shakedown
DB_QuestDef_State("FTJ_Elodi","MetElodi");
DB_QuestDef_State("FTJ_Elodi","ElodiDead");
DB_QuestDef_State("FTJ_Elodi","ElodiRescued");
DB_QuestDef_UpdateEvent("FTJ_Elodi","SidedThug", "FTJ_Shakedown_SideBrutes");
DB_QuestDef_State("FTJ_Elodi","ElodiCave"); //QuestUpdate_FTJ_Elodi_ElodiCave

DB_QuestDef_State("FTJ_Elodi","ElodiThanks",-1); //QuestUpdate_FTJ_Elodi_ElodiThanks
DB_QuestDef_State("FTJ_Elodi","CloseLeftFortJoy",-1); 

DB_QuestDef_CloseEvent("FTJ_Elodi","QuestUpdate_FTJ_Elodi_ElodiDead");
DB_QuestDef_CloseEvent("FTJ_Elodi","QuestUpdate_FTJ_Elodi_SidedThug");//NEW JOURNAL ADDITION
//END_REGION
//REGION Swamps
//Illusionist
DB_QuestDef_State("FTJ_SW_Illusionist","FoundMap",1);
DB_QuestDef_State("FTJ_SW_Illusionist","Start_Journal",1);
DB_QuestDef_UpdateEvent("FTJ_SW_Illusionist","Start_Journal2","QuestUpdate_FTJ_SW_Illusionist_Start_Journal"); //REMOVED
DB_QuestDef_State("FTJ_SW_Illusionist","Start_Letter",1);
DB_QuestDef_State("FTJ_SW_Illusionist","Start_FindEntrance",1);
DB_QuestDef_State("FTJ_SW_Illusionist","MeetIllusionist");
DB_QuestDef_State("FTJ_SW_Illusionist","KillIllusionist");
DB_QuestDef_State("FTJ_SW_Illusionist","IllusionistRevive");
DB_QuestDef_State("FTJ_SW_Illusionist","DestroyIllusionistJar",-1);
DB_QuestDef_State("FTJ_SW_Illusionist","AbsorbedIllusionistJar",-1);
DB_QuestDef_State("FTJ_SW_Illusionist","CloseLeftFortJoyStillSecret",-1);
DB_QuestDef_State("FTJ_SW_Illusionist","CloseLeftFortJoyTrompdoy",-1);
DB_QuestDef_State("FTJ_SW_Illusionist","CloseLeftFortJoyDungeon",-1);

//DB_QuestDef_CloseEvent("FTJ_SW_Illusionist","QuestUpdate_FTJ_SW_Illusionist_KillIllusionist");


//FTJ_SW_HurtSeekers (Healing Touch)
DB_QuestDef_State("FTJ_SW_HurtSeekers","Start",1);
DB_QuestDef_State("FTJ_SW_HurtSeekers","JulesWithReward", 1);
DB_QuestDef_State("FTJ_SW_HurtSeekers","JulesNoReward", 1);
DB_QuestDef_State("FTJ_SW_HurtSeekers","KlaudWithReward", 1);
DB_QuestDef_State("FTJ_SW_HurtSeekers","KlaudNoReward", 1);
DB_QuestDef_State("FTJ_SW_HurtSeekers","HealedMatis");
DB_QuestDef_State("FTJ_SW_HurtSeekers","AllHealed",-1);
DB_QuestDef_State("FTJ_SW_HurtSeekers","AllGone",-1);
DB_QuestDef_State("FTJ_SW_HurtSeekers","CloseLeftFortJoy",-1);


//Stuck Hunting
DB_QuestDef_AddEvent("FTJ_SW_StuckHaunting", "FTJ_SW_HelpingGratiana");
DB_QuestDef_State("FTJ_SW_StuckHaunting","BaharaTalk");//REMOVED
DB_QuestDef_State("FTJ_SW_StuckHaunting","FoundMap",1); //QuestUpdate_FTJ_SW_StuckHaunting_FoundMap
DB_QuestDef_UpdateEvent("FTJ_SW_StuckHaunting", "HelpingGratiana", "FTJ_SW_HelpingGratiana"); 
DB_QuestDef_UpdateEvent("FTJ_SW_StuckHaunting", "HelpedGratiana", "FTJ_SW_HelpedGratiana");

DB_QuestDef_State("FTJ_SW_StuckHaunting", "FoundJar"); //QuestUpdate_FTJ_SW_StuckHaunting_FoundJar
DB_QuestDef_State("FTJ_SW_StuckHaunting", "GratianaSecret"); //REMOVED
DB_QuestDef_UpdateEvent("FTJ_SW_StuckHaunting", "AbsorbedGratianaJar", "FTJ_SW_AbsorbedGratianaJar");
DB_QuestDef_UpdateEvent("FTJ_SW_StuckHaunting", "HelpedGratiana", "FTJ_SW_HelpedGratiana");

DB_QuestDef_State("FTJ_SW_StuckHaunting", "DestroyedGratianaJar",-1); //QuestUpdate_FTJ_SW_StuckHaunting_DestroyedGratianaJar
DB_QuestDef_State("FTJ_SW_StuckHaunting", "CloseLeftFortJoy",-1);
DB_QuestDef_State("FTJ_SW_StuckHaunting", "HelpedGratiana", -1);
DB_QuestDef_CloseEvent("FTJ_SW_StuckHaunting", "FTJ_SW_HelpedGratiana");
DB_QuestDef_CloseEvent("FTJ_SW_StuckHaunting", "QuestUpdate_FTJ_SW_StuckHaunting_HelpedGratiana");


//Necromancers
DB_QuestDef_UpdateEvent("FTJ_SW_Necromancers", "DestroyedSoulJars", "FTJ_SW_DestroyedSoulJars");
DB_QuestDef_UpdateEvent("FTJ_SW_Necromancers", "NecromancersDiscuss", "FTJ_SW_NecromancersDiscuss");
DB_QuestDef_CloseEvent("FTJ_SW_Necromancers", "FTJ_SW_DestroyedSoulJars");
DB_QuestDef_State("FTJ_SW_Necromancers","MeetNecromancers", 1);
DB_QuestDef_State("FTJ_SW_Necromancers","FoundMap", 1);
DB_QuestDef_State("FTJ_SW_Necromancers","NecromancersRespawn");
DB_QuestDef_State("FTJ_SW_Necromancers","CloseLeftFortJoy",-1);

DB_QuestDef_State("FTJ_SW_Necromancers","DealSJ");//NEW JOURNAL ADDITION


//Braccus Armory
DB_QuestDef_State("FTJ_SW_BraccusArmory","Start",1); 
DB_QuestDef_State("FTJ_SW_BraccusArmory","OpenDoorArmory");
DB_QuestDef_State("FTJ_SW_BraccusArmory","SeeRaanaarArmory");
DB_QuestDef_State("FTJ_SW_BraccusArmory","FoundMagisterOrders"); //REMOVED
DB_QuestDef_State("FTJ_SW_BraccusArmory","RatHintNoBless");
DB_QuestDef_State("FTJ_SW_BraccusArmory","RatHintGotBless");
DB_QuestDef_State("FTJ_SW_BraccusArmory","RatHintFoundBless");
DB_QuestDef_State("FTJ_SW_BraccusArmory","OpenRaanaarArmory",-1);
DB_QuestDef_State("FTJ_SW_BraccusArmory","CloseLeftFortJoy",-1);

//Cursed Ring
DB_QuestDef_State("FTJ_SW_CursedRing","Start");
DB_QuestDef_State("FTJ_SW_CursedRing","CurseApply");
DB_QuestDef_State("FTJ_SW_CursedRing","TakeOff");
DB_QuestDef_State("FTJ_SW_CursedRing","RemoveCurse");
DB_QuestDef_State("FTJ_SW_CursedRing","MoveToNextCategory");
DB_QuestDef_State("FTJ_SW_CursedRing","CloseLeftLevel",-1);
DB_QuestDef_CloseEvent("FTJ_SW_CursedRing","QuestUpdate_FTJ_SW_CursedRing_RemoveCurse");

//Undead Tower Maze
DB_QuestDef_State("FTJ_SW_UndeadTowerMaze","StartMaze");
DB_QuestDef_State("FTJ_SW_UndeadTowerMaze","StartMazeTeleported");
DB_QuestDef_UpdateEvent("FTJ_SW_UndeadTowerMaze", "StartMaze", "QuestClose_FTJ_SW_UndeadTowerMaze_StartMazeFromAlternative");//Redirecting StartMazeFromAlternative into StartMaze

DB_QuestDef_State("FTJ_SW_UndeadTowerMaze","StartMazeFromAlternative");//REMOVED
//DB_QuestDef_State("FTJ_SW_UndeadTowerMaze","StartMazeFromEnd");
//DB_QuestDef_State("FTJ_SW_UndeadTowerMaze","EnteredMaze");
DB_QuestDef_State("FTJ_SW_UndeadTowerMaze","TwoKeysUsed"); //REMOVED
DB_QuestDef_State("FTJ_SW_UndeadTowerMaze","MazeEncouragement"); //REMOVED
DB_QuestDef_State("FTJ_SW_UndeadTowerMaze","MazeRewardKey"); //REMOVED
DB_QuestDef_State("FTJ_SW_UndeadTowerMaze","CloseLeftFortJoy",-1);

DB_QuestDef_UpdateEvent("FTJ_SW_UndeadTowerMaze", "EndMaze", "QuestClose_FTJ_SW_UndeadTowerMaze_EndMaze");//NEW JOURNAL ADDITION

DB_QuestDef_CloseEvent("FTJ_SW_UndeadTowerMaze","QuestClose_FTJ_SW_UndeadTowerMaze_EndMaze");

//Curse pigs
DB_QuestDef_State("FTJ_SW_CursedPig","SpottedPigs",1);
DB_QuestDef_State("FTJ_SW_CursedPig","BlessedPig",1);
DB_QuestDef_State("FTJ_SW_CursedPig","MeetGuardian");
DB_QuestDef_State("FTJ_SW_CursedPig","FightGuardian");
DB_QuestDef_State("FTJ_SW_CursedPig","PersuadeGuardian");
DB_QuestDef_State("FTJ_SW_CursedPig","BlessedAllPigs");
DB_QuestDef_State("FTJ_SW_CursedPig","MetBlessedPig");
DB_QuestDef_State("FTJ_SW_CursedPig","FoundShrine");
DB_QuestDef_State("FTJ_SW_CursedPig","ToldPig");
DB_QuestDef_State("FTJ_SW_CursedPig","CuredPigAmadia",-1);
DB_QuestDef_State("FTJ_SW_CursedPig","KilledPigAmadia",-1);
DB_QuestDef_State("FTJ_SW_CursedPig","CloseLeftFortJoy",-1); //QuestUpdate_FTJ_SW_CursedPig_CloseLeftFortJoy


//Purged Dragon
DB_QuestDef_AddEvent("FTJ_SW_PurgedDragon","QuestUpdate_FTJ_SW_PurgedDragon_MetWitch");
DB_QuestDef_AddEvent("FTJ_SW_PurgedDragon","QuestUpdate_FTJ_SW_PurgedDragon_MetDragon");
DB_QuestDef_AddEvent("FTJ_SW_PurgedDragon","QuestUpdate_FTJ_SW_PurgedDragon_SlaneInvulnerable");

DB_QuestDef_State("FTJ_SW_PurgedDragon","MetWitch");
DB_QuestDef_State("FTJ_SW_PurgedDragon","SlaneInvulnerable");
DB_QuestDef_State("FTJ_SW_PurgedDragon","TruthofSlane"); //REMOVED
DB_QuestDef_State("FTJ_SW_PurgedDragon","BloodRoseInfo"); //REMOVED
DB_QuestDef_State("FTJ_SW_PurgedDragon","RoseRecipe"); //REMOVED
DB_QuestDef_State("FTJ_SW_PurgedDragon","BraccusDungeon"); //REMOVED
DB_QuestDef_State("FTJ_SW_PurgedDragon","WitchQuest"); //REMOVED
DB_QuestDef_State("FTJ_SW_PurgedDragon","MetDragon");
DB_QuestDef_State("FTJ_SW_PurgedDragon","UnchainedDragon");
DB_QuestDef_State("FTJ_SW_PurgedDragon","DragonInfo");
DB_QuestDef_State("FTJ_SW_PurgedDragon","KilledWitch");
DB_QuestDef_State("FTJ_SW_PurgedDragon","UnpurgedDragon");
DB_QuestDef_State("FTJ_SW_PurgedDragon","DragonPromise");
DB_QuestDef_State("FTJ_SW_PurgedDragon","DragonHelp",-1);
DB_QuestDef_State("FTJ_SW_PurgedDragon","DragonHelpBuff",-1);
DB_QuestDef_State("FTJ_SW_PurgedDragon","DragonDead",-1);
DB_QuestDef_State("FTJ_SW_PurgedDragon","ActEnd",-1);
DB_QuestDef_State("FTJ_SW_PurgedDragon","NoHelp",-1);

//Call to Arms
DB_QuestDef_State("FTJ_SW_CallToArms", "GotCallToArms",1);
DB_QuestDef_State("FTJ_SW_CallToArms", "GotCallToArms_Exter",1);
DB_QuestDef_State("FTJ_SW_CallToArms", "GarethAtShelter",1);
DB_QuestDef_State("FTJ_SW_CallToArms", "FreedCorneredPaladin_Leave",1);
DB_QuestDef_State("FTJ_SW_CallToArms", "GarethAtSeekerCamp");
DB_QuestDef_State("FTJ_SW_CallToArms", "GarethHesitate"); // REMOVED
DB_QuestDef_State("FTJ_SW_CallToArms", "ExterHesitate"); // REMOVED
DB_QuestDef_State("FTJ_SW_CallToArms", "SuggestPurging");	// QuestUpdate_FTJ_SW_CallToArms_SuggestPurging // QuestUpdate_FTJ_SW_Shriekers_GratianaSuggest
DB_QuestDef_State("FTJ_SW_CallToArms", "SourceTotemDestroy");
DB_QuestDef_State("FTJ_SW_CallToArms", "PersuadedGareth");
DB_QuestDef_State("FTJ_SW_CallToArms", "PersuadedExter");
DB_QuestDef_State("FTJ_SW_CallToArms", "AllSeekersDead", -1);
Proc_JDF_CreateCustomFlagsDependency("FTJ_SW_FoundDeadGareth", "FTJ_SW_SawAllSeekersDead", "QuestUpdate_FTJ_SW_CallToArms_AllSeekersDead");
Proc_JDF_CreateCustomFlagsDependency("QuestUpdate_FTJ_SW_CallToArms_GotCallToArms_Exter", "FTJ_SW_SawAllSeekersDead", "QuestUpdate_FTJ_SW_CallToArms_AllSeekersDead");
DB_QuestDef_UpdateEvent("FTJ_SW_CallToArms", "PathCleared", "FTJ_SW_CallToArms_SawPathIsCleared");
DB_QuestDef_State("FTJ_SW_CallToArms", "GarethDiedSourceTotem"); //REMOVED
DB_QuestDef_State("FTJ_SW_CallToArms", "AttackStarted",-1);
DB_QuestDef_State("FTJ_SW_CallToArms", "AttackStartedExter",-1);
DB_QuestDef_CloseEvent("FTJ_SW_CallToArms", "QuestClose_FTJ_SW_CallToArms_AttackStarted"); //QuestClose_FTJ_SW_CallToArms_AttackStarted //QuestClose_FTJ_SW_CallToArms_AttackStartedExter
DB_QuestDef_State("FTJ_SW_CallToArms", "CloseLeftFortJoy",-1);

//NEW JOURNAL ADDITION
DB_QuestDef_State("FTJ_SW_CallToArms", "FoundWand");
DB_QuestDef_State("FTJ_SW_CallToArms", "RallyPointTask");

//Shriekers
DB_QuestDef_State("FTJ_SW_Shriekers","Know_Shrieker",1);		//QuestUpdate_FTJ_SW_Shriekers_Know_Shrieker
DB_QuestDef_State("FTJ_SW_Shriekers","SawShrieker",1);			//QuestUpdate_FTJ_SW_Shriekers_SawShrieker
DB_QuestDef_State("FTJ_SW_Shriekers","GratianaSuggest",1);		//QuestUpdate_FTJ_SW_Shriekers_GratianaSuggest
DB_QuestDef_State("FTJ_SW_Shriekers","FoundWandGratiana",1);	//REMOVED
DB_QuestDef_State("FTJ_SW_Shriekers","BaharaShriekers",1);	//QuestUpdate_FTJ_SW_Shriekers_BaharaShriekers
DB_QuestDef_State("FTJ_SW_Shriekers","YmmitShriekers",1);	//QuestUpdate_FTJ_SW_Shriekers_YmmitShriekers

DB_QuestDef_State("FTJ_SW_Shriekers","GratianaWandRecharge");	//QuestUpdate_FTJ_SW_Shriekers_GratianaWandRecharge
DB_QuestDef_State("FTJ_SW_Shriekers","FoundWandRadeka");
DB_QuestDef_State("FTJ_SW_Shriekers","GaveWandRadeka");		//QuestUpdate_FTJ_SW_Shriekers_GaveWandRadeka
DB_QuestDef_State("FTJ_SW_Shriekers","FoundWandVault");
DB_QuestDef_State("FTJ_SW_Shriekers","FirstKill_Shrieker");
DB_QuestDef_State("FTJ_SW_Shriekers","FoundMagisterOrders");
DB_QuestDef_State("FTJ_SW_Shriekers","GarethHelp");

DB_QuestDef_State("FTJ_SW_Shriekers","TalkGratiana"); //QuestUpdate_FTJ_SW_Shriekers_TalkGratiana

DB_QuestDef_State("FTJ_SW_Shriekers","SlaneShrieker",-1);		//QuestUpdate_FTJ_SW_Shriekers_SlaneShrieker
DB_QuestDef_State("FTJ_SW_Shriekers","Destroy_Shrieker",-1);	//QuestUpdate_FTJ_SW_Shriekers_Destroy_Shrieker
DB_QuestDef_State("FTJ_SW_Shriekers","CloseLeftFortJoy",-1);


//FTJ_SW_Tyrant
DB_QuestDef_State("FTJ_SW_Tyrant","FoundReport",1);
DB_QuestDef_State("FTJ_SW_Tyrant","FoundArms",1);
DB_QuestDef_State("FTJ_SW_Tyrant","FoundLegs",1);
DB_QuestDef_State("FTJ_SW_Tyrant","FoundLowerBody",1);
DB_QuestDef_State("FTJ_SW_Tyrant","FoundIUpperBody",1);
DB_QuestDef_State("FTJ_SW_Tyrant","FoundHelm",1);
DB_QuestDef_State("FTJ_SW_Tyrant","FoundHelmCured",1);
DB_QuestDef_State("FTJ_SW_Tyrant","HelmDemon");
DB_QuestDef_State("FTJ_SW_Tyrant","FoundAll",-1);
DB_QuestDef_State("FTJ_SW_Tyrant","CloseLeftFortJoy",-1);

//END_REGION


//	LV_HoE_Main - QCA_Chapter_03
//REGION Act 1.5

//Lady Vengeance
DB_QuestDef_State("LV_Main", "Start"); //QuestUpdate_LV_Main_Start
DB_QuestDef_State("LV_Main", "MetRiver");
DB_QuestDef_State("LV_Main", "River_ShipInactive");
DB_QuestDef_State("LV_Main", "AlexandarCaptive");
DB_QuestDef_State("LV_Main", "DoorInactive");
DB_QuestDef_State("LV_Main", "AlexandarKey");
DB_QuestDef_State("LV_Main", "MetDoor");
DB_QuestDef_State("LV_Main", "DoorPassword");
DB_QuestDef_State("LV_Main", "InfoMagister");
DB_QuestDef_State("LV_Main", "InfoRat");
DB_QuestDef_State("LV_Main", "InfoShip");
DB_QuestDef_State("LV_Main", "InfoTheMistake");
DB_QuestDef_State("LV_Main", "GetSongBook");
DB_QuestDef_State("LV_Main", "UsedSongBook");
DB_QuestDef_State("LV_Main", "SubjugateShip");
DB_QuestDef_State("LV_Main", "FreeShip");
DB_QuestDef_State("LV_Main", "DallisAssault_Start");
DB_QuestDef_State("LV_Main", "DefeatedDallisLV");
DB_QuestDef_State("LV_Main", "DefeatedDallisFTJLV");
DB_QuestDef_State("LV_Main", "DallisAssault_End");

DB_QuestDef_State("LV_Main", "Tarquin_Met"); 
DB_QuestDef_State("LV_Main", "Tarquin_LizardInfo");
DB_QuestDef_State("LV_Main", "Tarquin_Kill");
DB_QuestDef_State("LV_Main", "MetDoor");
DB_QuestDef_State("LV_Main", "AskedSing");
DB_QuestDef_State("LV_Main", "StayedShip");
DB_QuestDef_State("LV_Main", "NeedControl");
DB_QuestDef_State("LV_Main", "GetIntoDallisRoom");
DB_QuestDef_State("LV_Main", "Start_NoSeeker");

DB_QuestDef_CloseEvent("LV_Main", "QuestUpdate_LV_Main_DallisAssault_End");


// Hall of Echoes
DB_QuestDef_State("LV_HoE_Main", "Start");
DB_QuestDef_State("LV_HoE_Main", "God_Hanging");
DB_QuestDef_State("LV_HoE_Main", "God_Cursed");
DB_QuestDef_State("LV_HoE_Main", "God_Blessed");
DB_QuestDef_UpdateEvent("LV_HoE_Main", "God_Blessed2","QuestUpdate_LV_HoE_Main_God_Blessed");
DB_QuestDef_State("LV_HoE_Main", "ReturnToLV");
DB_QuestDef_State("LV_HoE_Main", "EmptyLV");
DB_QuestDef_State("LV_HoE_Main", "AlexandarDisappeared");
DB_QuestDef_State("LV_HoE_Main", "EndAct");

DB_QuestDef_CloseEvent("LV_HoE_Main", "QuestUpdate_LV_HoE_Main_EndAct");

//END_REGION


//	RC_Main - QCA_Chapter_04
//REGION Dunes

// Wrecked Caravan
DB_QuestDef_State("RC_DW_WreckedCaravan","SawCaravan",1);
DB_QuestDef_State("RC_DW_WreckedCaravan","FindLilian",1);
DB_QuestDef_UpdateEvent("RC_DW_WreckedCaravan","FindLilian", "RC_DU_StartCoverTheTracksCaravan");
DB_QuestDef_State("RC_DW_WreckedCaravan","DwarfSurvivor");
DB_QuestDef_State("RC_DW_WreckedCaravan","SourcerersTaken");
DB_QuestDef_State("RC_DW_WreckedCaravan","HaveSourceVision");
DB_QuestDef_State("RC_DW_WreckedCaravan","KnowOfGhostsContacts");
DB_QuestDef_State("RC_DW_WreckedCaravan","CloseLeftRC",-1);
DB_QuestDef_UpdateEvent("RC_DW_WreckedCaravan","ReportMagister","QuestUpdate_RC_DW_WreckedCaravan_KnowOfGhostsContacts");
DB_QuestDef_UpdateEvent("RC_DW_WreckedCaravan","ReportLohar","QuestUpdate_RC_DW_WreckedCaravan_KnowOfGhostsContacts");
Proc_Journal_RC_DW_WreckedCaravan_SetUp();


// Heroic Rescue
DB_QuestDef_AddEvent("RC_DU_HeroicRescue","QuestUpdate_RC_DU_HeroicRescue_Start");
DB_QuestDef_AddEvent("RC_DU_HeroicRescue","QuestUpdate_RC_DU_HeroicRescue_StartWife");
DB_QuestDef_AddEvent("RC_DU_HeroicRescue","QuestUpdate_RC_DU_HeroicRescue_KilledVoidwoken");
DB_QuestDef_State("RC_DU_HeroicRescue","Start");
DB_QuestDef_State("RC_DU_HeroicRescue","StartWife");
DB_QuestDef_State("RC_DU_HeroicRescue","KilledVoidwoken");
DB_QuestDef_State("RC_DU_HeroicRescue","WifeSurvived");
DB_QuestDef_State("RC_DU_HeroicRescue","WifeDied");
DB_QuestDef_State("RC_DU_HeroicRescue","TaskDefend");
DB_QuestDef_State("RC_DU_HeroicRescue","MariLowBridge");
DB_QuestDef_State("RC_DU_HeroicRescue","MariThank",-1);
DB_QuestDef_CloseEvent("RC_DU_HeroicRescue","QuestUpdate_RC_DU_HeroicRescue_WifeSurvived");
DB_QuestDef_CloseEvent("RC_DU_HeroicRescue","QuestUpdate_RC_DU_HeroicRescue_WifeDied");
//DB_QuestDef_CloseEvent("RC_DU_HeroicRescue","QuestUpdate_RC_DU_HeroicRescue_MariLowBridge");


//Dunes - Storm
DB_QuestDef_State("RC_DU_Storm","Elf_Start");
DB_QuestDef_State("RC_DU_Storm","Mage_Start");
DB_QuestDef_State("RC_DU_Storm","Elf_Finish");
DB_QuestDef_State("RC_DU_Storm","Mage_Finish");
DB_QuestDef_State("RC_DU_Storm","Elves_Killed");
DB_QuestDef_State("RC_DU_Storm","Mage_Killed");

// Dunes - EmptyCamp
DB_QuestDef_State("RC_DU_EmptyCamp","Start");
DB_QuestDef_State("RC_DU_EmptyCamp","Kill");
DB_QuestDef_State("RC_DU_EmptyCamp","Treasure");

//END_REGION
//REGION Wrecker Hills

/**
  RC_DW_ShadowOverDriftwood
 **/
DB_QuestDef_AddEvent("RC_DW_ShadowOverDriftwood", "RC_DW_WC_AtaraxianLair");
DB_QuestDef_AddEvent("RC_DW_ShadowOverDriftwood","QuestUpdate_RC_DW_WC_AtaraxianLair_EnteredWreckersCave");
DB_QuestDef_AddEvent("RC_DW_ShadowOverDriftwood","QuestUpdate_RC_DW_CoverTheTracks_AbandonedHouse_Start");
DB_QuestDef_AddEvent("RC_DW_ShadowOverDriftwood","QuestUpdate_RC_DW_CoverTheTracks_AbandonedHouse_House_found");

DB_QuestDef_State("RC_DW_ShadowOverDriftwood","MordusGiveProof");
DB_QuestDef_State("RC_DW_ShadowOverDriftwood","MordusDropProof");
DB_QuestDef_State("RC_DW_ShadowOverDriftwood", "ReturnToDW"); //NEW JOURNAL ADDITION
DB_QuestDef_State("RC_DW_ShadowOverDriftwood","CargoHint");
DB_QuestDef_State("RC_DW_ShadowOverDriftwood", "HannagLetter");

DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","AbandonedHouse_DwarfWelcome", "RC_DW_HomelessDwarf_Welcome");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","AbandonedHouse_DwarfFail", "RC_DW_HomelessDwarfRefused");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","AbandonedHouse_EnteredCellar", "RC_DW_EnteredAbandonedHouseCellar");

DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","AbandonedHouse_Start","QuestUpdate_RC_DW_CoverTheTracks_AbandonedHouse_Start");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","AbandonedHouse_House_found","QuestUpdate_RC_DW_CoverTheTracks_AbandonedHouse_House_found");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","AbandonedHouse_DwarfKeeperKilled","QuestUpdate_RC_DW_CoverTheTracks_AbandonedHouse_DwarfKeeperKilled");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","AbandonedHouse_PrisonerDwarfRelease","QuestUpdate_RC_DW_CoverTheTracks_AbandonedHouse_PrisonerDwarfRelease");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","AbandonedHouse_PrisonerDwarfKill","QuestUpdate_RC_DW_CoverTheTracks_AbandonedHouse_PrisonerDwarfKill");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","AbandonedHouse_NoteRead","QuestUpdate_RC_DW_CoverTheTracks_AbandonedHouse_NoteRead");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","AbandonedHouse_NoteRead2","QuestUpdate_RC_DW_CoverTheTracks_AbandonedHouse_NoteRead");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","AbandonedHouse_NoteDelivered","QuestUpdate_RC_DW_CoverTheTracks_AbandonedHouse_NoteDelivered");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","AbandonedHouse_NoteDeliveredSecond","QuestUpdate_RC_DW_CoverTheTracks_AbandonedHouse_NoteDeliveredSecond");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","KillMordus", "RC_DW_GotDwarfBossJob");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","GotLilianHostile","RC_DW_GotDwarfBossHostile");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","ShowedMordusAmuletToLohar","QuestUpdate_RC_DW_CoverTheTracks_ShowedMordusAmuletToLohar");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","ShowedMordusAmuletToLoharSecond","QuestUpdate_RC_DW_CoverTheTracks_ShowedMordusAmuletToLoharSecond");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","FoundTerrifiedDwarf","QuestUpdate_RC_DW_WC_AtaraxianLair_FoundTerrifiedDwarf");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","EnteredWreckersCave","QuestUpdate_RC_DW_WC_AtaraxianLair_EnteredWreckersCave");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","GotDraggedUnderground","QuestUpdate_RC_DW_WC_AtaraxianLair_GotDraggedUnderground");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","MordusToldAboutDeathFog", "RC_DW_WC_AskedMordusAboutDeathFogWeapons");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","KnowAboutDeathFogInCave","QuestUpdate_RC_DW_WC_AtaraxianLair_KnowAboutDeathFogInCave");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","KilledBoss","QuestUpdate_RC_DW_WC_AtaraxianLair_KilledBoss");
DB_QuestDef_UpdateEvent("RC_DW_ShadowOverDriftwood","DidNotKillBoss","QuestUpdate_RC_DW_WC_AtaraxianLair_DidNotKillBoss");

DB_QuestDef_CloseEvent("RC_DW_ShadowOverDriftwood","QuestUpdate_RC_DW_WC_AtaraxianLair_DidNotKillBoss");
DB_QuestDef_CloseEvent("RC_DW_ShadowOverDriftwood","RC_DW_GotDwarfBossHostile");
DB_QuestDef_CloseEvent("RC_DW_ShadowOverDriftwood","QuestUpdate_RC_DW_CoverTheTracks_ShowedMordusAmuletToLohar");
DB_QuestDef_CloseEvent("RC_DW_ShadowOverDriftwood","QuestUpdate_RC_DW_CoverTheTracks_ShowedMordusAmuletToLoharSecond");

DB_QuestDef_State("RC_DW_ShadowOverDriftwood","FoundMordus");
DB_QuestDef_State("RC_DW_ShadowOverDriftwood","LoharDead",-1);
DB_QuestDef_State("RC_DW_ShadowOverDriftwood","CloseLeftRC",-1);


/**
 * RC_WH_SeaGodStatue
 */
DB_QuestDef_AddEvent("RC_WH_SeaGodStatue","QuestUpdate_RC_WH_SeaGodStatue_DiscoveredStatue");
DB_QuestDef_State("RC_WH_SeaGodStatue","DiscoveredStatue");
DB_QuestDef_State("RC_WH_SeaGodStatue","TorchesDoused");
DB_QuestDef_State("RC_WH_SeaGodStatue","AllTorchesLit");
DB_QuestDef_State("RC_WH_SeaGodStatue","Reward");
DB_QuestDef_State("RC_WH_SeaGodStatue","CloseLeftRC",-1);
DB_QuestDef_CloseEvent("RC_WH_SeaGodStatue","QuestUpdate_RC_WH_SeaGodStatue_Reward");

/**
 * RC_WH_BottledWish
 */
DB_QuestDef_AddEvent("RC_WH_BottledWish","QuestUpdate_RC_WH_BottledWish_FoundBottle");
DB_QuestDef_State("RC_WH_BottledWish","FoundBottle");
DB_QuestDef_State("RC_WH_BottledWish","ImprisonDjinn");
DB_QuestDef_State("RC_WH_BottledWish","TransferredBottleToNpc");
DB_QuestDef_State("RC_WH_BottledWish","FightDjinn");
DB_QuestDef_State("RC_WH_BottledWish","EndPowerBad");
DB_QuestDef_State("RC_WH_BottledWish","EndPowerGood");
DB_QuestDef_State("RC_WH_BottledWish","EndKnowledgeBad");
DB_QuestDef_State("RC_WH_BottledWish","EndKnowledgeGood");
DB_QuestDef_State("RC_WH_BottledWish","ContRichesBad");
DB_QuestDef_State("RC_WH_BottledWish","EndRichesBad",-1);
DB_QuestDef_State("RC_WH_BottledWish","EndRichesGood");
DB_QuestDef_State("RC_WH_BottledWish","EndPurgeBad");
DB_QuestDef_State("RC_WH_BottledWish","EndPurgeGood");
DB_QuestDef_State("RC_WH_BottledWish","DjinnFreedom");
DB_QuestDef_State("RC_WH_BottledWish","DjinnDied");
DB_QuestDef_State("RC_WH_BottledWish","MoveToNextCategory");
DB_QuestDef_State("RC_WH_BottledWish","CloseLeftRCNoBottle",-1);
DB_QuestDef_CloseEvent("RC_WH_BottledWish","QuestUpdate_RC_WH_BottledWish_DjinnFreedom");
DB_QuestDef_CloseEvent("RC_WH_BottledWish","QuestUpdate_RC_WH_BottledWish_DjinnDied");



//--- Wreckers Cave - The Dead Trader
//Start quests
DB_QuestDef_AddEvent("RC_WC_TheDeadTrader", "QuestUpdate_RC_WC_TheDeadTrader_FoundBlood");
DB_QuestDef_AddEvent("RC_WC_TheDeadTrader", "QuestUpdate_RC_WC_TheDeadTrader_KnowsTraderWasKilled");
DB_QuestDef_AddEvent("RC_WC_TheDeadTrader", "QuestUpdate_RC_WC_TheDeadTrader_AgreedToTakeRevenge");
DB_QuestDef_AddEvent("RC_WC_TheDeadTrader", "QuestUpdate_RC_WC_TheDeadTrader_ElfAteGarvanHead");
//Ghost and leading up to ghost
DB_QuestDef_State("RC_WC_TheDeadTrader", "FoundBlood");
DB_QuestDef_State("RC_WC_TheDeadTrader", "FoundGrave");
DB_QuestDef_State("RC_WC_TheDeadTrader", "AteTraderLimb");
DB_QuestDef_State("RC_WC_TheDeadTrader", "KnowsTraderWasKilled");
DB_QuestDef_State("RC_WC_TheDeadTrader", "AgreedToTakeRevenge");
//If killing Garvan
DB_QuestDef_State("RC_WC_TheDeadTrader", "KilledGarvan");
DB_QuestDef_State("RC_WC_TheDeadTrader", "ElfAteGarvanHead");
DB_QuestDef_State("RC_WC_TheDeadTrader", "CloseKilledGarvan");
DB_QuestDef_State("RC_WC_TheDeadTrader", "CloseInformedGhostOfHeadEaten");
DB_QuestDef_State("RC_WC_TheDeadTrader", "CloseGhostConsumed");
//DB_QuestDef_State("RC_WC_TheDeadTrader", "KnowsTradersStashLocation");
//Close
DB_QuestDef_State("RC_WC_TheDeadTrader", "CloseLeftRC",-1);
DB_QuestDef_CloseEvent("RC_WC_TheDeadTrader", "QuestUpdate_RC_WC_TheDeadTrader_CloseKilledGarvan");
DB_QuestDef_CloseEvent("RC_WC_TheDeadTrader", "QuestUpdate_RC_WC_TheDeadTrader_CloseInformedGhostOfHeadEaten");
DB_QuestDef_CloseEvent("RC_WC_TheDeadTrader", "QuestUpdate_RC_WC_TheDeadTrader_CloseGhostConsumed");

//END_REGION
//REGION Driftwood

// The Three Altars
//THESE ARE NOW ALL MYSTERY ENTRIES
DB_QuestDef_State("RC_ThreeAltars","LivingFirst");
DB_QuestDef_State("RC_ThreeAltars","LivingSecond");
DB_QuestDef_State("RC_ThreeAltars","LivingThird");
DB_QuestDef_UpdateEvent("RC_ThreeAltars","LivingSecond","RC_ThreeAltars_Visit_3");
DB_QuestDef_UpdateEvent("RC_ThreeAltars","LivingThird","RC_ThreeAltars_Visit_4");
DB_QuestDef_State("RC_ThreeAltars","UndeadRefusedFirst");
DB_QuestDef_State("RC_ThreeAltars","UndeadRefusedSecond");
DB_QuestDef_State("RC_ThreeAltars","UndeadRefusedThird");
DB_QuestDef_UpdateEvent("RC_ThreeAltars","UndeadRefusedSecond","RC_ThreeAltars_Refused_3");
DB_QuestDef_UpdateEvent("RC_ThreeAltars","UndeadRefusedThird","RC_ThreeAltars_Refused_4");
DB_QuestDef_CloseEvent("RC_ThreeAltars","QuestUpdate_RC_ThreeAltars_LivingThird");
DB_QuestDef_CloseEvent("RC_ThreeAltars","QuestUpdate_RC_ThreeAltars_UndeadRefusedThird");
DB_QuestDef_State("RC_ThreeAltars","CloseLeftRC",-1); //REMOVED


//RC_DW_GarvanSupplies (Linked with Dead Trader situation)
DB_QuestDef_AddEvent("RC_DW_GarvanSupplies", "QuestUpdate_RC_DW_GarvanSupplies_AgreedToFindGarvanSupplies");
DB_QuestDef_State("RC_DW_GarvanSupplies","MetGarvan",1);

DB_QuestDef_State("RC_DW_GarvanSupplies","AgreedToFindGarvanSupplies");
DB_QuestDef_State("RC_DW_GarvanSupplies","ArrivedAtAttackLocation");
DB_QuestDef_State("RC_DW_GarvanSupplies","FoundGarvanSupplies");
DB_QuestDef_State("RC_DW_GarvanSupplies","DestroyedGarvanSupplies");
DB_QuestDef_State("RC_DW_GarvanSupplies","CloseInformedSuppliesDestroyed");
DB_QuestDef_State("RC_DW_GarvanSupplies","CloseGaveGarvanSupplies");
DB_QuestDef_State("RC_DW_GarvanSupplies","CloseGarvanDead");
DB_QuestDef_State("RC_DW_GarvanSupplies","CloseLeftRC",-1);

DB_QuestDef_CloseEvent("RC_DW_GarvanSupplies", "QuestUpdate_RC_DW_GarvanSupplies_CloseGaveGarvanSupplies");
DB_QuestDef_CloseEvent("RC_DW_GarvanSupplies", "QuestUpdate_RC_DW_GarvanSupplies_CloseInformedSuppliesDestroyed");
DB_QuestDef_CloseEvent("RC_DW_GarvanSupplies", "QuestUpdate_RC_DW_GarvanSupplies_CloseGarvanDead");

//RC_DW_GrandmasterArrest
DB_QuestDef_State("RC_DW_GrandmasterArrest","StartKemm");
DB_QuestDef_State("RC_DW_GrandmasterArrest","SaltMineData_StartKemm");
DB_QuestDef_State("RC_DW_GrandmasterArrest","SaltMineData_NoStartKemm");
DB_QuestDef_State("RC_DW_GrandmasterArrest","ArhuNoteToSaltmines");
DB_QuestDef_State("RC_DW_GrandmasterArrest","ThomasProof_StartKemm");
DB_QuestDef_State("RC_DW_GrandmasterArrest","ThomasProof_NoStartKemm");
DB_QuestDef_State("RC_DW_GrandmasterArrest","EvidenceToKemm");
DB_QuestDef_State("RC_DW_GrandmasterArrest","EvidenceToThomas");
DB_QuestDef_State("RC_DW_GrandmasterArrest","AssassinateAnhar");
DB_QuestDef_State("RC_DW_GrandmasterArrest","FindAnhar");
DB_QuestDef_State("RC_DW_GrandmasterArrest","AnharAssassinationEnd");
DB_QuestDef_State("RC_DW_GrandmasterArrest","KemmDead");
DB_QuestDef_State("RC_DW_GrandmasterArrest","ThomasDead");
DB_QuestDef_State("RC_DW_GrandmasterArrest","ThomasDead_Traitor");
DB_QuestDef_State("RC_DW_GrandmasterArrest","AnharDead");
DB_QuestDef_State("RC_DW_GrandmasterArrest","ThomasSuspiciousNatalieCat");
DB_QuestDef_State("RC_DW_GrandmasterArrest","ThomasSuspiciousAnhar");

//RC_DW_Looter
DB_QuestDef_State("RC_DW_Looter","TalkedToLooter");
DB_QuestDef_State("RC_DW_Looter","LootersAreDead");
DB_QuestDef_State("RC_DW_Looter","LootersEscaped");
DB_QuestDef_State("RC_DW_Looter","GhostAskBurn");
DB_QuestDef_State("RC_DW_Looter","CorpseLoot");
DB_QuestDef_State("RC_DW_Looter","CorpseBurn");

//RC_DW_TrappedHusband
DB_QuestDef_State("RC_DW_TrappedHusband","Husband_IsTrapped");
DB_QuestDef_State("RC_DW_TrappedHusband","Husband_IsUnderAttack");
DB_QuestDef_State("RC_DW_TrappedHusband","Husband_IsSafe");
DB_QuestDef_State("RC_DW_TrappedHusband","Husband_IsDead");

//RC_DW_BridgeDog
DB_QuestDef_State("RC_DW_BridgeDog","TalkToGuard");
DB_QuestDef_State("RC_DW_BridgeDog","TalkToDog");
DB_QuestDef_State("RC_DW_BridgeDog","DogKeep");
DB_QuestDef_State("RC_DW_BridgeDog","DogKilled");
DB_QuestDef_State("RC_DW_BridgeDog","DogEscaped");

//QuestAdd_RC_DW_FunnyMeat
//QuestClose_RC_DW_FunnyMeat

//RC_DW_FunnyMeat
DB_QuestDef_State("RC_DW_FunnyMeat","WantedPoster");
DB_QuestDef_State("RC_DW_FunnyMeat","Magister_Lead");
DB_QuestDef_State("RC_DW_FunnyMeat","ExMagister_Lead");
DB_QuestDef_State("RC_DW_FunnyMeat","Magister_InvestigatingOfficer");
DB_QuestDef_State("RC_DW_FunnyMeat","ExMagister_ToldCookAlive");
DB_QuestDef_State("RC_DW_FunnyMeat","ExMagister_ToldCookDead");
DB_QuestDef_State("RC_DW_FunnyMeat","ExMagister_ToldCookOver");
DB_QuestDef_State("RC_DW_FunnyMeat","HarrickGhost_Lead",1);
DB_QuestDef_State("RC_DW_FunnyMeat","Chest_Talk");
DB_QuestDef_State("RC_DW_FunnyMeat","Chest_Escape");
DB_QuestDef_State("RC_DW_FunnyMeat","Chest_Dead");
DB_QuestDef_State("RC_DW_FunnyMeat","Chest_Lead");
DB_QuestDef_State("RC_DW_FunnyMeat","Cook_Lead");
DB_QuestDef_State("RC_DW_FunnyMeat","Cook_AteMeat");
DB_QuestDef_State("RC_DW_FunnyMeat","Cook_FoundRing");
DB_QuestDef_State("RC_DW_FunnyMeat","Ghost_PromisedToReturnRing");
DB_QuestDef_State("RC_DW_FunnyMeat","Cook_FoundLedger");
DB_QuestDef_State("RC_DW_FunnyMeat","Cook_HasSrongEvidance");
DB_QuestDef_State("RC_DW_FunnyMeat","Cook_Confronted");
DB_QuestDef_State("RC_DW_FunnyMeat","Cook_Killed");
DB_QuestDef_State("RC_DW_FunnyMeat","Cook_ReportedAlive");
DB_QuestDef_State("RC_DW_FunnyMeat","Cook_ReportedTasked");
DB_QuestDef_State("RC_DW_FunnyMeat","Cook_ReportedDead");
DB_QuestDef_State("RC_DW_FunnyMeat","Investigation_Over");
DB_QuestDef_State("RC_DW_FunnyMeat","Investigation_Over_OfficerDead");

DB_QuestDef_State("RC_DW_FunnyMeat","CloseLeftRCMurdererSecret",-1);
DB_QuestDef_State("RC_DW_FunnyMeat","CloseLeftRCMurdererAlive",-1);

//NEW JOURNAL ADDITION
DB_QuestDef_State("RC_DW_FunnyMeat","ExMagister_ConfrontDead"); //QuestUpdate_RC_DW_FunnyMeat_ExMagister_ConfrontDead
DB_QuestDef_UpdateEvent("RC_DW_FunnyMeat","Break_Magister_Lead","QuestUpdate_RC_DW_FunnyMeat_Magister_Lead");
DB_QuestDef_UpdateEvent("RC_DW_FunnyMeat","PromisedCook","RC_DW_Tavern_Chef_WonTrust"); //QuestUpdate_RC_DW_FunnyMeat_PromisedCook
DB_QuestDef_UpdateEvent("RC_DW_FunnyMeat","Cook_Dead","QuestUpdate_RC_DW_FunnyMeat_Cook_Killed");

DB_QuestDef_State("RC_DW_FunnyMeat","OfficerDead_CookAlive");

DB_QuestDef_UpdateEvent("RC_DW_FunnyMeat","LearnInvestigation","QuestUpdate_RC_DW_FunnyMeat_Magister_Lead");
DB_QuestDef_UpdateEvent("RC_DW_FunnyMeat","LearnInvestigation","QuestUpdate_RC_DW_FunnyMeat_ExMagister_Lead");

DB_QuestDef_State("RC_DW_FunnyMeat","Cook_Officer_Dead",-1);//QuestUpdate_RC_DW_FunnyMeat_Cook_Officer_Dead

DB_QuestDef_CloseEvent("RC_DW_FunnyMeat", "QuestUpdate_RC_DW_FunnyMeat_Investigation_Over");
DB_QuestDef_CloseEvent("RC_DW_FunnyMeat", "QuestUpdate_RC_DW_FunnyMeat_Investigation_Over_OfficerDead");
DB_QuestDef_CloseEvent("RC_DW_FunnyMeat", "QuestUpdate_RC_DW_FunnyMeat_OfficerDead_CookAlive");

DB_QuestDef_CloseEvent("RC_DW_FunnyMeat_SUBA", "QuestUpdate_RC_DW_FunnyMeat_ExMagister_ConfrontDead");
DB_QuestDef_CloseEvent("RC_DW_FunnyMeat_SUBA", "QuestUpdate_RC_DW_FunnyMeat_ExMagister_ToldCookDead");
DB_QuestDef_CloseEvent("RC_DW_FunnyMeat_SUBA", "QuestUpdate_RC_DW_FunnyMeat_Cook_ReportedDead");
DB_QuestDef_CloseEvent("RC_DW_FunnyMeat_SUBB", "QuestUpdate_RC_DW_FunnyMeat_Cook_ReportedDead");
DB_QuestDef_CloseEvent("RC_DW_FunnyMeat_SUBC", "QuestUpdate_RC_DW_FunnyMeat_Cook_Killed");
DB_QuestDef_CloseEvent("RC_DW_FunnyMeat_SUBC", "QuestUpdate_RC_DW_FunnyMeat_Investigation_Over_OfficerDead");
DB_QuestDef_CloseEvent("RC_DW_FunnyMeat_SUBB", "QuestUpdate_RC_DW_FunnyMeat_Investigation_Over_OfficerDead");
DB_QuestDef_CloseEvent("RC_DW_FunnyMeat_SUBC", "QuestUpdate_RC_DW_FunnyMeat_OfficerDead_CookAlive");
DB_QuestDef_CloseEvent("RC_DW_FunnyMeat_SUBB", "QuestUpdate_RC_DW_FunnyMeat_OfficerDead_CookAlive");


//Unusual barrel
DB_QuestDef_AddEvent("RC_DW_HidingTinkerer", "QuestUpdate_RC_DW_HidingTinkerer_Tinkerer_Talked");

DB_QuestDef_State("RC_DW_HidingTinkerer","Tinkerer_Trust");
DB_QuestDef_State("RC_DW_HidingTinkerer","Tinkerer_Officer");
DB_QuestDef_State("RC_DW_HidingTinkerer","Tinkerer_Teach");
DB_QuestDef_State("RC_DW_HidingTinkerer","Tinkerer_TeachReward");
DB_QuestDef_State("RC_DW_HidingTinkerer","Tinkerer_Left");

DB_QuestDef_State("RC_DW_HidingTinkerer","Tinkerer_PersuadedEscape"); //QuestUpdate_RC_DW_HidingTinkerer_Tinkerer_PersuadedEscape
DB_QuestDef_State("RC_DW_HidingTinkerer","Tinkerer_Talked"); //
DB_QuestDef_State("RC_DW_HidingTinkerer","Tinkerer_KnowBomb"); // QuestUpdate_RC_DW_HidingTinkerer_Tinkerer_KnowBomb
DB_QuestDef_State("RC_DW_HidingTinkerer","Tinkerer_Betrayed"); // QuestUpdate_RC_DW_HidingTinkerer_Tinkerer_Betrayed
DB_QuestDef_State("RC_DW_HidingTinkerer","Tinkerer_BetrayedBomb");//QuestUpdate_RC_DW_HidingTinkerer_Tinkerer_BetrayedBomb
DB_QuestDef_State("RC_DW_HidingTinkerer","Tinkerer_KilledFactory");
DB_QuestDef_State("RC_DW_HidingTinkerer","Tinkerer_KilledOutside"); //REMOVED
DB_QuestDef_State("RC_DW_HidingTinkerer","Tinkerer_Escaped");
DB_QuestDef_State("RC_DW_HidingTinkerer","CloseLeftRC",-1);

DB_QuestDef_CloseEvent("RC_DW_HidingTinkerer", "QuestUpdate_RC_DW_HidingTinkerer_Tinkerer_Left");
DB_QuestDef_CloseEvent("RC_DW_HidingTinkerer", "QuestUpdate_RC_DW_HidingTinkerer_Tinkerer_KilledFactory");
DB_QuestDef_CloseEvent("RC_DW_HidingTinkerer", "QuestUpdate_RC_DW_HidingTinkerer_Tinkerer_KilledOutside"); //REMOVED

//NEW JOURNAL ADDITION
DB_QuestDef_UpdateEvent("RC_DW_HidingTinkerer","Tinkerer_Trust_Betray","QuestUpdate_RC_DW_HidingTinkerer_Tinkerer_Trust");
DB_QuestDef_UpdateEvent("RC_DW_HidingTinkerer","Tinkerer_Trust_Free","QuestUpdate_RC_DW_HidingTinkerer_Tinkerer_Trust");


//Dock kids
DB_QuestDef_AddEvent("RC_DW_Dock_Kids","QuestUpdate_RC_DW_Dock_Kids_Start");
DB_QuestDef_AddEvent("RC_DW_Dock_Kids","QuestUpdate_RC_DW_Dock_Kids_FoundLimb");

DB_QuestDef_State("RC_DW_Dock_Kids","Start");
DB_QuestDef_State("RC_DW_Dock_Kids","FoundLimb");
DB_QuestDef_State("RC_DW_Dock_Kids","MakeCry");
DB_QuestDef_State("RC_DW_Dock_Kids","Leave");

DB_QuestDef_CloseEvent("RC_DW_Dock_Kids","QuestUpdate_RC_DW_Dock_Kids_MakeCry");
DB_QuestDef_CloseEvent("RC_DW_Dock_Kids","QuestUpdate_RC_DW_Dock_Kids_Leave");

//RC_DW_FishScholar (Fish scholar)
//NOTE; this situation has been removed; no add event - we keep the rest for save games support, if player already started it
DB_QuestDef_State("RC_DW_FishScholar","Start"); // QuestUpdate_RC_DW_FishScholar_Start
DB_QuestDef_State("RC_DW_FishScholar","Red"); // QuestUpdate_RC_DW_FishScholar_Red
DB_QuestDef_State("RC_DW_FishScholar","Yellow");  // QuestUpdate_RC_DW_FishScholar_Yellow
DB_QuestDef_State("RC_DW_FishScholar","Brown"); // QuestUpdate_RC_DW_FishScholar_Brown
DB_QuestDef_State("RC_DW_FishScholar","NoFish"); // QuestUpdate_RC_DW_FishScholar_NoFish
DB_QuestDef_State("RC_DW_FishScholar","CloseLeftRC",-1);
DB_QuestDef_CloseEvent("RC_DW_FishScholar","QuestUpdate_RC_DW_FishScholar_NoFish");

//RC_DW_CaptainsGhost
DB_QuestDef_State("RC_DW_CaptiansGhost","TalkedToCapitan");
DB_QuestDef_State("RC_DW_CaptiansGhost","TalkedToGhost");
DB_QuestDef_State("RC_DW_CaptiansGhost","AgreedToKillCaptian");
DB_QuestDef_State("RC_DW_CaptiansGhost","RefusedToKillCaptian");
DB_QuestDef_State("RC_DW_CaptiansGhost","CaptainsGhostPersuadeSuccus");
DB_QuestDef_State("RC_DW_CaptiansGhost","CaptianGotHeartAttack");
DB_QuestDef_State("RC_DW_CaptiansGhost","IKilledTheCaptain");
DB_QuestDef_State("RC_DW_CaptiansGhost","BothGone");
DB_QuestDef_State("RC_DW_CaptiansGhost","BothGoneDead");


//Fisherman Ring (Lost and found)
DB_QuestDef_AddEvent("RC_DW_FishermanRing","QuestUpdate_RC_DW_FishermanRing_Start");
DB_QuestDef_AddEvent("RC_DW_FishermanRing","QuestUpdate_RC_DW_FishermanRing_FoundRing");

DB_QuestDef_State("RC_DW_FishermanRing","Start");
DB_QuestDef_State("RC_DW_FishermanRing","AgreedRing");
DB_QuestDef_State("RC_DW_FishermanRing","FoundRing");
DB_QuestDef_State("RC_DW_FishermanRing","KeptRing",-1);
DB_QuestDef_State("RC_DW_FishermanRing","GaveRing",-1);
DB_QuestDef_State("RC_DW_FishermanRing","Fail",-1);
DB_QuestDef_State("RC_DW_FishermanRing","VoidwokenLagan");
DB_QuestDef_State("RC_DW_FishermanRing","VoidwokenPlayer");
DB_QuestDef_State("RC_DW_FishermanRing","VoidwokenNoLagan");
DB_QuestDef_State("RC_DW_FishermanRing","LaganDead",-1);

//RC_DW_Harmon
DB_QuestDef_State("RC_DW_Harmon","Start");
DB_QuestDef_State("RC_DW_Harmon","Success");
DB_QuestDef_State("RC_DW_Harmon","Fail");

//RC_DW_PSidersKiss
DB_QuestDef_State("RC_DW_SpidersKiss","Start");
DB_QuestDef_State("RC_DW_SpidersKiss","Completed",-1);
DB_QuestDef_State("RC_DW_SpidersKiss","DrunkElfRefSpider");
DB_QuestDef_State("RC_DW_SpidersKiss","CloseLeftRC",-1);
DB_QuestDef_State("RC_DW_SpidersKiss","SpiderDead",-1);

//RC_DW_TheDrunkenSailor
DB_QuestDef_State("RC_DW_TheDrunkenSailor","TalkedToCaptain",1);
DB_QuestDef_State("RC_DW_TheDrunkenSailor","CaptainDead");
DB_QuestDef_State("RC_DW_TheDrunkenSailor","TalkedToStubbs",1);
DB_QuestDef_State("RC_DW_TheDrunkenSailor","CaptainAskedToStopBell",1);
DB_QuestDef_State("RC_DW_TheDrunkenSailor","BellStopped");
DB_QuestDef_State("RC_DW_TheDrunkenSailor","GotLocationOfCompass");
DB_QuestDef_State("RC_DW_TheDrunkenSailor","SourceSuckedCaptainsGhost",-1);
DB_QuestDef_State("RC_DW_TheDrunkenSailor","CaptainDeadNoGhost",-1);
DB_QuestDef_State("RC_DW_TheDrunkenSailor","CaptainGhostLeft",-1);
DB_QuestDef_State("RC_DW_TheDrunkenSailor","FoundCompass",-1);
DB_QuestDef_State("RC_DW_TheDrunkenSailor","CompassGone",-1);
DB_QuestDef_State("RC_DW_TheDrunkenSailor","CloseLeftRC",-1);

DB_QuestDef_AddEvent("RC_DW_Arena","QuestUpdate_RC_DW_Arena_LearnedAboutArena");
DB_QuestDef_AddEvent("RC_DW_Arena","QuestUpdate_RC_DW_Arena_LearnedAboutArena_Blaithin");

//Driftwood Arena Arena
DB_QuestDef_State("RC_DW_Arena","LearnedAboutArena",1);
DB_QuestDef_State("RC_DW_Arena","LearnedAboutArena_Blaithin",1);
DB_QuestDef_State("RC_DW_Arena","ArenaFound",1);
DB_QuestDef_State("RC_DW_Arena","ArenaTrial_Lost");
DB_QuestDef_State("RC_DW_Arena","RoundTwoWon_VoidwokenAlone");
DB_QuestDef_State("RC_DW_Arena","RoundTwoWon_MurgaVoidwoken");
DB_QuestDef_State("RC_DW_Arena","EnemiesDebuffed",1);
DB_QuestDef_State("RC_DW_Arena","ArenaChampion");
DB_QuestDef_State("RC_DW_Arena","ArenaChampion_Lost",-1);
DB_QuestDef_State("RC_DW_Arena","ArenaChampion_Lost_HadTitle");
DB_QuestDef_State("RC_DW_Arena","Murga_TheIncident"); //REMOVED
DB_QuestDef_State("RC_DW_Arena","Murga_HerTactics"); //REMOVED
DB_QuestDef_State("RC_DW_Arena","Murga_Dead"); 
DB_QuestDef_State("RC_DW_Arena","Murga_NeedToImpress");
DB_QuestDef_State("RC_DW_Arena","Murga_Persuaded");
DB_QuestDef_State("RC_DW_Arena","ArenaMaster_TalkToMurga");
DB_QuestDef_State("RC_DW_Arena","Murga_ChallengedMe");
DB_QuestDef_State("RC_DW_Arena","Arena_BlindfoldStarted");
DB_QuestDef_State("RC_DW_Arena","Arena_BlindfoldRemoved");
DB_QuestDef_State("RC_DW_Arena","Arena_BlindfoldWon");
DB_QuestDef_State("RC_DW_Arena","Murga_WillNotFight");
DB_QuestDef_State("RC_DW_Arena","ChampionKey");
DB_QuestDef_State("RC_DW_Arena","Treasury_Entered");
DB_QuestDef_State("RC_DW_Arena","Treasury_Looted",-1);

DB_QuestDef_State("RC_DW_Arena","CloseLeftRC",-1);
DB_QuestDef_State("RC_DW_Arena","CloseLeftRC_Champion",-1);

//NEW JOURNAL ADDITION
DB_QuestDef_State("RC_DW_Arena","Murga_Fight"); //QuestUpdate_RC_DW_Arena_Murga_Fight

//Surprise Date
DB_QuestDef_State("RC_DW_SurpriseDate","Lovrik_PersuasionFailed",1);
DB_QuestDef_State("RC_DW_SurpriseDate","Lovrik_PersuasionSuccess",1);
DB_QuestDef_State("RC_DW_SurpriseDate","Lovrik_PaidForLove_Female");
DB_QuestDef_State("RC_DW_SurpriseDate","Lovrik_PaidForLove_Male");
DB_QuestDef_State("RC_DW_SurpriseDate","Lovrik_PaidForLove_Surprise");
DB_QuestDef_State("RC_DW_SurpriseDate","Lizard_Iescaped");
DB_QuestDef_State("RC_DW_SurpriseDate","Lizard_Iescaped_CloseJournal",-1);
DB_QuestDef_State("RC_DW_SurpriseDate","Lizard_IamAsshole");
DB_QuestDef_State("RC_DW_SurpriseDate","Lizard_IamAsshole_CloseJournal",-1);
DB_QuestDef_State("RC_DW_SurpriseDate","Lizard_Failed",-1);
DB_QuestDef_State("RC_DW_SurpriseDate","SexHappened");
DB_QuestDef_State("RC_DW_SurpriseDate","SexHappened_WasGreat");
DB_QuestDef_State("RC_DW_SurpriseDate","Thugs_Dead");
DB_QuestDef_State("RC_DW_SurpriseDate","Thugs_LootLocation"); //MOVED TO Missing Equipment
DB_QuestDef_State("RC_DW_SurpriseDate","RedPrince_Princess",-1);
DB_QuestDef_State("RC_DW_SurpriseDate","Thugs_GaveLoot"); //MOVED TO Missing Equipment
DB_QuestDef_State("RC_DW_SurpriseDate","Lovrik_AboutLivy");
DB_QuestDef_State("RC_DW_SurpriseDate","Lovrik_Escaped",-1);
DB_QuestDef_State("RC_DW_SurpriseDate","Lovrik_DeathRevenge",-1);
DB_QuestDef_State("RC_DW_SurpriseDate","Lizard_Dead",-1);
DB_QuestDef_State("RC_DW_SurpriseDate","CloseLeftRC",-1);
DB_QuestDef_State("RC_DW_SurpriseDate","Lovrik_OffTheHook",-1);

//Missing Equipment
DB_QuestDef_AddEvent("RC_DW_MissingEquipment","QuestUpdate_RC_DW_SurpriseDate_Thugs_GaveLoot");
DB_QuestDef_UpdateEvent("RC_DW_MissingEquipment","Thugs_GaveLoot","QuestUpdate_RC_DW_SurpriseDate_Thugs_GaveLoot");
DB_QuestDef_UpdateEvent("RC_DW_MissingEquipment","Thugs_LootLocation","QuestUpdate_RC_DW_SurpriseDate_Thugs_LootLocation");
DB_QuestDef_State("RC_DW_MissingEquipment","AskedLohar_Scram"); //QuestUpdate_RC_DW_MissingEquipment_AskedLohar_Scram
DB_QuestDef_State("RC_DW_MissingEquipment","AskedLohar_Help"); //QuestUpdate_RC_DW_MissingEquipment_AskedLohar_Help
DB_QuestDef_State("RC_DW_MissingEquipment","AskedLohar_LostItem"); //QuestUpdate_RC_DW_MissingEquipment_AskedLohar_LostItem
DB_QuestDef_State("RC_DW_MissingEquipment","FoundItem",-1); //QuestUpdate_RC_DW_MissingEquipment_FoundItem
DB_QuestDef_State("RC_DW_MissingEquipment","LostItem",-1); //QuestUpdate_RC_DW_MissingEquipment_LostItem
DB_QuestDef_State("RC_DW_MissingEquipment","CloseLeftRC",-1);


//----Voidwoken Chicks ----
//VC Start Events
DB_QuestDef_AddEvent("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_StartTalkedToChickens");
DB_QuestDef_AddEvent("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_StartFoundEggs");
DB_QuestDef_AddEvent("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_EggHatched"); //Just in case
DB_QuestDef_AddEvent("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_BecameMama"); //Just in case

//VC Egg events
DB_QuestDef_State("RC_DW_VoidwokenChicks","StartTalkedToChickens");
DB_QuestDef_State("RC_DW_VoidwokenChicks","KnowsWhatHappened"); //REMOVED
DB_QuestDef_State("RC_DW_VoidwokenChicks","StartFoundEggs");
DB_QuestDef_State("RC_DW_VoidwokenChicks","PickedUpHelplessEgg");
DB_QuestDef_State("RC_DW_VoidwokenChicks","ReturnedHelplessEgg");
DB_QuestDef_State("RC_DW_VoidwokenChicks","HelplessEggBecameFood");
DB_QuestDef_State("RC_DW_VoidwokenChicks","EggDestroyedByAttack");
DB_QuestDef_State("RC_DW_VoidwokenChicks","CloseInformedBecameFood");
DB_QuestDef_State("RC_DW_VoidwokenChicks","CloseInformedEggDestroyed");
DB_QuestDef_State("RC_DW_VoidwokenChicks","CloseInformedGhostAboutGoneEgg");
DB_QuestDef_State("RC_DW_VoidwokenChicks","CloseNoOneLeft");

//VC Chick events
DB_QuestDef_State("RC_DW_VoidwokenChicks","EggHatched");
DB_QuestDef_State("RC_DW_VoidwokenChicks","BecameMama");
DB_QuestDef_State("RC_DW_VoidwokenChicks","KnowsAboutRooster");
DB_QuestDef_State("RC_DW_VoidwokenChicks","CloseChickToRoosterKill");
DB_QuestDef_UpdateEvent("RC_DW_VoidwokenChicks","CloseChickToRoosterKill","RC_DW_VC_KillPeeper");
DB_QuestDef_State("RC_DW_VoidwokenChicks","CloseChickToRoosterNoKill");
DB_QuestDef_UpdateEvent("RC_DW_VoidwokenChicks","CloseChickToRoosterNoKill","RC_DW_VC_DontKillPeeper");
DB_QuestDef_State("RC_DW_VoidwokenChicks","CloseChickDead");
DB_QuestDef_State("RC_DW_VoidwokenChicks","CloseRoosterDead");

//VC Close Events
DB_QuestDef_CloseEvent("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseNoOneLeft");
DB_QuestDef_CloseEvent("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseInformedBecameFood");
DB_QuestDef_CloseEvent("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseInformedEggDestroyed");
DB_QuestDef_CloseEvent("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseInformedGhostAboutGoneEgg");
DB_QuestDef_CloseEvent("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseChickToRoosterKill");
DB_QuestDef_CloseEvent("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseChickToRoosterNoKill");
DB_QuestDef_CloseEvent("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseChickDead");
DB_QuestDef_CloseEvent("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseRoosterDead");
DB_QuestDef_CloseEvent("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseNoOneLeft");
DB_QuestDef_CloseEvent("RC_DW_VoidwokenChicks","RC_DW_VC_KillPeeper");
DB_QuestDef_CloseEvent("RC_DW_VoidwokenChicks","RC_DW_VC_DontKillPeeper");
DB_QuestDef_State("RC_DW_VoidwokenChicks","CloseLeftRCHens",-1);
DB_QuestDef_State("RC_DW_VoidwokenChicks","CloseLeftRCPet",-1);

//NEW JOURNAL ADDITION
DB_QuestDef_State("RC_DW_VoidwokenChicks","PickEgg");
DB_QuestDef_State("RC_DW_VoidwokenChicks","RoosterAskKill"); //QuestUpdate_RC_DW_VoidwokenChicks_RoosterAskKill

// Dwarven Criminals
DB_QuestDef_AddEvent("RC_DW_DwarvenCriminals","QuestUpdate_RC_DW_WhiteMagister_SentToReimond");
DB_QuestDef_AddEvent("RC_DW_DwarvenCriminals","QuestUpdate_RC_DW_WhiteMagister_MetReimond");
DB_QuestDef_AddEvent("RC_DW_DwarvenCriminals","RC_DW_QuestFromJulian");

DB_QuestDef_State("RC_DW_DwarvenCriminals","ContactLohar");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","LoharHint","QuestUpdate_RC_DW_DwarvenCriminals_CargoHint");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","LoharProblem","QuestUpdate_RC_DW_DwarvenCrminals_LoharProblem");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","KnowDeathfog","QuestUpdate_RC_DW_DwarvenCriminals_KnowDeathfog");
DB_QuestDef_State("RC_DW_DwarvenCriminals","FoundWrongLetters");

DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SentToReimond","QuestUpdate_RC_DW_WhiteMagister_SentToReimond");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","AskJulian","QuestUpdate_RC_DW_DwarvenSabotage_AskJulian");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","MetReimond","QuestUpdate_RC_DW_WhiteMagister_MetReimond");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","ReimondLeft","QuestUpdate_RC_DW_WhiteMagister_ReimondLeft");//REMOVED
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","InvestigateLohar","RC_DW_QuestFromJulian");

// Fallback to open parent quest in case we find the smuggled weapons before it has been opened already
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SmugglingFoundBeforeMagister_MainStartFallback","QuestUpdate_RC_DW_DwarvenCriminals_SmugglingFoundBeforeMagister_MainStartFallback");
DB_QuestDef_AddEvent("RC_DW_DwarvenCriminals","QuestUpdate_RC_DW_DwarvenCriminals_SmugglingFoundBeforeMagister_MainStartFallback");

// We know source weapons are being smuggled
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SmugglingFound","QuestUpdate_RC_DW_TaintedSmuggling_SmugglingFound");
// We found the smuggled source weapons, and know Magister Julian wants to know about them
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SmugglingCacheFound","QuestUpdate_RC_DW_TaintedSmuggling_SmugglingCacheFoundAfterJulian");
// We found the smuggled source weapons, but don't know yet who might be interested in that information
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SmugglingCacheFoundBeforeJulian","QuestUpdate_RC_DW_TaintedSmuggling_SmugglingCacheFoundBeforeJulian");
// Julian told us he wants to know about the smuggling after we already found the source source weapons
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SmugglingCacheReportToMagister","QuestUpdate_RC_DW_TaintedSmuggling_SmugglingCacheReportToMagister");
// We told Julian about the smuggled source weapons
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SmugglingToldMagister","QuestUpdate_RC_DW_TaintedSmuggling_SmugglingToldMagister");

DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SmugglingDwarfLearn","QuestUpdate_RC_DW_TaintedSmuggling_SmugglingDwarfLearn");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SmugglingFishLearn","QuestUpdate_RC_DW_TaintedSmuggling_SmugglingFishLearn");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SmugglingBuyerLearn","QuestUpdate_RC_DW_TaintedSmuggling_SmugglingBuyerLearn");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","FoundEmpressLetter","QuestUpdate_RC_DW_DwarvenSabotage_FoundEmpressLetter");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","GaveLetterToLilian","QuestUpdate_RC_DW_DwarvenSabotage_GaveLetterToLilian");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","GaveLetterToMagister","RC_DW_MagisterHaveEmpressLetter");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","AssassinateLohar","RC_DW_AssassinateLohar");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","KilledLohar","QuestUpdate_RC_DW_DwarvenSabotage_KilledLohar");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","DeliveredLoharHead","QuestUpdate_RC_DW_DwarvenSabotage_DeliveredLoharHead");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","TooSlow","QuestUpdate_RC_DW_DwarvenSabotage_TooSlow");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","AteLoharsHead","QuestUpdate_RC_DW_DwarvenSabotage_AteLoharsHead");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","LetLoharGo","QuestUpdate_RC_DW_DwarvenSabotage_LetLoharGo");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","ToldJulianAteLoharsHead","QuestUpdate_RC_DW_DwarvenSabotage_ToldJulianAteLoharsHead");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","LiedToJulianAteLoharsHead","QuestUpdate_RC_DW_DwarvenSabotage_LiedToJulianAteLoharsHead");

DB_QuestDef_CloseEvent("RC_DW_DwarvenCriminals_SUB_RottenGoods", "QuestUpdate_RC_DW_TaintedSmuggling_SmugglingToldMagister");

DB_QuestDef_CloseEvent("RC_DW_DwarvenCriminals","QuestUpdate_RC_DW_DwarvenSabotage_GaveLetterToLilian");
DB_QuestDef_CloseEvent("RC_DW_DwarvenCriminals","QuestUpdate_RC_DW_DwarvenSabotage_DeliveredLoharHead");
DB_QuestDef_CloseEvent("RC_DW_DwarvenCriminals","QuestUpdate_RC_DW_DwarvenSabotage_TooSlow");
DB_QuestDef_CloseEvent("RC_DW_DwarvenCriminals","QuestUpdate_RC_DW_DwarvenSabotage_ToldJulianAteLoharsHead");
DB_QuestDef_CloseEvent("RC_DW_DwarvenCriminals","QuestUpdate_RC_DW_DwarvenSabotage_LiedToJulianAteLoharsHead");
DB_QuestDef_State("RC_DW_DwarvenCriminals","KilledJulian",-1);
DB_QuestDef_State("RC_DW_DwarvenCriminals","KilledLoharTooSoon",-1);
DB_QuestDef_State("RC_DW_DwarvenCriminals","CloseLeftRC",-1);

//NEW JOURNAL ADDITION
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","FoundEmpressLetter_Magister","QuestUpdate_RC_DW_DwarvenSabotage_FoundEmpressLetter");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","FoundEmpressLetter_Lohar","QuestUpdate_RC_DW_DwarvenSabotage_FoundEmpressLetter");


//RC_DW_Meistr - party
DB_QuestDef_State("RC_DW_Meistr","Start",1);
DB_QuestDef_UpdateEvent("RC_DW_Meistr","Start2","QuestUpdate_RC_DW_Meistr_Start");//REMOVED
DB_QuestDef_State("RC_DW_Meistr","Boat");
DB_QuestDef_State("RC_DW_Meistr","Gallows");
DB_QuestDef_State("RC_DW_Meistr","DoorSealed",1);	//QuestUpdate_RC_DW_Meistr_DoorSealed
DB_QuestDef_State("RC_DW_Meistr","CellarAlone");	//QuestUpdate_RC_DW_Meistr_CellarAlone
DB_QuestDef_State("RC_DW_Meistr","BookRead");		//REMOVED
DB_QuestDef_State("RC_DW_Meistr","CupboardOpen");	//QuestUpdate_RC_DW_Meistr_CupboardOpen
DB_QuestDef_UpdateEvent("RC_DW_Meistr","CupboardOpen2","QuestUpdate_RC_DW_Meistr_CupboardOpen");


DB_QuestDef_State("RC_DW_Meistr","HomeAlone");
DB_QuestDef_State("RC_DW_Meistr","SivaHatch");
DB_QuestDef_State("RC_DW_Meistr","SivaHatch_Dead");
DB_QuestDef_State("RC_DW_Meistr","FoundGallows");
DB_QuestDef_State("RC_DW_Meistr","HouseInstruction");
DB_QuestDef_State("RC_DW_Meistr","Need2SP");
DB_QuestDef_State("RC_DW_Meistr","Need3SP");
DB_QuestDef_State("RC_DW_Meistr","Location_Owl");
DB_QuestDef_State("RC_DW_Meistr","MordusTeacher");
DB_QuestDef_State("RC_DW_Meistr","RykerTeacher");
DB_QuestDef_State("RC_DW_Meistr","JahanTeacher");
DB_QuestDef_State("RC_DW_Meistr","Hannag_MaxedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBD", "QuestUpdate_RC_DW_Meistr_Hannag_MaxedSP");
DB_QuestDef_State("RC_DW_Meistr","HannagTeacher");
DB_QuestDef_State("RC_DW_Meistr","HannagTeacher_Tinkerer");
DB_QuestDef_State("RC_DW_Meistr","HannagTeacher_Parents"); //QuestUpdate_RC_DW_Meistr_HannagTeacher_Parents
DB_QuestDef_State("RC_DW_Meistr","DemonTeacher");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","DemonTeacher2","QuestUpdate_RC_DW_Meistr_DemonTeacher");//REMOVED
DB_QuestDef_State("RC_DW_Meistr","DemonTeacher_Tinkerer");
DB_QuestDef_State("RC_DW_Meistr","SaheilaTeacher");
DB_QuestDef_State("RC_DW_Meistr","SaheilaTeacher_Hasmet");
DB_QuestDef_State("RC_DW_Meistr","SaheilaTeacher_Lohar");
DB_QuestDef_State("RC_DW_Meistr","SaheilaTeacher_Lohar_Hasmet");
DB_QuestDef_State("RC_DW_Meistr","AlmiraTeacher");
DB_QuestDef_State("RC_DW_Meistr","AlexandarTeacher");
DB_QuestDef_State("RC_DW_Meistr","HallOfEchoes");
DB_QuestDef_State("RC_DW_Meistr","NeedRoot");

DB_QuestDef_State("RC_DW_Meistr","Meistr_Death_Scene");
DB_QuestDef_State("RC_DW_Meistr","Meistr_Death_Gen");
DB_QuestDef_State("RC_DW_Meistr","LeaveMalady"); //QuestUpdate_RC_DW_Meistr_LeaveMalady
DB_QuestDef_State("RC_DW_Meistr","UseWheel"); //QuestUpdate_RC_DW_Meistr_UseWheel

DB_QuestDef_State("RC_DW_Meistr","Rescued");
DB_QuestDef_State("RC_DW_Meistr","Cellar"); //QuestUpdate_RC_DW_Meistr_Cellar
DB_QuestDef_State("RC_DW_Meistr","VisionGotten");
DB_QuestDef_State("RC_DW_Meistr","Heist_Meistr");
DB_QuestDef_State("RC_DW_Meistr","Heist_List_Location");
DB_QuestDef_State("RC_DW_Meistr","VaultInstruction");

DB_QuestDef_State("RC_DW_Meistr","2SP");
DB_QuestDef_State("RC_DW_Meistr","3SP");
DB_QuestDef_State("RC_DW_Meistr","2SP_NoMeistr");
DB_QuestDef_State("RC_DW_Meistr","3SP_NoMeistr");
DB_QuestDef_State("RC_DW_Meistr","LackOfSource");
DB_QuestDef_State("RC_DW_Meistr","Vampirism");
DB_QuestDef_State("RC_DW_Meistr","Location");
DB_QuestDef_State("RC_DW_Meistr","SummonMalady");
DB_QuestDef_State("RC_DW_Meistr","MaladyOnDeck"); //REMOVED
DB_QuestDef_State("RC_DW_Meistr","NewTeacher");
DB_QuestDef_State("RC_DW_Meistr","Location_Fail");	//QuestUpdate_RC_DW_Meistr_Location_Fail
DB_QuestDef_State("RC_DW_Meistr","LeaveRC",-1);

DB_QuestDef_UpdateEvent("RC_DW_Meistr","MordusAcceptedSP","QuestUpdate_RC_DW_ShadowOverDriftwood_AcceptedSP");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","MordusDeclinedSP","QuestUpdate_RC_DW_ShadowOverDriftwood_DeclinedSP");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","RykerAcceptedSP","QuestUpdate_RC_GY_RykersContract_AcceptedSP");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","RykerDeclinedSP","QuestUpdate_RC_GY_RykersContract_DeclinedSP");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","JahanAcceptedSP","QuestUpdate_RC_BF_ThePresence_AcceptedSP");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","JahanDeclinedSP","QuestUpdate_RC_BF_ThePresence_DeclinedSP");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","HannagAcceptedSP","QuestUpdate_RC_BF_CorneredSourcerer_AcceptedSP");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","HannagDeclinedSP","QuestUpdate_RC_BF_CorneredSourcerer_DeclinedSP");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","AdvocateAcceptedSP","QuestUpdate_RC_BI_ThePresence_AcceptedSP");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","AdvocateDeclinedSP","QuestUpdate_RC_BI_ThePresence_DeclinedSP");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","SaheilaAcceptedSP","QuestUpdate_RC_MIL_RescuingSaheila_AcceptedSP");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","SaheilaDeclinedSP","QuestUpdate_RC_MIL_RescuingSaheila_DeclinedSP");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","AlmiraAcceptedSP","QuestUpdate_RC_FL_BrokenPromises_AcceptedSP");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","AlmiraDeclinedSP","QuestUpdate_RC_FL_BrokenPromises_DeclinedSP");
DB_QuestDef_State("RC_DW_Meistr","FoundRoots");
DB_QuestDef_State("RC_DW_Meistr","LackOfSource2SP");
DB_QuestDef_State("RC_DW_Meistr","LackOfSource3SP");

DB_QuestDef_State("RC_DW_Meistr","MordusDead");
DB_QuestDef_State("RC_DW_Meistr","MordusEscape");
DB_QuestDef_State("RC_DW_Meistr","RykerDead");
DB_QuestDef_State("RC_DW_Meistr","JahanDead");
DB_QuestDef_State("RC_DW_Meistr","HannagDead");
DB_QuestDef_State("RC_DW_Meistr","DemonDead");
DB_QuestDef_State("RC_DW_Meistr","SaheilaDead");
DB_QuestDef_State("RC_DW_Meistr","AlmiraDead");


DB_QuestDef_State("RC_DW_Meistr","MordusMet");
DB_QuestDef_State("RC_DW_Meistr","RykerMet");
DB_QuestDef_State("RC_DW_Meistr","JahanMet");
DB_QuestDef_State("RC_DW_Meistr","HannagMet");
DB_QuestDef_State("RC_DW_Meistr","DemonMet");
DB_QuestDef_State("RC_DW_Meistr","SaheilaMet");
DB_QuestDef_State("RC_DW_Meistr","AlmiraMet");

DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBA","QuestUpdate_RC_DW_ShadowOverDriftwood_AcceptedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBB","QuestUpdate_RC_GY_RykersContract_AcceptedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBC","QuestUpdate_RC_BF_ThePresence_AcceptedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBD","QuestUpdate_RC_BF_CorneredSourcerer_AcceptedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBE","QuestUpdate_RC_BI_ThePresence_AcceptedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBF","QuestUpdate_RC_MIL_RescuingSaheila_AcceptedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBG","QuestUpdate_RC_FL_BrokenPromises_AcceptedSP");

DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBA","QuestUpdate_RC_DW_ShadowOverDriftwood_DeclinedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBB","QuestUpdate_RC_GY_RykersContract_DeclinedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBC","QuestUpdate_RC_BF_ThePresence_DeclinedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBD","QuestUpdate_RC_BF_CorneredSourcerer_DeclinedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBE","QuestUpdate_RC_BI_ThePresence_DeclinedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBF","QuestUpdate_RC_MIL_RescuingSaheila_DeclinedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBG","QuestUpdate_RC_FL_BrokenPromises_DeclinedSP");

DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBA","QuestUpdate_RC_DW_Meistr_MordusDead");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBA","QuestUpdate_RC_DW_Meistr_MordusEscape");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBB","QuestUpdate_RC_DW_Meistr_RykerDead");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBC","QuestUpdate_RC_DW_Meistr_JahanDead");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBD","QuestUpdate_RC_DW_Meistr_HannagDead");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBE","QuestUpdate_RC_DW_Meistr_DemonDead");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBF","QuestUpdate_RC_DW_Meistr_SaheilaDead");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBG","QuestUpdate_RC_DW_Meistr_AlmiraDead");

DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBA","RC_DW_Meistr_CloseQuest_SummonMalady");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBB","RC_DW_Meistr_CloseQuest_SummonMalady");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBC","RC_DW_Meistr_CloseQuest_SummonMalady");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBD","RC_DW_Meistr_CloseQuest_SummonMalady");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBE","RC_DW_Meistr_CloseQuest_SummonMalady");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBF","RC_DW_Meistr_CloseQuest_SummonMalady");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBG","RC_DW_Meistr_CloseQuest_SummonMalady");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBI","QuestUpdate_RC_DW_Meistr_FoundRoots");

Proc_Journal_RC_DW_Meistr_SetUp();


//END_REGION
//REGION Fields

//--- Polymorphed lovers
DB_QuestDef_AddEvent("RC_DF_PolyLovers","QuestUpdate_RC_DF_PolyLovers_KnowsAboutWitch");
DB_QuestDef_AddEvent("RC_DF_PolyLovers","QuestUpdate_RC_DF_PolyLovers_HasPotion");
DB_QuestDef_AddEvent("RC_DF_PolyLovers","QuestUpdate_RC_DF_PolyLovers_SawWitch");
DB_QuestDef_AddEvent("RC_DF_PolyLovers","QuestUpdate_RC_DF_PolyLovers_HasRecipeBook");
DB_QuestDef_AddEvent("RC_DF_PolyLovers","QuestUpdate_RC_DF_PolyLovers_HasWitchIngredient");

DB_QuestDef_State("RC_DF_PolyLovers","WitchOutside");
DB_QuestDef_State("RC_DF_PolyLovers","WitchFled");
DB_QuestDef_State("RC_DF_PolyLovers","CowRat"); //REMOVED

DB_QuestDef_State("RC_DF_PolyLovers","KnowsAboutWitch");
DB_QuestDef_State("RC_DF_PolyLovers","KnowsAboutPoly");
DB_QuestDef_State("RC_DF_PolyLovers","HasPotion");
DB_QuestDef_State("RC_DF_PolyLovers","HasSecondPotion");
DB_QuestDef_State("RC_DF_PolyLovers","SawWitch");
DB_QuestDef_State("RC_DF_PolyLovers","HasRecipeBook");
DB_QuestDef_State("RC_DF_PolyLovers","HasWitchIngredient"); //REMOVED
DB_QuestDef_State("RC_DF_PolyLovers","DrankPotion");
DB_QuestDef_State("RC_DF_PolyLovers","CowsAreDead");
DB_QuestDef_State("RC_DF_PolyLovers","KeptPotion");
DB_QuestDef_State("RC_DF_PolyLovers","CowsAreOK");
DB_QuestDef_State("RC_DF_PolyLovers","CowsFled");
DB_QuestDef_State("RC_DF_PolyLovers","SavedCows");
DB_QuestDef_State("RC_DF_PolyLovers","CloseLeftRCNoCow",-1);
DB_QuestDef_State("RC_DF_PolyLovers","CloseLeftRCOneCow",-1);

DB_QuestDef_State("RC_DF_PolyLovers","GavePotionTo000"); //QuestUpdate_RC_DF_PolyLovers_GavePotionTo000
DB_QuestDef_State("RC_DF_PolyLovers","GavePotionTo001"); //QuestUpdate_RC_DF_PolyLovers_GavePotionTo001
DB_QuestDef_State("RC_DF_PolyLovers","GavePotionTo000WithReward"); //QuestUpdate_RC_DF_PolyLovers_GavePotionTo000WithReward
DB_QuestDef_State("RC_DF_PolyLovers","GavePotionTo001WithReward"); //QuestUpdate_RC_DF_PolyLovers_GavePotionTo001WithReward

DB_QuestDef_CloseEvent("RC_DF_PolyLovers","QuestUpdate_RC_DF_PolyLovers_KeptPotion");
DB_QuestDef_CloseEvent("RC_DF_PolyLovers","QuestUpdate_RC_DF_PolyLovers_DrankPotion");
DB_QuestDef_CloseEvent("RC_DF_PolyLovers","QuestUpdate_RC_DF_PolyLovers_CowsAreOK");
DB_QuestDef_CloseEvent("RC_DF_PolyLovers","QuestUpdate_RC_DF_PolyLovers_CowsAreDead");
DB_QuestDef_CloseEvent("RC_DF_PolyLovers","QuestUpdate_RC_DF_PolyLovers_CowsFled");
DB_QuestDef_CloseEvent("RC_DF_PolyLovers","QuestUpdate_RC_DF_PolyLovers_SavedCows");


//--- Undead Trader
DB_QuestDef_AddEvent("RC_DF_UndeadTrader","QuestUpdate_RC_DF_UndeadTrader_HeardStory");
DB_QuestDef_AddEvent("RC_DF_UndeadTrader","QuestUpdate_RC_DF_UndeadTrader_GaveIngredientA");
DB_QuestDef_State("RC_DF_UndeadTrader","HeardStory",1);
DB_QuestDef_State("RC_DF_UndeadTrader","HasIngredientA"); 
DB_QuestDef_State("RC_DF_UndeadTrader","GaveIngredientA",1);
DB_QuestDef_State("RC_DF_UndeadTrader","TraderIsDead",-1);
DB_QuestDef_State("RC_DF_UndeadTrader","TraderDeadAtRV",-1);
DB_QuestDef_State("RC_DF_UndeadTrader","TraderIsDeadElse",-1);
DB_QuestDef_State("RC_DF_UndeadTrader","CloseLeftRC",-1);
/*
DB_QuestDef_CloseEvent("RC_DF_UndeadTrader","QuestUpdate_RC_DF_UndeadTrader_TraderIsDead");
DB_QuestDef_CloseEvent("RC_DF_UndeadTrader","QuestUpdate_RC_DF_UndeadTrader_TraderDeadAtRV");
DB_QuestDef_CloseEvent("RC_DF_UndeadTrader","QuestUpdate_RC_DF_UndeadTrader_TraderIsDeadElse");
*/

//Troll Bridge
DB_QuestDef_AddEvent("RC_DF_TrollBridge","QuestUpdate_RC_DF_TrollBridge_RemoveCompetition");
DB_QuestDef_AddEvent("RC_DF_TrollBridge","QuestUpdate_RC_DF_TrollBridge_PaidGrog");
DB_QuestDef_AddEvent("RC_DF_TrollBridge","QuestUpdate_RC_DF_TrollBridge_MetGrog");

//MAIN
DB_QuestDef_State("RC_DF_TrollBridge","MetGrog"); //QuestUpdate_RC_DF_TrollBridge_MetGrog
DB_QuestDef_State("RC_DF_TrollBridge","PaidGrog"); //QuestUpdate_RC_DF_TrollBridge_PaidGrog
DB_QuestDef_State("RC_DF_TrollBridge","RemoveCompetition");
DB_QuestDef_UpdateEvent("RC_DF_TrollBridge","MetMarg","QuestUpdate_RC_DF_TrollBridge_CounterOffer");
DB_QuestDef_State("RC_DF_TrollBridge","CompetitionRemovedMain");
DB_QuestDef_State("RC_DF_TrollBridge","GrogIsDeadMain",-1);
DB_QuestDef_State("RC_DF_TrollBridge","GrogMovedMain",-1);
DB_QuestDef_State("RC_DF_TrollBridge","AllDead",-1);
DB_QuestDef_State("RC_DF_TrollBridge","CloseLeftRCReward",-1);
DB_QuestDef_State("RC_DF_TrollBridge","CloseLeftRC",-1);

//SUBA
DB_QuestDef_State("RC_DF_TrollBridge","RemoveCompetitionSub");
DB_QuestDef_State("RC_DF_TrollBridge","CompetitionRemovedSub");
DB_QuestDef_State("RC_DF_TrollBridge","GrogMovedSub",-1);

//SUBB
DB_QuestDef_State("RC_DF_TrollBridge","CounterOffer"); //QuestUpdate_RC_DF_TrollBridge_CounterOffer
DB_QuestDef_State("RC_DF_TrollBridge","GrogIsDeadSub");
DB_QuestDef_State("RC_DF_TrollBridge","ToldMargGrogDead",-1);

DB_QuestDef_CloseEvent("RC_DF_TrollBridge_SUBA","QuestUpdate_RC_DF_TrollBridge_GrogMovedSub");
DB_QuestDef_CloseEvent("RC_DF_TrollBridge_SUBB","QuestUpdate_RC_DF_TrollBridge_ToldMargGrogDead");

//END_REGION
//REGION Graveyard
/**
 * RC_GY_RykersContract
 */
DB_QuestDef_AddEvent("RC_GY_RykersContract","QuestUpdate_RC_GY_RykersContract_GotRykersQuest");
DB_QuestDef_State("RC_GY_RykersContract","GotRykersQuest");
DB_QuestDef_State("RC_GY_RykersContract","IfanCompanionKnowsRyker");
DB_QuestDef_State("RC_GY_RykersContract","RefusedRykersQuest");
DB_QuestDef_State("RC_GY_RykersContract","KnowsAboutBetrayal");
DB_QuestDef_State("RC_GY_RykersContract","FoundAtaraxianTablet");
DB_QuestDef_State("RC_GY_RykersContract","DeliveredAtaraxianTablet");
DB_QuestDef_State("RC_GY_RykersContract","LeaveTabletForMe");
DB_QuestDef_State("RC_GY_RykersContract","BetrayedByRyker");
DB_QuestDef_State("RC_GY_RykersContract","FoughtPromise");
DB_QuestDef_State("RC_GY_RykersContract","KilledRyker");
DB_QuestDef_State("RC_GY_RykersContract","EnteredBlackPits"); // QuestUpdate_RC_GY_RykersContract_EnteredBlackPits
DB_QuestDef_State("RC_GY_RykersContract","EnteredCave"); // QuestUpdate_RC_GY_RykersContract_EnteredCave
DB_QuestDef_State("RC_GY_RykersContract","FoundTomb"); // QuestUpdate_RC_GY_RykersContract_FoundTomb
DB_QuestDef_State("RC_GY_RykersContract","KnowsRykerSecret");
DB_QuestDef_State("RC_GY_RykersContract","ConfrontedPromise");
DB_QuestDef_State("RC_GY_RykersContract","FoundWrongTablets");
DB_QuestDef_State("RC_GY_RykersContract", "ConfrontedBetrayal");

DB_QuestDef_State("RC_GY_RykersContract","CloseLeftRCNotMet",-1);//REMOVED
DB_QuestDef_State("RC_GY_RykersContract","CloseLeftRCNoDeal",-1);
DB_QuestDef_CloseEvent("RC_GY_RykersContract","QuestUpdate_RC_GY_RykersContract_RefusedRykersQuest");
DB_QuestDef_CloseEvent("RC_GY_RykersContract","QuestUpdate_RC_GY_RykersContract_KilledRyker");

// Ryker's spider
DB_QuestDef_AddEvent("RC_GY_RykersSpider","QuestUpdate_RC_GY_RykersSpider_KnowsRykerSecret");
DB_QuestDef_AddEvent("RC_GY_RykersSpider","QuestUpdate_RC_GY_RykersSpider_PromisedFood");
DB_QuestDef_State("RC_GY_RykersSpider","KnowsRykerSecret");
DB_QuestDef_State("RC_GY_RykersSpider","MoreLimbs");
DB_QuestDef_State("RC_GY_RykersSpider","PromisedFood");
DB_QuestDef_State("RC_GY_RykersSpider","FooledSpider");
DB_QuestDef_State("RC_GY_RykersSpider","RecievedGift");
DB_QuestDef_State("RC_GY_RykersSpider","NoGift");

DB_QuestDef_State("RC_GY_RykersSpider","SpiderDead",-1);
DB_QuestDef_State("RC_GY_RykersSpider","CloseLeftRC",-1);
DB_QuestDef_CloseEvent("RC_GY_RykersSpider","QuestUpdate_RC_GY_RykersSpider_FooledSpider");
DB_QuestDef_CloseEvent("RC_GY_RykersSpider","QuestUpdate_RC_GY_RykersSpider_RecievedGift");
DB_QuestDef_CloseEvent("RC_GY_RykersSpider","QuestUpdate_RC_GY_RykersSpider_NoGift");


//Purged Daughter
DB_QuestDef_AddEvent("RC_GY_PurgedDaughter","QuestUpdate_RC_GY_PurgedDaughter_HealerProblem");
DB_QuestDef_State("RC_GY_PurgedDaughter","HealerProblem");
DB_QuestDef_State("RC_GY_PurgedDaughter","HealerGaveQuest");
DB_QuestDef_State("RC_GY_PurgedDaughter","HealerDeclined");
DB_QuestDef_State("RC_GY_PurgedDaughter","KilledDaughterHealer");
DB_QuestDef_State("RC_GY_PurgedDaughter","KilledDaughter");
DB_QuestDef_State("RC_GY_PurgedDaughter","OperationSuccessful");
DB_QuestDef_State("RC_GY_PurgedDaughter","ToldHealerOfDeath");
DB_QuestDef_State("RC_GY_PurgedDaughter","HealerDied");
DB_QuestDef_State("RC_GY_PurgedDaughter","ToldHealerOfLife");
DB_QuestDef_State("RC_GY_PurgedDaughter","EnterCellar");
DB_QuestDef_State("RC_GY_PurgedDaughter","CloseLeftRC",-1);
DB_QuestDef_CloseEvent("RC_GY_PurgedDaughter","QuestUpdate_RC_GY_PurgedDaughter_ToldHealerOfDeath");
DB_QuestDef_CloseEvent("RC_GY_PurgedDaughter","QuestUpdate_RC_GY_PurgedDaughter_HealerDied");
DB_QuestDef_CloseEvent("RC_GY_PurgedDaughter","QuestUpdate_RC_GY_PurgedDaughter_KilledDaughterHealer");
DB_QuestDef_CloseEvent("RC_GY_PurgedDaughter","QuestUpdate_RC_GY_PurgedDaughter_ToldHealerOfLife");

DB_QuestDef_State("RC_GY_LizardSpeakingLizard","IgnoredBySalamander",1);
DB_QuestDef_State("RC_GY_LizardSpeakingLizard","SalamanderUnknownLang",1);
DB_QuestDef_State("RC_GY_LizardSpeakingLizard","SalamanderSpeaked",1);
DB_QuestDef_State("RC_GY_LizardSpeakingLizard","KnowsBurningWords");
DB_QuestDef_State("RC_GY_LizardSpeakingLizard","SecondaryKnowsBurningWord");
DB_QuestDef_State("RC_GY_LizardSpeakingLizard","SalamanderDead");
DB_QuestDef_State("RC_GY_LizardSpeakingLizard","Chest",1); //QuestUpdate_RC_GY_LizardSpeakingLizard_Chest
DB_QuestDef_State("RC_GY_LizardSpeakingLizard","ChestOpened",-1); //QuestUpdate_RC_GY_LizardSpeakingLizard_ChestOpened
DB_QuestDef_State("RC_GY_LizardSpeakingLizard","ChestInfo"); //QuestUpdate_RC_GY_LizardSpeakingLizard_ChestInfo
DB_QuestDef_State("RC_GY_LizardSpeakingLizard","CloseLeftRCSecret",-1);
DB_QuestDef_State("RC_GY_LizardSpeakingLizard","CloseLeftRCChest",-1);

DB_QuestDef_AddEvent("RC_GY_FavoritePet","QuestUpdate_RC_GY_FavoritePet_MetPets");
DB_QuestDef_State("RC_GY_FavoritePet","MetPets");
DB_QuestDef_State("RC_GY_FavoritePet","FindCollar");
DB_QuestDef_State("RC_GY_FavoritePet","FindToy");
DB_QuestDef_State("RC_GY_FavoritePet","PersuadedCat");
DB_QuestDef_State("RC_GY_FavoritePet","PersuadedDog");
DB_QuestDef_State("RC_GY_FavoritePet","PersuadedBoth");
DB_QuestDef_State("RC_GY_FavoritePet","CatDied");
DB_QuestDef_State("RC_GY_FavoritePet","DogDied");
DB_QuestDef_State("RC_GY_FavoritePet","CloseLeftRC",-1);

DB_QuestDef_CloseEvent("RC_GY_FavoritePet","QuestUpdate_RC_GY_FavoritePet_PersuadedCat");
DB_QuestDef_CloseEvent("RC_GY_FavoritePet","QuestUpdate_RC_GY_FavoritePet_PersuadedDog");
DB_QuestDef_CloseEvent("RC_GY_FavoritePet","QuestUpdate_RC_GY_FavoritePet_PersuadedBoth");
DB_QuestDef_CloseEvent("RC_GY_FavoritePet","QuestUpdate_RC_GY_FavoritePet_CatDied");
DB_QuestDef_CloseEvent("RC_GY_FavoritePet","QuestUpdate_RC_GY_FavoritePet_DogDied");

DB_QuestDef_State("RC_GY_TurtleLove","MetTurtle",1);
DB_QuestDef_State("RC_GY_TurtleLove","MouseHungry");
DB_QuestDef_State("RC_GY_TurtleLove","TurtleSuccess");
DB_QuestDef_State("RC_GY_TurtleLove","TalkTurtle");
DB_QuestDef_State("RC_GY_TurtleLove","TurtleIdeas");
DB_QuestDef_State("RC_GY_TurtleLove","MouseDied");
DB_QuestDef_State("RC_GY_TurtleLove","TurtleDied");
DB_QuestDef_State("RC_GY_TurtleLove","QuestFailed");
DB_QuestDef_CloseEvent("RC_GY_TurtleLove","QuestUpdate_RC_GY_TurtleLove_TurtleSuccess");
DB_QuestDef_CloseEvent("RC_GY_TurtleLove","QuestUpdate_RC_GY_TurtleLove_MouseDied");
DB_QuestDef_CloseEvent("RC_GY_TurtleLove","QuestUpdate_RC_GY_TurtleLove_TurtleDied");
DB_QuestDef_CloseEvent("RC_GY_TurtleLove","QuestUpdate_RC_GY_TurtleLove_QuestFailed");

DB_QuestDef_AddEvent("RC_GY_BuriedLizard","QuestUpdate_RC_GY_BuriedLizard_TalkLizard");
DB_QuestDef_AddEvent("RC_GY_BuriedLizard","QuestUpdate_RC_GY_BuriedLizard_FoundLeg");
DB_QuestDef_State("RC_GY_BuriedLizard","TalkLizard");
DB_QuestDef_State("RC_GY_BuriedLizard","FoundLeg");
DB_QuestDef_State("RC_GY_BuriedLizard","BurnedLeg");
DB_QuestDef_State("RC_GY_BuriedLizard","AteLeg");
DB_QuestDef_State("RC_GY_BuriedLizard","SuckedLizard",-1); //QuestUpdate_RC_GY_BuriedLizard_SuckedLizard
DB_QuestDef_State("RC_GY_BuriedLizard","LizardPoof",-1);
DB_QuestDef_State("RC_GY_BuriedLizard","LizardDestroyed",-1);
DB_QuestDef_State("RC_GY_BuriedLizard","CloseLeftRC",-1);

DB_QuestDef_CloseEvent("RC_GY_BuriedLizard","QuestUpdate_RC_GY_BuriedLizard_LizardPoof");
DB_QuestDef_CloseEvent("RC_GY_BuriedLizard","QuestUpdate_RC_GY_BuriedLizard_SuckedLizard");
DB_QuestDef_CloseEvent("RC_GY_BuriedLizard","QuestUpdate_RC_GY_BuriedLizard_AteLeg");
DB_QuestDef_CloseEvent("RC_GY_BuriedLizard","QuestUpdate_RC_GY_BuriedLizard_LizardDestroyed");


// Memorial Of Heroes
DB_QuestDef_AddEvent("RC_GY_MemorialOfHeroes","QuestUpdate_RC_GY_MemorialOfHeroes_FoundMemorialBook");
DB_QuestDef_AddEvent("RC_GY_MemorialOfHeroes","QuestUpdate_RC_GY_MemorialOfHeroes_MarkerToSawmill");
DB_QuestDef_AddEvent("RC_GY_MemorialOfHeroes","QuestUpdate_RC_GY_MemorialOfHeroes_MarkerToFarmlands");
DB_QuestDef_AddEvent("RC_GY_MemorialOfHeroes","QuestUpdate_RC_GY_MemorialOfHeroes_MarkerToGraveyard");
DB_QuestDef_AddEvent("RC_GY_MemorialOfHeroes","QuestUpdate_RC_GY_MemorialOfHeroes_MarkerToOilfields");
DB_QuestDef_State("RC_GY_MemorialOfHeroes","FoundBurial",1);

DB_QuestDef_State("RC_GY_MemorialOfHeroes","FoundMemorialBook"); //QuestUpdate_RC_GY_MemorialOfHeroes_FoundMemorialBook
DB_QuestDef_State("RC_GY_MemorialOfHeroes","MarkerToSawmill"); //QuestUpdate_RC_GY_MemorialOfHeroes_MarkerToSawmill
DB_QuestDef_State("RC_GY_MemorialOfHeroes","MarkerToFarmlands"); //QuestUpdate_RC_GY_MemorialOfHeroes_MarkerToFarmlands
DB_QuestDef_State("RC_GY_MemorialOfHeroes","MarkerToGraveyard"); //QuestUpdate_RC_GY_MemorialOfHeroes_MarkerToGraveyard
DB_QuestDef_State("RC_GY_MemorialOfHeroes","MarkerToOilfields"); //QuestUpdate_RC_GY_MemorialOfHeroes_MarkerToOilfields
DB_QuestDef_State("RC_GY_MemorialOfHeroes","GraveyardChest"); //QuestUpdate_RC_GY_MemorialOfHeroes_GraveyardChest
DB_QuestDef_State("RC_GY_MemorialOfHeroes","OilfieldChest"); //QuestUpdate_RC_GY_MemorialOfHeroes_OilfieldChest
DB_QuestDef_State("RC_GY_MemorialOfHeroes","SawmillChest"); //QuestUpdate_RC_GY_MemorialOfHeroes_SawmillChest
DB_QuestDef_State("RC_GY_MemorialOfHeroes","FarmlandsChest"); //QuestUpdate_RC_GY_MemorialOfHeroes_FarmlandsChest

DB_QuestDef_State("RC_GY_MemorialOfHeroes","CombatBurial");
DB_QuestDef_State("RC_GY_MemorialOfHeroes","CombatWon");//REMOVED
DB_QuestDef_State("RC_GY_MemorialOfHeroes","NoChests");  //QuestUpdate_RC_GY_MemorialOfHeroes_NoChests
DB_QuestDef_State("RC_GY_MemorialOfHeroes","RegionEnd");  //QuestUpdate_RC_GY_MemorialOfHeroes_NoChests

DB_QuestDef_State("RC_GY_MemorialOfHeroes","CloseLeftRC",-1);
DB_QuestDef_CloseEvent("RC_GY_MemorialOfHeroes","QuestUpdate_RC_GY_MemorialOfHeroes_NoChests");
DB_QuestDef_CloseEvent("RC_GY_MemorialOfHeroes","QuestUpdate_RC_GY_MemorialOfHeroes_RegionEnd");


//RC_GY_UglyBird
DB_QuestDef_State("RC_GY_UglyBird","FindBird",1);
DB_QuestDef_State("RC_GY_UglyBird","TalkBird");
DB_QuestDef_State("RC_GY_UglyBird","PhoenixBird");
DB_QuestDef_State("RC_GY_UglyBird","ConvinceBird");
DB_QuestDef_State("RC_GY_UglyBird","RefuseBird");
DB_QuestDef_State("RC_GY_UglyBird","BirdBurned");
DB_QuestDef_State("RC_GY_UglyBird","FoundEgg",-1);
DB_QuestDef_State("RC_GY_UglyBird","BirdKilled",-1);
DB_QuestDef_State("RC_GY_UglyBird","CloseLeftRC",-1);


DB_QuestDef_AddEvent("RC_GY_DeerGhost","QuestUpdate_RC_GY_DeerGhost_DeerRiddle");
DB_QuestDef_AddEvent("RC_GY_DeerGhost","QuestUpdate_RC_GY_DeerGhost_DeerTreasure");
DB_QuestDef_State("RC_GY_DeerGhost","DeerRiddle");
DB_QuestDef_State("RC_GY_DeerGhost","DeerTreasure");
DB_QuestDef_State("RC_GY_DeerGhost","CloseLeftRC",-1);

DB_QuestDef_CloseEvent("RC_GY_DeerGhost","QuestUpdate_RC_GY_DeerGhost_DeerTreasure");

// RC_GY_Godslayer
DB_QuestDef_State("RC_GY_Godslayer","Start",1); //QuestUpdate_RC_GY_Godslayer_Start
DB_QuestDef_State("RC_GY_Godslayer","StartMalady",1);
DB_QuestDef_State("RC_GY_Godslayer","FoundNote");
DB_QuestDef_State("RC_GY_Godslayer","FoundTomb");
DB_QuestDef_State("RC_GY_Godslayer","FoundShard");
DB_QuestDef_State("RC_GY_Godslayer","ToldShaftMissing");
DB_QuestDef_State("RC_GY_Godslayer","ArchivesLocation");
DB_QuestDef_State("RC_GY_Godslayer","FoundRuins");
DB_QuestDef_State("RC_GY_Godslayer","FoundShaft");
DB_QuestDef_State("RC_GY_Godslayer","HaveBothParts");
DB_QuestDef_State("RC_GY_Godslayer","GaveParts");
DB_QuestDef_State("RC_GY_Godslayer","KeptParts");

DB_QuestDef_State("RC_GY_Godslayer","NoPartsLeftRC",-1);
DB_QuestDef_State("RC_GY_Godslayer","TarquinDead",-1);
DB_QuestDef_State("RC_GY_Godslayer","CloseLeftRC",-1);
DB_QuestDef_CloseEvent("RC_GY_Godslayer","QuestUpdate_RC_GY_Godslayer_GaveParts");
DB_QuestDef_CloseEvent("RC_GY_Godslayer","QuestUpdate_RC_GY_Godslayer_KeptParts");

//RC_GY_WronglyBuried
DB_QuestDef_AddEvent("RC_GY_WronglyBuried","QuestUpdate_RC_GY_WronglyBuried_SeenGrave");
DB_QuestDef_State("RC_GY_WronglyBuried","SeenGrave");//QuestUpdate_RC_GY_WronglyBuried_SeenGrave

DB_QuestDef_State("RC_GY_WronglyBuried","SkeletonMet");//QuestUpdate_RC_GY_WronglyBuried_SkeletonMet

DB_QuestDef_State("RC_GY_WronglyBuried","DugUpGrave");//QuestUpdate_RC_GY_WronglyBuried_DugUpGrave
DB_QuestDef_State("RC_GY_WronglyBuried","ReadBook_1");//QuestUpdate_RC_GY_WronglyBuried_ReadBook_1
DB_QuestDef_State("RC_GY_WronglyBuried","ReadBook_2");//QuestUpdate_RC_GY_WronglyBuried_ReadBook_2
DB_QuestDef_State("RC_GY_WronglyBuried","ReadBook_3");//QuestUpdate_RC_GY_WronglyBuried_ReadBook_3

DB_QuestDef_State("RC_GY_WronglyBuried","ReadBook_All");//QuestUpdate_RC_GY_WronglyBuried_ReadBook_All

DB_QuestDef_State("RC_GY_WronglyBuried","PlayerExploded");//QuestUpdate_RC_GY_WronglyBuried_PlayerExploded
DB_QuestDef_State("RC_GY_WronglyBuried","SkellyExploded");//QuestUpdate_RC_GY_WronglyBuried_SkellyExploded
DB_QuestDef_State("RC_GY_WronglyBuried","SkeletonDead"); //REMOVED
DB_QuestDef_State("RC_GY_WronglyBuried","CloseLeftRCSecret",-1);
DB_QuestDef_State("RC_GY_WronglyBuried","CloseLeftRCPact",-1);




DB_QuestDef_CloseEvent("RC_GY_WronglyBuried","QuestUpdate_RC_GY_WronglyBuried_SkellyExploded");


DB_QuestDef_AddEvent("RC_GY_KillRyker","QuestUpdate_RC_GY_KillRyker_Started");
DB_QuestDef_State("RC_GY_KillRyker","Started");
DB_QuestDef_State("RC_GY_KillRyker","Killed");
DB_QuestDef_State("RC_GY_KillRyker","Died");
DB_QuestDef_State("RC_GY_KillRyker","Reported");
DB_QuestDef_State("RC_GY_KillRyker","CloseLeftRC",-1);
DB_QuestDef_CloseEvent("RC_GY_KillRyker","QuestUpdate_RC_GY_KillRyker_Died");
DB_QuestDef_CloseEvent("RC_GY_KillRyker","QuestUpdate_RC_GY_KillRyker_Reported");

//END_REGION
//REGION Oilfields

// RC_OIL_Main
DB_QuestDef_State("RC_OIL_Main","Ryker",1); // QuestUpdate_RC_OIL_Main_Ryker
DB_QuestDef_State("RC_OIL_Main","Cave",1); // QuestUpdate_RC_OIL_Main_Cave
DB_QuestDef_State("RC_OIL_Main","BlackRingHint",1);

DB_QuestDef_State("RC_OIL_Main","BlackRingReveal");
DB_QuestDef_State("RC_OIL_Main","Tablet"); //REMOVED
DB_QuestDef_State("RC_OIL_Main","Traps"); // QuestUpdate_RC_OIL_Main_Traps
DB_QuestDef_State("RC_OIL_Main","Workshop"); // QuestUpdate_RC_OIL_Main_Workshop
DB_QuestDef_State("RC_OIL_Main","Temple"); // QuestUpdate_RC_OIL_Main_Temple
DB_QuestDef_State("RC_OIL_Main","HurryDallis");
DB_QuestDef_State("RC_OIL_Main","DivineStaff");
DB_QuestDef_State("RC_OIL_Main","PuzzleFind");
DB_QuestDef_State("RC_OIL_Main","PuzzleHint");
DB_QuestDef_UpdateEvent("RC_OIL_Main","PuzzleHint2","QuestUpdate_RC_OIL_Main_PuzzleHint");
DB_QuestDef_UpdateEvent("RC_OIL_Main","PuzzleHint3","QuestUpdate_RC_OIL_Main_PuzzleHint");
DB_QuestDef_State("RC_OIL_Main","PuzzleSolve");
DB_QuestDef_State("RC_OIL_Main","AtaraxianJournal"); //REMOVED
DB_QuestDef_State("RC_OIL_Main","OtherTablet1"); //REMOVED
DB_QuestDef_State("RC_OIL_Main","OtherTablet2"); //REMOVED
DB_QuestDef_State("RC_OIL_Main","OpenTomb"); //REMOVED
DB_QuestDef_State("RC_OIL_Main","EternalFight");
DB_QuestDef_State("RC_OIL_Main","MagisterGhost");
DB_QuestDef_State("RC_OIL_Main","MagisterGhost2");
DB_QuestDef_State("RC_OIL_Main","SpeakAeteran"); // lore entry
DB_QuestDef_State("RC_OIL_Main","SpeakAeteranDallis"); // lore entry

DB_QuestDef_State("RC_OIL_Main","EternalKilled",-1);
DB_QuestDef_State("RC_OIL_Main","CloseLeftRC",-1);


// RC_DF_PaladinCheckpoint
DB_QuestDef_AddEvent("RC_DF_PaladinCheckpoint","QuestUpdate_RC_DF_PaladinCheckpoint_PaladinStart");
DB_QuestDef_State("RC_DF_PaladinCheckpoint","PaladinStart"); //QuestUpdate_RC_DF_PaladinCheckpoint_PaladinStart
DB_QuestDef_State("RC_DF_PaladinCheckpoint","SavedBlackring"); //QuestUpdate_RC_DF_PaladinCheckpoint_SavedBlackring
DB_QuestDef_State("RC_DF_PaladinCheckpoint","SavedAllBlackring"); //QuestUpdate_RC_DF_PaladinCheckpoint_SavedAllBlackring
DB_QuestDef_State("RC_DF_PaladinCheckpoint","WhiteMagister"); //QuestUpdate_RC_DF_PaladinCheckpoint_WhiteMagister
DB_QuestDef_State("RC_DF_PaladinCheckpoint","SentWarOwl"); //QuestUpdate_RC_DF_PaladinCheckpoint_SentWarOwl
DB_QuestDef_State("RC_DF_PaladinCheckpoint","ToldPaladin"); //QuestUpdate_RC_DF_PaladinCheckpoint_ToldPaladin
DB_QuestDef_State("RC_DF_PaladinCheckpoint","Finished"); //QuestUpdate_RC_DF_PaladinCheckpoint_Finished
DB_QuestDef_State("RC_DF_PaladinCheckpoint","MagistersTalking");//REMOVED

DB_QuestDef_State("RC_DF_PaladinCheckpoint","PaladinAttack");
DB_QuestDef_State("RC_DF_PaladinCheckpoint","PaladinWon");
DB_QuestDef_State("RC_DF_PaladinCheckpoint","EnterBlackPits");
DB_QuestDef_State("RC_DF_PaladinCheckpoint","EnterDocks");
DB_QuestDef_State("RC_DF_PaladinCheckpoint","BlackRingGhost");
DB_QuestDef_State("RC_DF_PaladinCheckpoint","MagistersTalking");//REMOVED
DB_QuestDef_State("RC_DF_PaladinCheckpoint","MagisterDock");
DB_QuestDef_State("RC_DF_PaladinCheckpoint","EnterOilrig");
DB_QuestDef_State("RC_DF_PaladinCheckpoint","MetJonathan");

DB_QuestDef_State("RC_DF_PaladinCheckpoint","PaladinDead",-1);
DB_QuestDef_State("RC_DF_PaladinCheckpoint","CloseLeftRC",-1);
DB_QuestDef_CloseEvent("RC_DF_PaladinCheckpoint","QuestUpdate_RC_DF_PaladinCheckpoint_Finished");
//DB_QuestDef_UpdateEvent("RC_DF_PaladinCheckpoint","PaladinStart","QuestUpdate_RC_DF_PaladinCheckpoint_WhiteMagister");
//DB_QuestDef_UpdateEvent("RC_DF_PaladinCheckpoint","PaladinStart","QuestUpdate_RC_DF_PaladinCheckpoint_PaladinStart"); //QuestUpdate_RC_DF_PaladinCheckpoint_PaladinStart


// RC_OIL_FourthHouse
DB_QuestDef_AddEvent("RC_OIL_FourthHouse","QuestUpdate_RC_OIL_FourthHouse_StartMagister");
DB_QuestDef_State("RC_OIL_FourthHouse","StartMagister"); //QuestUpdate_RC_OIL_FourthHouse_StartMagister
DB_QuestDef_State("RC_OIL_FourthHouse","TakeOver"); //QuestUpdate_RC_OIL_FourthHouse_TakeOver
DB_QuestDef_State("RC_OIL_FourthHouse","EnterCellar"); //QuestUpdate_RC_OIL_FourthHouse_EnterCellar
DB_QuestDef_State("RC_OIL_FourthHouse","Cellar"); //QuestUpdate_RC_OIL_FourthHouse_Cellar
DB_QuestDef_State("RC_OIL_FourthHouse","Unarmed"); //QuestUpdate_RC_OIL_FourthHouse_Unarmed
DB_QuestDef_State("RC_OIL_FourthHouse","Armed"); //QuestUpdate_RC_OIL_FourthHouse_Armed
DB_QuestDef_State("RC_OIL_FourthHouse","MagistersDead"); //QuestUpdate_RC_OIL_FourthHouse_MagistersDead
DB_QuestDef_State("RC_OIL_FourthHouse","ManDead"); //QuestUpdate_RC_OIL_FourthHouse_ManDead
DB_QuestDef_State("RC_OIL_FourthHouse","EndMagister"); //QuestUpdate_RC_OIL_FourthHouse_EndMagister
DB_QuestDef_State("RC_OIL_FourthHouse","EndMan"); //QuestUpdate_RC_OIL_FourthHouse_EndMan
DB_QuestDef_State("RC_OIL_FourthHouse","RegionEnd"); //QuestUpdate_RC_OIL_FourthHouse_RegionEnd

DB_QuestDef_CloseEvent("RC_OIL_FourthHouse","QuestUpdate_RC_OIL_FourthHouse_EndMagister");
DB_QuestDef_CloseEvent("RC_OIL_FourthHouse","QuestUpdate_RC_OIL_FourthHouse_EndMan");
DB_QuestDef_CloseEvent("RC_OIL_FourthHouse","QuestUpdate_RC_OIL_FourthHouse_RegionEnd");

//END_REGION
//REGION Farmlands
//Broken Promises
DB_QuestDef_AddEvent("RC_FL_BrokenPromises","QuestUpdate_RC_FL_BrokenPromises_Start");
DB_QuestDef_AddEvent("RC_FL_BrokenPromises","QuestUpdate_RC_FL_BrokenPromises_MetAlmira");
DB_QuestDef_State("RC_FL_BrokenPromises","Start");//QuestUpdate_RC_FL_BrokenPromises_Start
DB_QuestDef_State("RC_FL_BrokenPromises","MetAlmira");//QuestUpdate_RC_FL_BrokenPromises_MetAlmira

DB_QuestDef_State("RC_FL_BrokenPromises","HelpAlmira");//QuestUpdate_RC_FL_BrokenPromises_HelpAlmira

DB_QuestDef_State("RC_FL_BrokenPromises","DealWithAura");//QuestUpdate_RC_FL_BrokenPromises_DealWithAura
DB_QuestDef_State("RC_FL_BrokenPromises","FoundAlanBoss");//QuestUpdate_RC_FL_BrokenPromises_FoundAlanBoss
DB_QuestDef_State("RC_FL_BrokenPromises","KilledAlanBoss");//QuestUpdate_RC_FL_BrokenPromises_KilledAlanBoss
DB_QuestDef_State("RC_FL_BrokenPromises","ClearSurfaces");//QuestUpdate_RC_FL_BrokenPromises_ClearSurfaces
DB_QuestDef_State("RC_FL_BrokenPromises","Escort");//QuestUpdate_RC_FL_BrokenPromises_Escort
DB_QuestDef_State("RC_FL_BrokenPromises","Escaped");//QuestUpdate_RC_FL_BrokenPromises_Escaped
DB_QuestDef_State("RC_FL_BrokenPromises","MihalyDied");//QuestUpdate_RC_FL_BrokenPromises_MihalyDied
DB_QuestDef_State("RC_FL_BrokenPromises","AlmiraDied");//QuestUpdate_RC_FL_BrokenPromises_AlmiraDied
DB_QuestDef_State("RC_FL_BrokenPromises","AlmiraHostile");

DB_QuestDef_State("RC_FL_BrokenPromises","AlmiraToLV",-1);

DB_QuestDef_State("RC_FL_BrokenPromises","CloseLeftRCFarmlandsSecret",-1);
DB_QuestDef_State("RC_FL_BrokenPromises","CloseLeftRCEscapeFarmlands",-1);

DB_QuestDef_CloseEvent("RC_FL_BrokenPromises","QuestUpdate_RC_FL_BrokenPromises_AlmiraDied");

//RC_FL_TabletForAlmira
DB_QuestDef_AddEvent("RC_FL_TabletForAlmira","QuestUpdate_RC_FL_TabletForAlmira_TabletQuest");
DB_QuestDef_State("RC_FL_TabletForAlmira","TabletQuest");//QuestUpdate_RC_FL_TabletForAlmira_TabletQuest
DB_QuestDef_State("RC_FL_TabletForAlmira","TabletFound");//QuestUpdate_RC_FL_TabletForAlmira_TabletFound
DB_QuestDef_State("RC_FL_TabletForAlmira","ToldOfMissingTablet",-1);//QuestUpdate_RC_FL_TabletForAlmira_ToldOfMissingTablet
DB_QuestDef_State("RC_FL_TabletForAlmira","LeftRegion",-1);//QuestUpdate_RC_FL_TabletForAlmira_LeftRegion
DB_QuestDef_State("RC_FL_TabletForAlmira","GaveTabletAlmira",-1);//QuestUpdate_RC_FL_TabletForAlmira_GaveTabletAlmira
//DB_QuestDef_State("RC_FL_TabletForAlmira","CloseLeftRC",-1);

//END_REGION
//REGION Blood Forest
DB_QuestDef_AddEvent("RC_BF_ThePresence","QuestUpdate_RC_BF_ThePresence_FoundDemonHunter");
DB_QuestDef_State("RC_BF_ThePresence","FoundDemonHunter");
DB_QuestDef_State("RC_BF_ThePresence","GotTaskKillLizardDemon");
DB_QuestDef_State("RC_BF_ThePresence","FoundTheLizard");
DB_QuestDef_State("RC_BF_ThePresence","LetLizardLive");
DB_QuestDef_State("RC_BF_ThePresence","KilledLizardDemon");
DB_QuestDef_State("RC_BF_ThePresence","ReportedKilledLizardDemon");
DB_QuestDef_State("RC_BF_ThePresence","GotTaskGetDemonsName");
DB_QuestDef_State("RC_BF_ThePresence","FoundOutDemonsName");
DB_QuestDef_State("RC_BF_ThePresence","WithholdDemonsName");//REMOVED
DB_QuestDef_State("RC_BF_ThePresence","ToldDemonsName");
DB_QuestDef_State("RC_BF_ThePresence","DemonHunterDead");
DB_QuestDef_State("RC_BF_ThePresence","CloseLeftRCNoJahanTask",-1);
DB_QuestDef_State("RC_BF_ThePresence","CloseLeftRCSecretIsland",-1);

DB_QuestDef_CloseEvent("RC_BF_ThePresence","QuestUpdate_RC_BF_ThePresence_ToldDemonsName");
DB_QuestDef_CloseEvent("RC_BF_ThePresence","QuestUpdate_RC_BF_ThePresence_DemonHunterDead");
//END_REGION
//REGION Blood Island
DB_QuestDef_AddEvent("RC_BI_ThePresence","QuestUpdate_RC_BI_ThePresence_UnexpectedWelcome");
DB_QuestDef_AddEvent("RC_BI_ThePresence","QuestUpdate_RC_BI_ThePresence_LizardDemonFound");
DB_QuestDef_AddEvent("RC_BI_ThePresence","QuestUpdate_RC_BI_ThePresence_AncestorTreeFound");
DB_QuestDef_State("RC_BI_ThePresence","UnexpectedWelcome");
DB_QuestDef_State("RC_BI_ThePresence","LizardDemonFound");
DB_QuestDef_State("RC_BI_ThePresence","AncestorTreeFound");
DB_QuestDef_State("RC_BI_ThePresence","LizardDemonDead");
DB_QuestDef_State("RC_BI_ThePresence","GotTaskKillVoidwoken");
DB_QuestDef_State("RC_BI_ThePresence","KilledVoidwoken");
DB_QuestDef_State("RC_BI_ThePresence","Reported");
DB_QuestDef_State("RC_BI_ThePresence","UnexpectedCompletion");
DB_QuestDef_State("RC_BI_ThePresence", "BetrayDemon");//REMOVED
DB_QuestDef_State("RC_BI_ThePresence", "GodkingPersuade");
DB_QuestDef_State("RC_BI_ThePresence", "GodkingFail");
DB_QuestDef_State("RC_BI_ThePresence","CloseLeftRC",-1);
DB_QuestDef_CloseEvent("RC_BI_ThePresence","QuestUpdate_RC_BI_ThePresence_LizardDemonDead");
DB_QuestDef_CloseEvent("RC_BI_ThePresence","QuestUpdate_RC_BI_ThePresence_Reported");
DB_QuestDef_CloseEvent("RC_BI_ThePresence","QuestUpdate_RC_BI_ThePresence_UnexpectedCompletion");


//RC_BI_TheTruth - PARTY
DB_QuestDef_AddEvent("RC_BI_TheTruth","QuestUpdate_RC_BI_TheTruth_BlackringGhost");
DB_QuestDef_AddEvent("RC_BI_TheTruth","QuestUpdate_RC_BI_TheTruth_BlackringLetter");
DB_QuestDef_AddEvent("RC_BI_TheTruth","QuestUpdate_RC_BI_TheTruth_FoundOutTreesName");
DB_QuestDef_AddEvent("RC_BI_TheTruth","QuestUpdate_RC_BI_TheTruth_ArchiveKnown");
DB_QuestDef_AddEvent("RC_BI_TheTruth","QuestUpdate_RC_BI_TheTruth_ArchiveDiscovered"); 
DB_QuestDef_AddEvent("RC_BI_TheTruth","QuestUpdate_RC_BI_TheTruth_TalkedLizard"); 
DB_QuestDef_AddEvent("RC_BI_TheTruth","QuestUpdate_RC_BI_TheTruth_TalkedMadTree"); 
DB_QuestDef_State("RC_BI_TheTruth","TalkedLizard");
DB_QuestDef_State("RC_BI_TheTruth","TalkedMadTree");
DB_QuestDef_State("RC_BI_TheTruth","BlackringGhost");
DB_QuestDef_State("RC_BI_TheTruth","BlackringLetter");
DB_QuestDef_State("RC_BI_TheTruth","ArchiveKnown");
DB_QuestDef_State("RC_BI_TheTruth","ArchiveLocated");
DB_QuestDef_State("RC_BI_TheTruth","ArchiveDiscovered");
DB_QuestDef_State("RC_BI_TheTruth","ReadBlackRingOrders"); //REMOVED
DB_QuestDef_State("RC_BI_TheTruth","BlackRingSeekDruid");
DB_QuestDef_State("RC_BI_TheTruth","FoundOutTreesName");
DB_QuestDef_UpdateEvent("RC_BI_TheTruth","FoundOutTreesName2","QuestUpdate_RC_BI_TheTruth_FoundOutTreesName");//REMOVED
DB_QuestDef_UpdateEvent("RC_BI_TheTruth","FoundOutTreesName3","QuestUpdate_RC_BI_TheTruth_FoundOutTreesName");//REMOVED
DB_QuestDef_State("RC_BI_TheTruth","LizardAttack");
DB_QuestDef_State("RC_BI_TheTruth","FoundOutDemonsName");
DB_QuestDef_UpdateEvent("RC_BI_TheTruth","FoundOutDemonsName2","QuestUpdate_RC_BI_TheTruth_FoundOutDemonsName");//REMOVED
DB_QuestDef_State("RC_BI_TheTruth","ToldJahan");
DB_QuestDef_State("RC_BI_TheTruth","MoveToNextCategory");
DB_QuestDef_State("RC_BI_TheTruth","FoundDoctor");
DB_QuestDef_State("RC_BI_TheTruth","KilledDoctor");
DB_QuestDef_State("RC_BI_TheTruth","StartArx");
DB_QuestDef_State("RC_BI_TheTruth","CloseLeftRCSecret",-1);
DB_QuestDef_State("RC_BI_TheTruth","TreeThanks",-1);
DB_QuestDef_State("RC_BI_TheTruth","CloseLeftArxTree",-1);
DB_QuestDef_State("RC_BI_TheTruth","CloseLeftArxTreeThanks",-1);


//RC_BI_TheVaults - PARTY
DB_QuestDef_State("RC_BI_TheVaults","DiscoveredStatues",1);
DB_QuestDef_State("RC_BI_TheVaults","LocatedVaults",1);
DB_QuestDef_State("RC_BI_TheVaults","DiscoveredRuins",1);
DB_QuestDef_State("RC_BI_TheVaults","LearnedAboutHymn",1);

DB_QuestDef_State("RC_BI_TheVaults","LearnedAboutVaults",1);

DB_QuestDef_State("RC_BI_TheVaults","LearnedAboutBooks");
DB_QuestDef_State("RC_BI_TheVaults","LearnedHymn");
DB_QuestDef_State("RC_BI_TheVaults","Diary01"); //REMOVED
DB_QuestDef_State("RC_BI_TheVaults","Diary02"); //REMOVED
DB_QuestDef_State("RC_BI_TheVaults","Diary03"); //REMOVED

DB_QuestDef_State("RC_BI_TheVaults","Completed",-1);
DB_QuestDef_State("RC_BI_TheVaults","LeftRegion",-1);

//SUBD
DB_QuestDef_State("RC_BI_TheVaults","DiscoveredShaftRecipe"); //Flag given through dialogue w/ Priest ghost
DB_QuestDef_State("RC_BI_TheVaults","FoundForgeNoRecipe");
DB_QuestDef_State("RC_BI_TheVaults","FoundForgeRecipe");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","ForgedShaft","RC_BI_AncientForgeCrafted"); //RC_BI_AncientForgeCrafted

DB_QuestDef_CloseEvent("RC_BI_TheVaults_SUBD","RC_BI_AncientForgeCrafted");


//MERGE FROM TheVaultGodwoken
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","BookGodwoken","QuestUpdate_RC_BI_TheVaultGodwoken_BookGodwoken");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","OpenSealGodwoken","QuestUpdate_RC_BI_TheVaultGodwoken_OpenSeal");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","EnterVaultGodwoken","QuestUpdate_RC_BI_TheVaultGodwoken_EnterVault");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","UsedBrokenLeverGodwoken","QuestUpdate_RC_BI_TheVaultGodwoken_UsedBrokenLever");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","RepairLeverGodwoken","QuestUpdate_RC_BI_TheVaultGodwoken_RepairLever");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","UsedEnchantedLeverGodwoken","QuestUpdate_RC_BI_TheVaultGodwoken_UsedEnchantedLever");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","TalkedPriestVault003","QuestUpdate_RC_BI_TheVaultGodwoken_TalkedPriestVault003");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","BrotherSVGodwoken","QuestUpdate_RC_BI_TheVaultGodwoken_BrotherSV");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","BrotherPersuadedGodwoken","QuestUpdate_RC_BI_TheVaultGodwoken_BrotherPersuaded");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","OpenedDoorGodwoken","QuestUpdate_RC_BI_TheVaultGodwoken_OpenedDoor");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","GodwokenMet","QuestUpdate_RC_BI_TheVaultGodwoken_GodwokenMet");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","GodwokenPersuasionFail","QuestUpdate_RC_BI_TheVaultGodwoken_GodwokenPersuasionFail");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","GodwokenPersuasionSucceed","QuestUpdate_RC_BI_TheVaultGodwoken_GodwokenPersuasionSucceed");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","DestroyedPillarsGodwoken","QuestUpdate_RC_BI_TheVaultGodwoken_DestroyedPillars");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","KilledGodwoken","QuestUpdate_RC_BI_TheVaultGodwoken_KilledGodwoken");

DB_QuestDef_CloseEvent("RC_BI_TheVaults_SUBA","QuestUpdate_RC_BI_TheVaultGodwoken_KilledGodwoken");

//MERGE FROM TheVaultKid
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","BookKid","QuestUpdate_RC_BI_TheVaultKid_BookKid");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","OpenSealKid","QuestUpdate_RC_BI_TheVaultKid_OpenSeal");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","EnterVaultKid","QuestUpdate_RC_BI_TheVaultKid_EnterVault");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","UsedBrokenLeverKid","QuestUpdate_RC_BI_TheVaultKid_UsedBrokenLever");//REMOVED
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","RepairLeverKid","QuestUpdate_RC_BI_TheVaultKid_RepairLever");//REMOVED
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","UsedEnchantedLeverKid","QuestUpdate_RC_BI_TheVaultKid_UsedEnchantedLever");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","TalkedPriestVault002","QuestUpdate_RC_BI_TheVaultKid_TalkedPriestVault002");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","BrotherSVKid","QuestUpdate_RC_BI_TheVaultKid_BrotherSV");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","BrotherPersuadedKid","QuestUpdate_RC_BI_TheVaultKid_BrotherPersuaded");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","OpenedDoorKid","QuestUpdate_RC_BI_TheVaultKid_OpenedDoor");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","KidMet","QuestUpdate_RC_BI_TheVaultKid_KidMet");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","KilledCat","QuestUpdate_RC_BI_TheVaultKid_KilledCat");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","PersuadedCat","QuestUpdate_RC_BI_TheVaultKid_PersuadedCat");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","DestroyedPillarsKid","QuestUpdate_RC_BI_TheVaultKid_DestroyedPillars");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","TookKid","QuestUpdate_RC_BI_TheVaultKid_TookKid");

DB_QuestDef_CloseEvent("RC_BI_TheVaults_SUBB","QuestUpdate_RC_BI_TheVaultKid_TookKid");

//MERGE FROM TheVaultAdventurer
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","BookAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_BookAdventurer");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","OpenSealAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_OpenSeal");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","EnterVaultAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_EnterVault");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","UsedBrokenLeverAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_UsedBrokenLever");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","RepairLeverAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_RepairLever");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","UsedEnchantedLeverAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_UsedEnchantedLever");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","TalkedPriestVault001","QuestUpdate_RC_BI_TheVaultAdventurer_TalkedPriestVault001");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","BrotherSVAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_BrotherSV");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","BrotherPersuadedAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_BrotherPersuaded");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","OpenedDoorAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_OpenedDoor");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","AdventurerMet","QuestUpdate_RC_BI_TheVaultAdventurer_AdventurerMet");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","DestroyedPillarsAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_DestroyedPillars");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","DemonAppear","QuestUpdate_RC_BI_TheVaultAdventurer_DemonAppear");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","KilledAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_KilledAdventurer");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","SavedAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_SavedAdventurer");

DB_QuestDef_CloseEvent("RC_BI_TheVaults_SUBB","QuestUpdate_RC_BI_TheVaultAdventurer_KilledAdventurer");
DB_QuestDef_CloseEvent("RC_BI_TheVaults_SUBB","QuestUpdate_RC_BI_TheVaultAdventurer_SavedAdventurer");

/*
ATTENTION - MOVED ALL VAULT BOOSTERS (TheVaultGodwoken, TheVaultKid & TheVaultAdventurer) INTO TheVaults
*/

//RC_BI_TheVaultGodwoken - PARTY
DB_QuestDef_State("RC_BI_TheVaultGodwoken","EnterVault",1);
DB_QuestDef_State("RC_BI_TheVaultGodwoken","OpenSeal",1);
DB_QuestDef_State("RC_BI_TheVaultGodwoken","BookGodwoken",1);
DB_QuestDef_State("RC_BI_TheVaultGodwoken","TalkedPriestVault003");
DB_QuestDef_State("RC_BI_TheVaultGodwoken","UsedBrokenLever");
DB_QuestDef_State("RC_BI_TheVaultGodwoken","RepairLever");
DB_QuestDef_State("RC_BI_TheVaultGodwoken","UsedEnchantedLever");
DB_QuestDef_State("RC_BI_TheVaultGodwoken","BrotherSV");
DB_QuestDef_State("RC_BI_TheVaultGodwoken","BrotherPersuaded");
DB_QuestDef_State("RC_BI_TheVaultGodwoken","OpenedDoor");
DB_QuestDef_State("RC_BI_TheVaultGodwoken","GodwokenMet");
DB_QuestDef_State("RC_BI_TheVaultGodwoken","GodwokenPersuasionFail");
DB_QuestDef_State("RC_BI_TheVaultGodwoken","GodwokenPersuasionSucceed");
DB_QuestDef_State("RC_BI_TheVaultGodwoken","DestroyedPillars");
DB_QuestDef_State("RC_BI_TheVaultGodwoken","KilledGodwoken",-1);
DB_QuestDef_State("RC_BI_TheVaultGodwoken","LeftRegion",-1);//NOT MERGED, REMOVED


//RC_BI_TheVaultKid - PARTY
DB_QuestDef_State("RC_BI_TheVaultKid","EnterVault",1);
DB_QuestDef_State("RC_BI_TheVaultKid","OpenSeal",1);
DB_QuestDef_State("RC_BI_TheVaultKid","BookKid",1);
DB_QuestDef_State("RC_BI_TheVaultKid","TalkedPriestVault002");
DB_QuestDef_State("RC_BI_TheVaultKid","UsedBrokenLever");
DB_QuestDef_State("RC_BI_TheVaultKid","RepairLever");
DB_QuestDef_State("RC_BI_TheVaultKid","UsedEnchantedLever");
DB_QuestDef_State("RC_BI_TheVaultKid","BrotherSV");
DB_QuestDef_State("RC_BI_TheVaultKid","BrotherPersuaded");
DB_QuestDef_State("RC_BI_TheVaultKid","OpenedDoor");
DB_QuestDef_State("RC_BI_TheVaultKid","KidMet");
DB_QuestDef_State("RC_BI_TheVaultKid","KilledCat");
DB_QuestDef_State("RC_BI_TheVaultKid","PersuadedCat");
DB_QuestDef_State("RC_BI_TheVaultKid","DestroyedPillars");
DB_QuestDef_State("RC_BI_TheVaultKid","TookKid",-1);
DB_QuestDef_State("RC_BI_TheVaultKid","LeftRegion",-1);//NOT MERGED, REMOVED


//RC_BI_TheVaultAdventurer - PARTY
DB_QuestDef_State("RC_BI_TheVaultAdventurer","EnterVault",1);
DB_QuestDef_State("RC_BI_TheVaultAdventurer","OpenSeal",1);
DB_QuestDef_State("RC_BI_TheVaultAdventurer","BookAdventurer",1);
DB_QuestDef_State("RC_BI_TheVaultAdventurer","TalkedPriestVault001");
DB_QuestDef_State("RC_BI_TheVaultAdventurer","UsedBrokenLever");
DB_QuestDef_State("RC_BI_TheVaultAdventurer","RepairLever");
DB_QuestDef_State("RC_BI_TheVaultAdventurer","UsedEnchantedLever");
DB_QuestDef_State("RC_BI_TheVaultAdventurer","BrotherSV");
DB_QuestDef_State("RC_BI_TheVaultAdventurer","BrotherPersuaded");
DB_QuestDef_State("RC_BI_TheVaultAdventurer","OpenedDoor");
DB_QuestDef_State("RC_BI_TheVaultAdventurer","AdventurerMet");
DB_QuestDef_State("RC_BI_TheVaultAdventurer","DestroyedPillars");
DB_QuestDef_State("RC_BI_TheVaultAdventurer","KilledAdventurer",-1);
DB_QuestDef_State("RC_BI_TheVaultAdventurer","SavedAdventurer",-1);
DB_QuestDef_State("RC_BI_TheVaultAdventurer","LeftRegion",-1);//NOT MERGED, REMOVED


//RC_BI_Druid
DB_QuestDef_State("RC_BI_Druid","MetDruid",1); //QuestUpdate_RC_BI_Druid_MetDruid
DB_QuestDef_State("RC_BI_Druid","TellAboutArchive"); //QuestUpdate_RC_BI_Druid_TellAboutArchive
DB_QuestDef_State("RC_BI_Druid","ArchiveInfo"); // QuestUpdate_RC_BI_Druid_ArchiveInfo
DB_QuestDef_State("RC_BI_Druid","TalkedTree"); // QuestUpdate_RC_BI_Druid_TalkedTree
DB_QuestDef_State("RC_BI_Druid","Rewarded",-1); // QuestUpdate_RC_BI_Druid_Rewarded
DB_QuestDef_State("RC_BI_Druid","CloseLeftRC",-1);

//END_REGION
//REGION MIL

//RC_MIL_War
DB_QuestDef_State("RC_MIL_War","StartFrog");
DB_QuestDef_State("RC_MIL_War","StartRat");
DB_QuestDef_State("RC_MIL_War","FrogDead");
DB_QuestDef_State("RC_MIL_War","RatDead");
DB_QuestDef_State("RC_MIL_War","FrogPeace");
DB_QuestDef_State("RC_MIL_War","RatPeace");
DB_QuestDef_State("RC_MIL_War","AllDead",-1);
DB_QuestDef_State("RC_MIL_War","MakePeace");
DB_QuestDef_State("RC_MIL_War","RatDeadEnd");
DB_QuestDef_State("RC_MIL_War","FrogDeadEnd");

//RC_MIL_SyrusOates - USER
DB_QuestDef_State("RC_MIL_SyrusOates","GotQuest",1);
DB_QuestDef_UpdateEvent("RC_MIL_SyrusOates","KilledWolf2","RC_MIL_KilledGuardWolf1");
DB_QuestDef_State("RC_MIL_SyrusOates","GhostSucked",-1);
DB_QuestDef_State("RC_MIL_SyrusOates","GotReward",-1);
DB_QuestDef_State("RC_MIL_SyrusOates","CloseLeftRC",-1);

//RC_MIL_BlackWidowMaker - USER
DB_QuestDef_State("RC_MIL_BlackWidowMaker","GotQuest",1);
DB_QuestDef_UpdateEvent("RC_MIL_BlackWidowMaker","KilledWolf1","RC_MIL_KilledLizardWolf");
DB_QuestDef_State("RC_MIL_BlackWidowMaker","GhostSucked",-1);
DB_QuestDef_State("RC_MIL_BlackWidowMaker","GotReward",-1);
DB_QuestDef_State("RC_MIL_BlackWidowMaker","CloseLeftRC",-1);

//RC_MIL_EdieEngrym - USER
DB_QuestDef_State("RC_MIL_EdieEngrym","GotQuest",1);
DB_QuestDef_UpdateEvent("RC_MIL_EdieEngrym","PersuadedShSh2","RC_MIL_LoneWolfSaidEdieEngrymsName");
DB_QuestDef_UpdateEvent("RC_MIL_EdieEngrym","KilledShSh2","RC_MIL_KilledSharpshooter2");
DB_QuestDef_State("RC_MIL_EdieEngrym","GhostSucked",-1);
DB_QuestDef_State("RC_MIL_EdieEngrym","GotReward",-1);
DB_QuestDef_State("RC_MIL_EdieEngrym","CloseLeftRC",-1);
DB_QuestDef_State("RC_MIL_EdieEngrym","ShSh2HauntVanishedFail",-1);

//RC_MIL_Mudbarrow - USER
DB_QuestDef_State("RC_MIL_Mudbarrow","GotQuest",1);
DB_QuestDef_UpdateEvent("RC_MIL_Mudbarrow","ToldWolf2","RC_MIL_AskedLoneWolf2");
DB_QuestDef_UpdateEvent("RC_MIL_Mudbarrow","KilledWolf2","RC_MIL_KilledLoneWolf2");
DB_QuestDef_State("RC_MIL_Mudbarrow","GhostSucked",-1);
DB_QuestDef_State("RC_MIL_Mudbarrow","GotReward",-1);
DB_QuestDef_State("RC_MIL_Mudbarrow","CloseLeftRC",-1);

//RC_MIL_SavingCorbin - USER
DB_QuestDef_State("RC_MIL_SavingCorbin","CorbinMet",1);
DB_QuestDef_State("RC_MIL_SavingCorbin","LWDead");
DB_QuestDef_UpdateEvent("RC_MIL_SavingCorbin","LWDead","RC_MIL_AllLoneWolvesDead");
DB_QuestDef_State("RC_MIL_SavingCorbin","CorbinShip",-1);
DB_QuestDef_State("RC_MIL_SavingCorbin","CorbinFree",-1);
DB_QuestDef_State("RC_MIL_SavingCorbin","CorbinDead",-1);
DB_QuestDef_State("RC_MIL_SavingCorbin","CloseLeftRC",-1);

//END_REGION


// COS_Main - QCA_Chapter_05
//REGION Council of Seven

//Almira Quest
DB_QuestDef_AddEvent("CoS_BreakerForAlmira","QuestUpdate_CoS_BreakerForAlmira_Start");
DB_QuestDef_State("CoS_BreakerForAlmira","Start");//QuestUpdate_CoS_BreakerForAlmira_Start
DB_QuestDef_State("CoS_BreakerForAlmira","FoundShaft");//QuestUpdate_CoS_BreakerForAlmira_FoundShaft
DB_QuestDef_State("CoS_BreakerForAlmira","FoundBlade");//QuestUpdate_CoS_BreakerForAlmira_FoundBlade
DB_QuestDef_State("CoS_BreakerForAlmira","HaveBothParts");//QuestUpdate_CoS_BreakerForAlmira_HaveBothParts
DB_QuestDef_State("CoS_BreakerForAlmira","GaveParts");//QuestUpdate_CoS_BreakerForAlmira_GaveParts
DB_QuestDef_State("CoS_BreakerForAlmira","GotTabletBack");//QuestUpdate_CoS_BreakerForAlmira_GotTabletBack
DB_QuestDef_State("CoS_BreakerForAlmira","CraftedBreaker");//QuestUpdate_CoS_BreakerForAlmira_CraftedBreaker
DB_QuestDef_State("CoS_BreakerForAlmira","FoundBreaker");//QuestUpdate_CoS_BreakerForAlmira_FoundBreaker
DB_QuestDef_State("CoS_BreakerForAlmira","GaveBreaker");//QuestUpdate_CoS_BreakerForAlmira_GaveBreaker
DB_QuestDef_State("CoS_BreakerForAlmira","MoveToNextCategory");
DB_QuestDef_State("CoS_BreakerForAlmira","CloseLeftArx");
DB_QuestDef_CloseEvent("CoS_BreakerForAlmira","QuestUpdate_CoS_BreakerForAlmira_GaveParts");
DB_QuestDef_CloseEvent("CoS_BreakerForAlmira","QuestUpdate_CoS_BreakerForAlmira_GaveBreaker");
DB_QuestDef_CloseEvent("CoS_BreakerForAlmira","QuestUpdate_CoS_BreakerForAlmira_CloseLeftArx");


// Temples
DB_QuestDef_AddEvent("CoS_Temples","QuestUpdate_CoS_Temples_Start");
DB_QuestDef_State("CoS_Temples","Start");
DB_QuestDef_State("CoS_Temples","BeachDeadMagisters");

DB_QuestDef_State("CoS_Temples","Lunar_Human");
DB_QuestDef_State("CoS_Temples","Lunar_Elf");
DB_QuestDef_State("CoS_Temples","Lunar_Dwarf");
DB_QuestDef_State("CoS_Temples","Lunar_Orc");
DB_QuestDef_State("CoS_Temples","Lunar_Imp");
DB_QuestDef_State("CoS_Temples","Lunar_Wizard");
DB_QuestDef_State("CoS_Temples","Lunar_Lizard");
DB_QuestDef_State("CoS_Temples","Lunar_Capacitor");
DB_QuestDef_State("CoS_Temples","Lunar_Completed");

//SUBA
DB_QuestDef_State("CoS_Temples","Info_AlexandarsMagisters");
DB_QuestDef_State("CoS_Temples","Shriekers");
DB_QuestDef_State("CoS_Temples","Alexandar");//QuestUpdate_CoS_Temples_Alexandar //QuestUpdate_CoS_Temples_Sallow
DB_QuestDef_UpdateEvent("CoS_Temples","RewardAlexandar","QuestUpdate_CoS_HelpingAlexandar_End");
DB_QuestDef_UpdateEvent("CoS_Temples","AlexandarDead","CoS_AlexandarIsDeadQuestUpdater");

//SUBB
DB_QuestDef_UpdateEvent("CoS_Temples","BlackRingStart","QuestUpdate_CoS_HelpingTheSallowMan_Start_Almira");
DB_QuestDef_UpdateEvent("CoS_Temples","BlackRingStart","QuestUpdate_CoS_HelpingTheSallowMan_Start_Captain");
DB_QuestDef_UpdateEvent("CoS_Temples","BlackRingMirror","QuestUpdate_CoS_HelpingTheSallowMan_Start_Mirror");
DB_QuestDef_UpdateEvent("CoS_Temples","CompanionKiller","QuestUpdate_CoS_CompanionCulling_Start");
DB_QuestDef_State("CoS_Temples","GotHead");
DB_QuestDef_State("CoS_Temples","AteHead");
DB_QuestDef_UpdateEvent("CoS_Temples","RewardSallow","QuestUpdate_CoS_CompanionCulling_End");
DB_QuestDef_UpdateEvent("CoS_Temples","SallowDead","CoS_SallowManIsDeadQuestUpdater");

//SUBC
DB_QuestDef_State("CoS_Temples","Info_AccessTheCouncil");
DB_QuestDef_State("CoS_Temples","PrayedAltar"); //QuestUpdate_CoS_Temples_PrayedAltar
DB_QuestDef_State("CoS_Temples","SacrificeAllAltar"); //QuestUpdate_CoS_Temples_SacrificeAllAltar

DB_QuestDef_State("CoS_Temples","Alex_PowerSupply"); //REMOVED
//DB_QuestDef_State("CoS_Temples","Info_BlackRing"); //QuestUpdate_CoS_Temples_Info_BlackRing

DB_QuestDef_State("CoS_Temples","Completed_EnteredAcademy",-1);
DB_QuestDef_CloseEvent("CoS_Temples","QuestUpdate_CoS_Temples_Completed_EnteredAcademy");

DB_QuestDef_CloseEvent("CoS_Temples_SUBA","QuestUpdate_CoS_HelpingAlexandar_End");
DB_QuestDef_CloseEvent("CoS_Temples_SUBA","QuestUpdate_CoS_CompanionCulling_End");
DB_QuestDef_CloseEvent("CoS_Temples_SUBA","QuestUpdate_CoS_Temples_SacrificeAllAltar");
DB_QuestDef_CloseEvent("CoS_Temples_SUBA","CoS_AlexandarIsDeadQuestUpdater");

DB_QuestDef_UpdateEvent("CoS_Temples", "SUBA_SacrificeAllAltar", "QuestUpdate_CoS_Temples_SacrificeAllAltar");
DB_QuestDef_UpdateEvent("CoS_Temples", "SUBB_SacrificeAllAltar", "QuestUpdate_CoS_Temples_SacrificeAllAltar");
DB_QuestDef_UpdateEvent("CoS_Temples", "SUBB_RewardAlexandar", "QuestUpdate_CoS_HelpingAlexandar_End");
DB_QuestDef_UpdateEvent("CoS_Temples", "SUBC_RewardAlexandar", "QuestUpdate_CoS_HelpingAlexandar_End");
DB_QuestDef_CloseEvent("CoS_Temples_SUBB","QuestUpdate_CoS_HelpingAlexandar_End");
DB_QuestDef_CloseEvent("CoS_Temples_SUBB","QuestUpdate_CoS_CompanionCulling_End");
DB_QuestDef_CloseEvent("CoS_Temples_SUBB","QuestUpdate_CoS_Temples_SacrificeAllAltar");
DB_QuestDef_CloseEvent("CoS_Temples_SUBB","CoS_SallowManIsDeadQuestUpdater");
DB_QuestDef_CloseEvent("CoS_Temples_SUBB","QuestUpdate_CoS_Temples_AteHead");

DB_QuestDef_CloseEvent("CoS_Temples_SUBC","QuestUpdate_CoS_HelpingAlexandar_End");
DB_QuestDef_CloseEvent("CoS_Temples_SUBC","QuestUpdate_CoS_CompanionCulling_End");
DB_QuestDef_CloseEvent("CoS_Temples_SUBC","QuestUpdate_CoS_Temples_SacrificeAllAltar");

//Imp Temple
DB_QuestDef_State("CoS_ImpTemple","Start_Knight");//QuestUpdate_CoS_ImpTemple_Start_Knight
DB_QuestDef_State("CoS_ImpTemple","MetWargs");//QuestUpdate_CoS_ImpTemple_MetWargs
DB_QuestDef_State("CoS_ImpTemple","Wargs"); //QuestUpdate_CoS_ImpTemple_Wargs
DB_QuestDef_State("CoS_ImpTemple","UsedGem");//QuestUpdate_CoS_ImpTemple_UsedGem
DB_QuestDef_State("CoS_ImpTemple","ImpDiary");//QuestUpdate_CoS_ImpTemple_ImpDiary
DB_QuestDef_State("CoS_ImpTemple","SentToRealm");//QuestUpdate_CoS_ImpTemple_SentToRealm
DB_QuestDef_State("CoS_ImpTemple","TimeSlowed");//QuestUpdate_CoS_ImpTemple_TimeSlowed
DB_QuestDef_State("CoS_ImpTemple","Core_Info");//QuestUpdate_CoS_ImpTemple_Core_Info
DB_QuestDef_State("CoS_ImpTemple","Core_Deactivated");//QuestUpdate_CoS_ImpTemple_Core_Deactivated
DB_QuestDef_State("CoS_ImpTemple","End");//QuestUpdate_CoS_ImpTemple_End
DB_QuestDef_State("CoS_ImpTemple","CloseLeftCOS",-1);

DB_QuestDef_AddEvent("CoS_ImpTemple","QuestUpdate_CoS_ImpTemple_Start_Knight");
DB_QuestDef_AddEvent("CoS_ImpTemple","QuestUpdate_CoS_ImpTemple_UsedGem");
DB_QuestDef_CloseEvent("CoS_ImpTemple","QuestUpdate_CoS_ImpTemple_End");

//Orc Temple Entry
DB_QuestDef_AddEvent("CoS_OrcTemple","QuestUpdate_CoS_OrcTemple_Drowned");
DB_QuestDef_State("CoS_OrcTemple","Drowned");
DB_QuestDef_State("CoS_OrcTemple","Info");
DB_QuestDef_State("CoS_OrcTemple","PortalRemoved");
DB_QuestDef_State("CoS_OrcTemple","CloseLeftCOS",-1);
DB_QuestDef_CloseEvent("CoS_OrcTemple","QuestUpdate_CoS_OrcTemple_PortalRemoved");

//Wizard Temple

DB_QuestDef_State("CoS_WizardTemple","Start"); ///QuestUpdate_CoS_WizardTemple_Start
DB_QuestDef_State("CoS_WizardTemple","HoveringRunes"); //QuestUpdate_CoS_WizardTemple_HoveringRunes
DB_QuestDef_State("CoS_WizardTemple","PortalUnlocked"); //QuestUpdate_CoS_WizardTemple_PortalUnlocked
DB_QuestDef_State("CoS_WizardTemple","TrapsDisarmed"); //QuestUpdate_CoS_WizardTemple_TrapsDisarmed
DB_QuestDef_State("CoS_WizardTemple","KnightOfAmadia");//QuestUpdate_CoS_WizardTemple_KnightOfAmadia
DB_QuestDef_State("CoS_WizardTemple","CloseLeftCOS",-1);

DB_QuestDef_AddEvent("CoS_WizardTemple","QuestUpdate_CoS_WizardTemple_Start");
DB_QuestDef_CloseEvent("CoS_WizardTemple","QuestUpdate_CoS_WizardTemple_KnightOfAmadia");

//Sallow Man Quest
DB_QuestDef_State("CoS_HelpingTheSallowMan","Start_Mirror");
DB_QuestDef_State("CoS_HelpingTheSallowMan","Start_Captain");
DB_QuestDef_State("CoS_HelpingTheSallowMan","Start_Almira");
DB_QuestDef_State("CoS_HelpingTheSallowMan","Alexandar_Location");//REMOVED
DB_QuestDef_State("CoS_HelpingTheSallowMan","CampLocation");
DB_QuestDef_State("CoS_HelpingTheSallowMan","Alexandar_Dead");
DB_QuestDef_State("CoS_HelpingTheSallowMan","AteAlexandarHead");
DB_QuestDef_State("CoS_HelpingTheSallowMan","ReturnAlexandarHead");
DB_QuestDef_State("CoS_HelpingTheSallowMan","Fail_SallowManDead");
DB_QuestDef_State("CoS_HelpingTheSallowMan","End");
DB_QuestDef_State("CoS_HelpingTheSallowMan","CloseLeftCOS",-1);

DB_QuestDef_AddEvent("CoS_HelpingTheSallowMan","QuestUpdate_CoS_HelpingTheSallowMan_Start_Mirror");
DB_QuestDef_AddEvent("CoS_HelpingTheSallowMan","QuestUpdate_CoS_HelpingTheSallowMan_Start_Captain");
DB_QuestDef_AddEvent("CoS_HelpingTheSallowMan","QuestUpdate_CoS_HelpingTheSallowMan_Start_Almira");
DB_QuestDef_AddEvent("CoS_HelpingTheSallowMan","QuestUpdate_CoS_HelpingTheSallowMan_CampLocation");
DB_QuestDef_UpdateEvent("CoS_HelpingTheSallowMan","Fail_SallowManDead", "CoS_SallowManIsDeadQuestUpdater");
DB_QuestDef_UpdateEvent("CoS_HelpingTheSallowMan","Alexandar_Dead", "CoS_AlexandarIsDeadQuestUpdater");
DB_QuestDef_UpdateEvent("CoS_HelpingTheSallowMan","End", "QuestUpdate_CoS_HelpingTheSallowMan_End");
DB_QuestDef_UpdateEvent("CoS_HelpingTheSallowMan","AteAlexandarHead", "QuestUpdate_CoS_HelpingTheSallowMan_AteAlexandarHead");
DB_QuestDef_UpdateEvent("CoS_HelpingTheSallowMan","ReturnAlexandarHead", "CoS_Temples_GaveSallowManAlexandarsHead");
DB_QuestDef_CloseEvent("CoS_HelpingTheSallowMan","QuestUpdate_CoS_HelpingTheSallowMan_Fail_SallowManDead");
DB_QuestDef_CloseEvent("CoS_HelpingTheSallowMan","QuestUpdate_CoS_HelpingTheSallowMan_End");

//Sallow Man - Companion Culling
DB_QuestDef_State("CoS_CompanionCulling","Start");
DB_QuestDef_State("CoS_CompanionCulling","PurgingRod");
DB_QuestDef_State("CoS_CompanionCulling","Fail_SallowManDead");
DB_QuestDef_State("CoS_CompanionCulling","CompanionsCulled");
DB_QuestDef_State("CoS_CompanionCulling","AcceptedPromise");
DB_QuestDef_State("CoS_CompanionCulling","End");
DB_QuestDef_State("CoS_CompanionCulling","CloseLeftCOS",-1);


DB_QuestDef_AddEvent("CoS_CompanionCulling","QuestUpdate_CoS_CompanionCulling_Start");
DB_QuestDef_UpdateEvent("CoS_CompanionCulling","Fail_SallowManDead", "CoS_SallowManIsDeadQuestUpdater");
DB_QuestDef_UpdateEvent("CoS_CompanionCulling","End", "QuestUpdate_CoS_CompanionCulling_End");
DB_QuestDef_CloseEvent("CoS_CompanionCulling","CoS_SallowManIsDeadQuestUpdater");
DB_QuestDef_CloseEvent("CoS_CompanionCulling","QuestUpdate_CoS_CompanionCulling_End");

//Alexandar Quest
DB_QuestDef_State("CoS_HelpingAlexandar","Start");
DB_QuestDef_State("CoS_HelpingAlexandar","Start_SavedMagisters");
DB_QuestDef_State("CoS_HelpingAlexandar","Cowl");
DB_QuestDef_State("CoS_HelpingAlexandar","Alexandar_Dead");
DB_QuestDef_State("CoS_HelpingAlexandar","SallowMan_Dead");
DB_QuestDef_State("CoS_HelpingAlexandar","End");//QuestUpdate_CoS_HelpingAlexandar_End
DB_QuestDef_State("CoS_HelpingAlexandar","EndAcademy");//QuestUpdate_CoS_HelpingAlexandar_EndAcademy
DB_QuestDef_State("CoS_HelpingAlexandar","Leave");
DB_QuestDef_State("CoS_HelpingAlexandar","CloseLeftCOS",-1);

DB_QuestDef_AddEvent("CoS_HelpingAlexandar","QuestUpdate_CoS_HelpingAlexandar_Start");
DB_QuestDef_AddEvent("CoS_HelpingAlexandar","QuestUpdate_CoS_HelpingAlexandar_Start_SavedMagisters");
DB_QuestDef_UpdateEvent("CoS_HelpingAlexandar","SallowMan_Dead", "CoS_SallowManIsDeadQuestUpdater");
DB_QuestDef_UpdateEvent("CoS_HelpingAlexandar","Alexandar_Dead", "CoS_AlexandarIsDeadQuestUpdater");
DB_QuestDef_CloseEvent("CoS_HelpingAlexandar","QuestUpdate_CoS_HelpingAlexandar_Alexandar_Dead");
DB_QuestDef_CloseEvent("CoS_HelpingAlexandar","CoS_AlexandarIsDeadQuestUpdater");
DB_QuestDef_CloseEvent("CoS_HelpingAlexandar","CoS_AlexandarQuestClose");
DB_QuestDef_CloseEvent("CoS_HelpingAlexandar","QuestUpdate_CoS_HelpingAlexandar_EndAcademy");
//DB_QuestDef_CloseEvent("CoS_HelpingAlexandar","QuestUpdate_CoS_HelpingAlexandar_Leave");

//Delorus Quest
DB_QuestDef_State("CoS_Delorus","Start");
DB_QuestDef_State("CoS_Delorus","Fail_Dead");
DB_QuestDef_State("CoS_Delorus","Fail_LeftParty");
DB_QuestDef_State("CoS_Delorus","EnteredTemple");
DB_QuestDef_State("CoS_Delorus","Complete");

DB_QuestDef_AddEvent("CoS_Delorus","QuestUpdate_CoS_Delorus_Start");
DB_QuestDef_UpdateEvent("CoS_Delorus","Complete","QuestUpdate_CoS_Delorus_Complete");
DB_QuestDef_CloseEvent("CoS_Delorus","QuestUpdate_CoS_Delorus_Fail_Dead");
DB_QuestDef_CloseEvent("CoS_Delorus","QuestUpdate_CoS_Delorus_Fail_LeftParty");
DB_QuestDef_CloseEvent("CoS_Delorus","QuestUpdate_CoS_Delorus_Complete");

//Gareth Quest
DB_QuestDef_State("CoS_GarethsRevenge","Start_LV");
DB_QuestDef_State("CoS_GarethsRevenge","Start_ElfTemple");
DB_QuestDef_State("CoS_GarethsRevenge","SidedGareth");
DB_QuestDef_State("CoS_GarethsRevenge","SidedAlexandar");
DB_QuestDef_State("CoS_GarethsRevenge","End_GarethLeaves");
DB_QuestDef_State("CoS_GarethsRevenge","End_ReturnToLV");
DB_QuestDef_State("CoS_GarethsRevenge","End_GarethDead");
DB_QuestDef_State("CoS_GarethsRevenge","CloseLeftCOS",-1);

DB_QuestDef_AddEvent("CoS_GarethsRevenge","QuestUpdate_CoS_GarethsRevenge_Start_LV");
DB_QuestDef_AddEvent("CoS_GarethsRevenge","QuestUpdate_CoS_GarethsRevenge_Start_ElfTemple");
DB_QuestDef_UpdateEvent("CoS_GarethsRevenge","SidedGareth","QuestUpdate_CoS_GarethsRevenge_SidedGareth");
DB_QuestDef_UpdateEvent("CoS_GarethsRevenge","SidedAlexandar","QuestUpdate_CoS_GarethsRevenge_SidedAlexandar");
DB_QuestDef_CloseEvent("CoS_GarethsRevenge","QuestUpdate_CoS_GarethsRevenge_End_GarethLeaves");
DB_QuestDef_CloseEvent("CoS_GarethsRevenge","QuestUpdate_CoS_GarethsRevenge_End_ReturnToLV");
DB_QuestDef_CloseEvent("CoS_GarethsRevenge","QuestUpdate_CoS_GarethsRevenge_End_GarethDead");

//Black Ring
DB_QuestDef_State("CoS_BlackRing","Start");
DB_QuestDef_State("CoS_BlackRing","SallowMan");
DB_QuestDef_State("CoS_BlackRing","Betrayal"); //QuestUpdate_CoS_BlackRing_Betrayal
DB_QuestDef_State("CoS_BlackRing","BlackRingHostile");
DB_QuestDef_State("CoS_BlackRing","SallowMan_Dead");
DB_QuestDef_State("CoS_BlackRing","SallowMan_Helped");
DB_QuestDef_State("CoS_BlackRing","CloseLeftCOS",-1);

DB_QuestDef_AddEvent("CoS_BlackRing","QuestUpdate_CoS_BlackRing_Start");
DB_QuestDef_AddEvent("CoS_BlackRing","QuestUpdate_CoS_BlackRing_Betrayal");

DB_QuestDef_UpdateEvent("CoS_BlackRing","SallowMan","QuestUpdate_CoS_HelpingTheSallowMan_Start_Mirror");

DB_QuestDef_UpdateEvent("CoS_BlackRing","SallowMan_Dead","QuestUpdate_CoS_HelpingTheSallowMan_Fail_SallowManDead");
DB_QuestDef_UpdateEvent("CoS_BlackRing","BlackRingHostile","CoS_Temples_AllBlackRingHostileTo");
DB_QuestDef_UpdateEvent("CoS_BlackRing","SallowMan_Dead","CoS_SallowManIsDeadQuestUpdater");
DB_QuestDef_UpdateEvent("CoS_BlackRing","SallowMan_Helped","QuestUpdate_CoS_CompanionCulling_End");

DB_QuestDef_CloseEvent("CoS_BlackRing","QuestUpdate_CoS_BlackRing_SallowMan_Dead");
DB_QuestDef_CloseEvent("CoS_BlackRing","CoS_SallowManIsDeadQuestUpdater");
DB_QuestDef_CloseEvent("CoS_BlackRing","QuestUpdate_CoS_BlackRing_SallowMan_Helped");

//The Watcher
DB_QuestDef_State("CoS_TheWatcher","Start");
DB_QuestDef_State("CoS_TheWatcher","KnightKilled");
DB_QuestDef_State("CoS_TheWatcher","End");
DB_QuestDef_State("CoS_TheWatcher","CloseLeftCOS",-1);
DB_QuestDef_State("CoS_TheWatcher","WatcherDead",-1);

DB_QuestDef_AddEvent("CoS_TheWatcher","QuestUpdate_CoS_TheWatcher_Start");
DB_QuestDef_UpdateEvent("CoS_TheWatcher","KnightKilled","QuestUpdate_CoS_TheWatcher_KnightKilled");
DB_QuestDef_CloseEvent("CoS_TheWatcher","QuestUpdate_CoS_TheWatcher_End");

//Spy Master / Mother Tree
DB_QuestDef_State("CoS_SpyMaster","Start_SpyMaster");
DB_QuestDef_State("CoS_SpyMaster","Start_MotherTree");
DB_QuestDef_State("CoS_SpyMaster","Start_Priestess"); //QuestUpdate_CoS_SpyMaster_Start_Priestess
DB_QuestDef_State("CoS_SpyMaster","Saheila");
DB_QuestDef_State("CoS_SpyMaster","PlacedDevice");
DB_QuestDef_State("CoS_SpyMaster","SpyMasterDead");
DB_QuestDef_State("CoS_SpyMaster","BombDetonated");
DB_QuestDef_State("CoS_SpyMaster","ScionKilledTree");
DB_QuestDef_State("CoS_SpyMaster","HeartEaten");
DB_QuestDef_State("CoS_SpyMaster","End_MotherTree");
DB_QuestDef_State("CoS_SpyMaster","End_SpyMaster");
DB_QuestDef_State("CoS_SpyMaster","CloseLeftCOS",-1);

DB_QuestDef_AddEvent("CoS_SpyMaster","QuestUpdate_CoS_SpyMaster_Start_SpyMaster");
DB_QuestDef_AddEvent("CoS_SpyMaster","QuestUpdate_CoS_SpyMaster_Start_MotherTree");
DB_QuestDef_AddEvent("CoS_SpyMaster","QuestUpdate_CoS_SpyMaster_Start_Priestess");

DB_QuestDef_UpdateEvent("CoS_SpyMaster","Start_SpyParent","QuestUpdate_CoS_SpyMaster_Start_SpyMaster");
DB_QuestDef_UpdateEvent("CoS_SpyMaster","Start_MotherParent","QuestUpdate_CoS_SpyMaster_Start_MotherTree");

DB_QuestDef_UpdateEvent("CoS_SpyMaster","BombDetonated","QuestUpdate_CoS_SpyMaster_BombDetonated");
DB_QuestDef_UpdateEvent("CoS_SpyMaster","SpyMasterDead","QuestUpdate_CoS_SpyMaster_SpyMasterDead");
DB_QuestDef_UpdateEvent("CoS_SpyMaster","ScionKilledTree","QuestUpdate_CoS_SpyMaster_ScionKilledTree");
DB_QuestDef_AddEvent("CoS_SpyMaster","QuestUpdate_CoS_SpyMaster_Saheila");

DB_QuestDef_CloseEvent("CoS_SpyMaster","QuestUpdate_CoS_SpyMaster_End_SpyMaster");
DB_QuestDef_CloseEvent("CoS_SpyMaster","QuestUpdate_CoS_SpyMaster_HeartEaten");
DB_QuestDef_CloseEvent("CoS_SpyMaster","QuestUpdate_CoS_SpyMaster_End_MotherTree");
DB_QuestDef_CloseEvent("CoS_SpyMaster","QuestUpdate_CoS_SpyMaster_ScionKilledTree");


//--- Academy
//Missing Student
DB_QuestDef_AddEvent("CoS_MissingStudent","QuestUpdate_CoS_MissingStudent_Start");
DB_QuestDef_AddEvent("CoS_MissingStudent","QuestUpdate_CoS_MissingStudent_FoundStudent");
DB_QuestDef_AddEvent("CoS_MissingStudent","QuestUpdate_CoS_MissingStudent_FriendInfo");
DB_QuestDef_State("CoS_MissingStudent","Start");
DB_QuestDef_State("CoS_MissingStudent","FriendInfo");//QuestUpdate_CoS_MissingStudent_FriendInfo
DB_QuestDef_State("CoS_MissingStudent","OpenDoor");
DB_QuestDef_State("CoS_MissingStudent","FoundStudent");
DB_QuestDef_State("CoS_MissingStudent","Fail_PurgedQuestGiver");
DB_QuestDef_State("CoS_MissingStudent","Fail_PurgeMissingStudent");
DB_QuestDef_State("CoS_MissingStudent","End");
DB_QuestDef_State("CoS_MissingStudent","CloseLeftCOS",-1);

DB_QuestDef_CloseEvent("CoS_MissingStudent","QuestUpdate_CoS_MissingStudent_Fail_PurgedQuestGiver");
DB_QuestDef_CloseEvent("CoS_MissingStudent","QuestUpdate_CoS_MissingStudent_Fail_PurgeMissingStudent");
DB_QuestDef_CloseEvent("CoS_MissingStudent","QuestUpdate_CoS_MissingStudent_End");

//Forbidden Library
DB_QuestDef_AddEvent("CoS_ForbiddenLibrary","QuestUpdate_CoS_ForbiddenLibrary_Start");
DB_QuestDef_State("CoS_ForbiddenLibrary","Start");
DB_QuestDef_State("CoS_ForbiddenLibrary","DefeatedMonolith");
DB_QuestDef_State("CoS_ForbiddenLibrary","End");
DB_QuestDef_State("CoS_ForbiddenLibrary","CloseLeftCOS",-1);

DB_QuestDef_UpdateEvent("CoS_ForbiddenLibrary","End","QuestUpdate_CoS_ForbiddenLibrary_End");
DB_QuestDef_CloseEvent("CoS_ForbiddenLibrary","QuestUpdate_CoS_ForbiddenLibrary_End");


//Academy Main Quest
DB_QuestDef_AddEvent("CoS_Academy","QuestUpdate_CoS_Academy_Start");
DB_QuestDef_State("CoS_Academy","Start");
DB_QuestDef_State("CoS_Academy","SkillsInfo");
DB_QuestDef_State("CoS_Academy","PuzzleInfo");
DB_QuestDef_State("CoS_Academy","TempleInfo");
DB_QuestDef_State("CoS_Academy","LucianMurders"); //REMOVED
DB_QuestDef_State("CoS_Academy","SentientVoidwoken"); //REMOVED
DB_QuestDef_State("CoS_Academy","EnteredTemple");
DB_QuestDef_State("CoS_Academy","ConvincedAlexandar");
DB_QuestDef_State("CoS_Academy","End");
DB_QuestDef_UpdateEvent("CoS_Academy","End","QuestUpdate_CoS_Academy_End");
DB_QuestDef_CloseEvent("CoS_Academy","QuestUpdate_CoS_Academy_End");


// Arena of the One

DB_QuestDef_AddEvent("CoS_ArenaOfTheOne","QuestUpdate_CoS_ArenaOfTheOne_Phase_1_Start");

DB_QuestDef_State("CoS_ArenaOfTheOne","Phase_1_Start");
DB_QuestDef_State("CoS_ArenaOfTheOne","Phase_1_DallisAppears");
DB_QuestDef_State("CoS_ArenaOfTheOne","Phase_1_End");
DB_QuestDef_State("CoS_ArenaOfTheOne","Phase_2_Start");
DB_QuestDef_State("CoS_ArenaOfTheOne","Phase_2_Gods");
DB_QuestDef_State("CoS_ArenaOfTheOne","Phase_3_Beacon"); //QuestUpdate_CoS_ArenaOfTheOne_Phase_3_Beacon
DB_QuestDef_State("CoS_ArenaOfTheOne","End"); 
DB_QuestDef_State("CoS_ArenaOfTheOne","Malady"); //QuestUpdate_CoS_ArenaOfTheOne_Malady
DB_QuestDef_State("CoS_ArenaOfTheOne","Arx"); //QuestUpdate_CoS_ArenaOfTheOne_Arx


DB_QuestDef_UpdateEvent("CoS_ArenaOfTheOne","Phase_1_End","QuestUpdate_CoS_ArenaOfTheOne_Phase_1_End");
DB_QuestDef_UpdateEvent("CoS_ArenaOfTheOne","Malady","QuestUpdate_CoS_ArenaOfTheOne_Malady");
DB_QuestDef_UpdateEvent("CoS_ArenaOfTheOne","Arx","QuestUpdate_CoS_ArenaOfTheOne_Arx");
DB_QuestDef_CloseEvent("CoS_ArenaOfTheOne","QuestUpdate_CoS_ArenaOfTheOne_Arx");

//END_REGION


// ARX_Main - QCA_Chapter_06
//REGION Main: ARX_HuntingForDallis

//HAMMERFALL (Hunting for Dallis) - PARTY
DB_QuestDef_State("ARX_HuntingForDallis","LVCrashed",1);

DB_QuestDef_UpdateEvent("ARX_HuntingForDallis","KemmAtBarracks","ARX_KnowsAbout_KemmInvestigation");
DB_QuestDef_UpdateEvent("ARX_HuntingForDallis","DallisInBarracks","QuestUpdate_ARX_Barracks_LookingForWhiteMagisters");
DB_QuestDef_UpdateEvent("ARX_HuntingForDallis","KemmSecret","QuestUpdate_ARX_KemmVault_ArhuPrison_KemmReveal");
DB_QuestDef_State("ARX_HuntingForDallis","KemmAtBarracks_Dead");

DB_QuestDef_State("ARX_HuntingForDallis","FoundScroll");//QuestUpdate_ARX_HuntingForDallis_FoundScroll
DB_QuestDef_State("ARX_HuntingForDallis","FoundAmulet");//QuestUpdate_ARX_HuntingForDallis_FoundAmulet
DB_QuestDef_UpdateEvent("ARX_HuntingForDallis","FoundAmulet","QuestUpdate_ARX_CreepyCraftsman_AskedToFillAmulet");
//DB_QuestDef_UpdateEvent("ARX_HuntingForDallis","ArhuIsMissing","QuestUpdate_ARX_DisappearanceOfArhu_ArhuIsMissing"); 
DB_QuestDef_State("ARX_HuntingForDallis","StopDallis");
DB_QuestDef_State("ARX_HuntingForDallis","FoundVault"); //QuestUpdate_ARX_HuntingForDallis_FoundVault
DB_QuestDef_UpdateEvent("ARX_HuntingForDallis","FoundVault","QuestUpdate_ARX_Barracks_PrisonerToldVault");
//DB_QuestDef_State("ARX_HuntingForDallis","LetterKemmCrypt"); //REMOVED
DB_QuestDef_State("ARX_HuntingForDallis","KemmLetterDallis"); //REMOVED
DB_QuestDef_State("ARX_HuntingForDallis","KemmBlackMirrorUnknown"); //REMOVED
DB_QuestDef_State("ARX_HuntingForDallis","KemmBlackMirrorKnown"); //REMOVED
DB_QuestDef_State("ARX_HuntingForDallis","ArhuJournalLucian"); //REMOVED
DB_QuestDef_State("ARX_HuntingForDallis","LordDreadLetter");
DB_QuestDef_State("ARX_HuntingForDallis","ArhuReport"); //REMOVED - Turned into ARX_HuntingForDallis_ArhuReportDelay
DB_QuestDef_State("ARX_HuntingForDallis","ArhuReportDelay");
DB_QuestDef_State("ARX_HuntingForDallis","KemmLeftBarracks_Unresolved");

DB_QuestDef_State("ARX_HuntingForDallis","SandersReportDelay");//"QuestUpdate_ARX_HuntingForDallis_SandersReportDelay"

//DB_QuestDef_State("ARX_HuntingForDallis","ArhuLetterDivineOrder"); Moved To ARX_DisappearanceOfArhu 
DB_QuestDef_UpdateEvent("ARX_HuntingForDallis","ArhuLetterDivineOrder2","QuestUpdate_ARX_HuntingForDallis_ArhuLetterDivineOrder");//REMOVED
DB_QuestDef_State("ARX_HuntingForDallis","LearnedFromScrapMetal");
DB_QuestDef_State("ARX_HuntingForDallis","DefeatedReimond");
DB_QuestDef_State("ARX_HuntingForDallis","LordDread"); 
DB_QuestDef_State("ARX_HuntingForDallis","FoundPuppet");  //REMOVED
DB_QuestDef_State("ARX_HuntingForDallis","LearnedFromPuppet");  //REMOVED
DB_QuestDef_State("ARX_HuntingForDallis","PuzzlePassed"); 
DB_QuestDef_State("ARX_HuntingForDallis","DoorTalked"); 
DB_QuestDef_State("ARX_HuntingForDallis","DeathRoomStarted"); 
DB_QuestDef_State("ARX_HuntingForDallis","DeathRoomCompleted"); 
DB_QuestDef_State("ARX_HuntingForDallis","ArhuIsCathedralKeeperDelay");
DB_QuestDef_State("ARX_HuntingForDallis","LearnedAboutPoBDelay");

DB_QuestDef_State("ARX_HuntingForDallis","LearnedFromArhu");//QuestUpdate_ARX_HuntingForDallis_LearnedFromArhu
DB_QuestDef_State("ARX_HuntingForDallis","LearnedFromArhusGhost");//QuestUpdate_ARX_HuntingForDallis_LearnedFromArhusGhost
DB_QuestDef_State("ARX_HuntingForDallis","SeekSanders");//QuestUpdate_ARX_HuntingForDallis_SeekSanders
DB_QuestDef_State("ARX_HuntingForDallis","ItemsLocation");
DB_QuestDef_State("ARX_HuntingForDallis","ItemsInstructionsDelay");//Previously was ItemsInstructions but a check for GotBothItems was added so the late objective isn't overwriting everything
DB_QuestDef_State("ARX_HuntingForDallis","DeathRoomWarning");
DB_QuestDef_State("ARX_HuntingForDallis","DeathRoomWarningDelay");
DB_QuestDef_State("ARX_HuntingForDallis","SourceAmulet");
DB_QuestDef_State("ARX_HuntingForDallis","GetScrollArhu");

DB_QuestDef_UpdateEvent("ARX_HuntingForDallis","GetScroll","QuestUpdate_ARX_CreepyCraftsman_KnowPasswordtoDesk");
DB_QuestDef_State("ARX_HuntingForDallis","GetScroll");//QuestUpdate_ARX_HuntingForDallis_GetScroll

DB_QuestDef_State("ARX_HuntingForDallis","AmuletFullArhu");//QuestUpdate_ARX_HuntingForDallis_AmuletFullArhu
DB_QuestDef_State("ARX_HuntingForDallis","GotBothItems");//QuestUpdate_ARX_HuntingForDallis_GotBothItems
DB_QuestDef_State("ARX_HuntingForDallis","GotBothItemsGotTrick");//QuestUpdate_ARX_HuntingForDallis_GotBothItemsGotTrick

DB_QuestDef_State("ARX_HuntingForDallis","GotTrickFromCraftsman");//QuestUpdate_ARX_HuntingForDallis_GotTrickFromCraftsman
DB_QuestDef_State("ARX_HuntingForDallis","TrickedPoB");
DB_QuestDef_State("ARX_HuntingForDallis","PassedPoB");

DB_QuestDef_State("ARX_HuntingForDallis","EnterPoB");
DB_QuestDef_State("ARX_HuntingForDallis","FailPoB");
DB_QuestDef_State("ARX_HuntingForDallis","LordDreadDock");
DB_QuestDef_State("ARX_HuntingForDallis","LordDreadTalk");
DB_QuestDef_State("ARX_HuntingForDallis","DallisMissing");

DB_QuestDef_State("ARX_HuntingForDallis","CryptPuzzle"); //QuestUpdate_ARX_HuntingForDallis_CryptPuzzle

DB_QuestDef_State("ARX_HuntingForDallis","CryptEnd",-1);

DB_QuestDef_CloseEvent("ARX_HuntingForDallis_SUBA","QuestUpdate_ARX_HuntingForDallis_TrickedPoB");
DB_QuestDef_CloseEvent("ARX_HuntingForDallis_SUBA","QuestUpdate_ARX_HuntingForDallis_PassedPoB");

DB_QuestDef_CloseEvent("ARX_HuntingForDallis_SUBB","QuestUpdate_ARX_HuntingForDallis_PassedPoB");
DB_QuestDef_CloseEvent("ARX_HuntingForDallis_SUBB","QuestUpdate_ARX_HuntingForDallis_TrickedPoB");

//END_REGION
//REGION Main: ARX_KemmVault

//Kemms Vault - USER
DB_QuestDef_AddEvent("ARX_KemmVault","ARX_PaintersFather_PassionMissing");
DB_QuestDef_State("ARX_KemmVault","ThievesGuild_TheLever",1);
DB_QuestDef_State("ARX_KemmVault","LucianPainting",1);
DB_QuestDef_State("ARX_KemmVault","PaladinRumor",1);
DB_QuestDef_State("ARX_KemmVault","MotherRumor",1);
DB_QuestDef_State("ARX_KemmVault","AppraiserSecret",1);
DB_QuestDef_State("ARX_KemmVault","KemmVault_EnteredTheVault",1);
DB_QuestDef_State("ARX_KemmVault","ThievesGuild_TheLever",1);
DB_QuestDef_State("ARX_KemmVault","KemmVault_LowerWater",1);
DB_QuestDef_State("ARX_KemmVault","KemmVault_AtticLetter",1);
//DB_QuestDef_State("ARX_KemmVault","BlackRingMirror",1);
DB_QuestDef_State("ARX_KemmVault","LadyAtticHint",1); 

DB_QuestDef_UpdateEvent("ARX_KemmVault","LucianPainting","ARX_PaintersFather_PassionMissing");
DB_QuestDef_UpdateEvent("ARX_KemmVault","MotherRumor","ARX_Neighborhood_HouseSchool_MotherShowKemmsSecret");
DB_QuestDef_UpdateEvent("ARX_KemmVault","WindegoToldAboutKemm", "ARX_KnowsAboutKemmEighth");
DB_QuestDef_UpdateEvent("ARX_KemmVault","WindegoMentionedSwornBreaker", "ARX_Prison_Windego_Mentioned_SwornBreaker");
DB_QuestDef_State("ARX_KemmVault","WindegoToldConfrontKemm");
DB_QuestDef_State("ARX_KemmVault","KemmVault_AtticLetter_Garden");

DB_QuestDef_State("ARX_KemmVault","ThievesGuild_KnowPainting");
DB_QuestDef_State("ARX_KemmVault","KemmVault_GhostPainting");
DB_QuestDef_State("ARX_KemmVault","KemmVault_GhostPaintingSolved");
DB_QuestDef_State("ARX_KemmVault","ReplicePainting");


DB_QuestDef_State("ARX_KemmVault","EighthShrine_Entered");
DB_QuestDef_State("ARX_KemmVault","EighthShrine_TalkedToEighth");
DB_QuestDef_State("ARX_KemmVault","EighthShrine_TalkedToEighthSworn");
DB_QuestDef_State("ARX_KemmVault","ArhuPrison_OnSight");

DB_QuestDef_State("ARX_KemmVault","ArhuPrison_KemmReveal");
DB_QuestDef_State("ARX_KemmVault","EighthShrine_Open");

DB_QuestDef_State("ARX_KemmVault","CloseLeftARX",-1);
DB_QuestDef_State("ARX_KemmVault","ArhuPrison_KemmDefeat",-1);
DB_QuestDef_State("ARX_KemmVault","ArhuPrison_KemmAlreadyDead",-1); //QuestUpdate_ARX_KemmVault_ArhuPrison_KemmAlreadyDead

//REGION //asaf, 5.16, DOS2EE-3959, merging Smooth Criminal with Kemms Vault
DB_QuestDef_UpdateEvent("ARX_KemmVault","KemmVaultGhost_Start","QuestUpdate_ARX_FindingThievesGuild_KemmVaultGhost_Start");
DB_QuestDef_State("ARX_KemmVault","KemmVaultGhost_Start",1);		//QuestUpdate_ARX_FindingThievesGuild_KemmVaultGhost_Start
DB_QuestDef_State("ARX_KemmVault","PainterSewers_Start");		//QuestUpdate_ARX_FindingThievesGuild_PainterSewers_Start
DB_QuestDef_State("ARX_KemmVault","LookingForSewers");			//QuestUpdate_ARX_FindingThievesGuild_LookingForSewers
DB_QuestDef_State("ARX_KemmVault","CheeseTraderHelpers_Start");	//QuestUpdate_ARX_FindingThievesGuild_CheeseTraderHelpers_Start
DB_QuestDef_State("ARX_KemmVault","LearntAboutGuild_Start");	//QuestUpdate_ARX_FindingThievesGuild_LearntAboutGuild_Start
DB_QuestDef_State("ARX_KemmVault","EnteredTheSewers"); 			//QuestUpdate_ARX_FindingThievesGuild_EnteredTheSewers
DB_QuestDef_State("ARX_KemmVault","KnowTheWay");					//QuestUpdate_ARX_FindingThievesGuild_KnowTheWay
DB_QuestDef_State("ARX_KemmVault","VictorRoss");					//QuestUpdate_ARX_FindingThievesGuild_VictorRoss
DB_QuestDef_State("ARX_KemmVault","ThievesGuild_CloseLeftARX",-1);				//QuestUpdate_ARX_FindingThievesGuild_CloseLeftARX
DB_QuestDef_State("ARX_KemmVault","FoundTheGuild");			//QuestUpdate_ARX_FindingThievesGuild_FoundTheGuild
DB_QuestDef_UpdateEvent("ARX_KemmVault","GotStolenPainting","QuestUpdate_ARX_KemmVault_ThievesGuild_BoughtPainting");
DB_QuestDef_UpdateEvent("ARX_KemmVault","GotStolenPainting","QuestUpdate_ARX_KemmVault_ThievesGuild_GotPainting");
DB_QuestDef_State("ARX_KemmVault","GotStolenPainting");
DB_QuestDef_State("ARX_KemmVault","ThievesGuild_BoughtPainting");
DB_QuestDef_State("ARX_KemmVault","ThievesGuild_GotPainting");
DB_QuestDef_CloseEvent("ARX_KemmVault_SUBA","QuestUpdate_ARX_KemmVault_ThievesGuild_GotPainting");
DB_QuestDef_CloseEvent("ARX_KemmVault_SUBA","QuestUpdate_ARX_KemmVault_ThievesGuild_BoughtPainting");
DB_QuestDef_State("ARX_KemmVault","ThievesGuild_PaintingOfferMade");
DB_QuestDef_State("ARX_KemmVault","ThievesGuild_SeenPainting");
DB_QuestDef_UpdateEvent("ARX_KemmVault","ThievesGuild_KnowPainting","QuestUpdate_ARX_FindingThievesGuild_KemmVaultGhost_Start");
DB_QuestDef_CloseAtRegionEnded("ARX_KemmVault","QuestUpdate_ARX_KemmVault_ThievesGuild_CloseLeftARX","ARX_Main");
DB_QuestDef_State("ARX_KemmVault","KemmVault_GhostPaintingSolved");
DB_QuestDef_CloseEvent("ARX_KemmVault_SUBA","QuestUpdate_ARX_KemmVault_Replica_GhostPaintingSolved");
DB_QuestDef_State("ARX_KemmVault","Replica_GhostPaintingSolved");
//END_REGION
//END_REGION
//REGION Main: ARX_DisappearanceOfArhu & ARX_CreepyCraftsman

//Disappearance of Arhu
DB_QuestDef_State("ARX_DisappearanceOfArhu","Gareth",1);  //QuestUpdate_ARX_DisappearanceOfArhu_Gareth
DB_QuestDef_State("ARX_DisappearanceOfArhu","FindArhuInCathedral",1); 
DB_QuestDef_State("ARX_DisappearanceOfArhu","ArhuIsMissing",1);
DB_QuestDef_State("ARX_DisappearanceOfArhu","ArhuPrison_FoundArhu",1);
DB_QuestDef_State("ARX_DisappearanceOfArhu","FoundApartKey",1);
DB_QuestDef_UpdateEvent("ARX_DisappearanceOfArhu","FoundApartKey","ARX_Cathedral_DisapArhu_HasKey");

DB_QuestDef_State("ARX_DisappearanceOfArhu","ArhuCat");//NEW

DB_QuestDef_State("ARX_DisappearanceOfArhu","HintAboutKemm");//REMOVED
DB_QuestDef_State("ARX_DisappearanceOfArhu","ArhuLetterDivineOrder");
DB_QuestDef_State("ARX_DisappearanceOfArhu","HintAboutKemmDelay");//Was HintAboutKemm
DB_QuestDef_State("ARX_DisappearanceOfArhu","KemmRequest");

DB_QuestDef_State("ARX_DisappearanceOfArhu","KemmCleared");//NEW

DB_QuestDef_State("ARX_DisappearanceOfArhu","KidSawCat"); //QuestUpdate_ARX_DisappearanceOfArhu_KidSawCat
DB_QuestDef_State("ARX_DisappearanceOfArhu","KemmWithCat"); //QuestUpdate_ARX_DisappearanceOfArhu_KemmWithCat

DB_QuestDef_State("ARX_DisappearanceOfArhu","ConfirmCatCapture");//NEW

DB_QuestDef_State("ARX_DisappearanceOfArhu","FoundVault");//NEW

DB_QuestDef_State("ARX_DisappearanceOfArhu","ArhuPrison_BrokeChain");
DB_QuestDef_State("ARX_DisappearanceOfArhu","ArhuPrison_Ambush");
DB_QuestDef_UpdateEvent("ARX_DisappearanceOfArhu","ArhuPrison_KemmArrive","QuestUpdate_ARX_KemmVault_ArhuPrison_KemmReveal");
DB_QuestDef_State("ARX_DisappearanceOfArhu","ArhuPrison_KemmDead");

DB_QuestDef_UpdateEvent("ARX_DisappearanceOfArhu","ArhuPrison_BrokeChain","QuestUpdate_ARX_KemmVault_ArhuPrison_BrokeChain");
DB_QuestDef_UpdateEvent("ARX_DisappearanceOfArhu","ArhuPrison_Ambush","QuestUpdate_ARX_KemmVault_ArhuPrison_Ambush");

DB_QuestDef_State("ARX_DisappearanceOfArhu","CloseLeftARX",-1);
DB_QuestDef_State("ARX_DisappearanceOfArhu","ArhuPrison_ArhuDied",-1);
DB_QuestDef_State("ARX_DisappearanceOfArhu","ArhuPrison_KilledArhu",-1);
DB_QuestDef_State("ARX_DisappearanceOfArhu","ArhuPrison_FreedArhu",-1);


//QUEST REMOVED - ALL IMPORTANT CRAFTSMAN ENTRIES ARE MERGED INTO THE MAIN QUEST HUNTINGFORDALLIS
// ARX - CreepyCraftsman
DB_QuestDef_AddEvent("ARX_CreepyCraftsman","QuestUpdate_ARX_HuntingForDallis_LearnedFromArhu");
DB_QuestDef_AddEvent("ARX_CreepyCraftsman","QuestUpdate_ARX_HuntingForDallis_LearnedFromArhusGhost");

DB_QuestDef_State("ARX_CreepyCraftsman","MetCreep");//REMOVED
DB_QuestDef_State("ARX_CreepyCraftsman","TriedToGoTo2ndFloor");//REMOVED
DB_QuestDef_State("ARX_CreepyCraftsman","KnowAboutCathedral",1);//QuestUpdate_ARX_CreepyCraftsman_KnowAboutCathedral
DB_QuestDef_State("ARX_CreepyCraftsman","InteractedWithDesk");

DB_QuestDef_State("ARX_CreepyCraftsman","AskedToFillAmulet");
DB_QuestDef_State("ARX_CreepyCraftsman","DeskIsOpen");
DB_QuestDef_State("ARX_CreepyCraftsman","KnowPasswordtoDesk");

DB_QuestDef_State("ARX_CreepyCraftsman","MentionedArhu");//QuestUpdate_ARX_CreepyCraftsman_MentionedArhu

DB_QuestDef_State("ARX_CreepyCraftsman","GoGetArhu"); 
DB_QuestDef_State("ARX_CreepyCraftsman","AmuletFilled"); 
DB_QuestDef_UpdateEvent("ARX_CreepyCraftsman","ArhuOrder","QuestUpdate_ARX_HuntingForDallis_LearnedFromArhu");
DB_QuestDef_UpdateEvent("ARX_CreepyCraftsman","ArhuOrder","QuestUpdate_ARX_HuntingForDallis_LearnedFromArhusGhost");

DB_QuestDef_State("ARX_CreepyCraftsman","KnowCathedralSecret",-1);
DB_QuestDef_State("ARX_CreepyCraftsman","CreepIsDead",-1);

//END_REGION
//REGION Main: ARX_Barracks

//ClanWars

DB_QuestDef_State("ARX_Barracks","Clanwars_Corpses",1);
DB_QuestDef_State("ARX_Barracks","FoundBarracks",1);
//Execution
DB_QuestDef_State("ARX_Barracks","Execution_Start",1);//QuestUpdate_ARX_Barracks_Execution_Start
DB_QuestDef_State("ARX_Barracks","Execution_ConvicedToSpare",1);
DB_QuestDef_State("ARX_Barracks","Execution_PaladinExecuted",1);
DB_QuestDef_State("ARX_Barracks","Execution_Interrupted");
DB_QuestDef_State("ARX_Barracks","Execution_KilledAllPaladins",1);
DB_QuestDef_State("ARX_Barracks","KemmLeftBarracks_Unresolved");
DB_QuestDef_State("ARX_Barracks","PrisonerToldVault",1); //QuestUpdate_ARX_Barracks_PrisonerToldVault
DB_QuestDef_State("ARX_Barracks","TalkedToKemm",1);
DB_QuestDef_State("ARX_Barracks","LookingForWhiteMagisters",1);
DB_QuestDef_State("ARX_Barracks","FoundEncryption",1);
DB_QuestDef_State("ARX_Barracks","HintFromEncryptionMaker",1);
DB_QuestDef_State("ARX_Barracks","GainedAccessToWhiteVault",1);
DB_QuestDef_State("ARX_Barracks","KemmInfo_PaladinMagisterYou");
DB_QuestDef_State("ARX_Barracks","KemmInfo_PaladinMagisterOther");
DB_QuestDef_State("ARX_Barracks","VisitedHQ",1);
DB_QuestDef_State("ARX_Barracks","ReimondKilled");
DB_QuestDef_State("ARX_Barracks","HintGrandDesign");
DB_QuestDef_State("ARX_Barracks","LearnedWhiteMagisterSecret");
DB_QuestDef_State("ARX_Barracks","ReportedKemm");

DB_QuestDef_State("ARX_Barracks","ReportedKemmDead",-1);
DB_QuestDef_State("ARX_Barracks","ToldKemm");//QuestUpdate_ARX_Barracks_ToldKemm
DB_QuestDef_UpdateEvent("ARX_Barracks","ToldKemm2","QuestUpdate_ARX_Barracks_ToldKemm");//REMOVED
DB_QuestDef_CloseEvent("ARX_Barracks","QuestUpdate_ARX_Barracks_ToldKemm");


DB_QuestDef_State("ARX_Barracks","CloseLeftARX",-1);

//END_REGION
//REGION Arx various boosters

//Godslayer, part 2
DB_QuestDef_AddEvent("ARX_LV_Godslayer","QuestUpdate_ARX_LV_Godslayer_Start");
DB_QuestDef_State("ARX_LV_Godslayer","Start");
DB_QuestDef_State("ARX_LV_Godslayer","RewardGodslayer");
DB_QuestDef_State("ARX_LV_Godslayer","NoGodslayer");
DB_QuestDef_UpdateEvent("ARX_LV_Godslayer","NoGodslayer2","QuestUpdate_ARX_LV_Godslayer_NoGodslayer");//REMOVED
DB_QuestDef_State("ARX_LV_Godslayer","TarquinDead",-1);
DB_QuestDef_CloseEvent("ARX_LV_Godslayer","QuestUpdate_ARX_LV_Godslayer_RewardGodslayer");
DB_QuestDef_CloseEvent("ARX_LV_Godslayer","QuestUpdate_ARX_LV_Godslayer_NoGodslayer");


//Merchant Estate, Wetwork - USER
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","ReadGroomsDiary",1);
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","AssassinationChoice","QuestUpdate_ARX_MerchantEstate_Wetwork_AssassinationStarted");
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","GroomDisappeared");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","GroomDisappeared","ARX_MerchantEstate_Groom_Wetwork_KnowsHeDisappeared");
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","KnowWhereGroomLab");
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","FoundGroomLab");
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","FoundGroom_MerchantDead");
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","FoundGroom_MerchantAlive");
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","WetworkResolved",-1);
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","WetworkResolved_MerchantSurvived",-1);
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","MerchantDeal_SecondParty",1);
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","CloseLeftARX",-1);
//DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","WetworkResolved_MerchantSurvived","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestEnd_MerchantSurvived");
//DB_QuestDef_CloseEvent("ARX_MerchantEstate_Wetwork","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestEnd_MerchantSurvived");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("ARX_MerchantEstate_Wetwork","QuestUpdate_ARX_MerchantEstate_Wetwork_CloseLeftARX","ARX_Main","QuestUpdate_ARX_MerchantEstate_Wetwork_GroomIsDead");

//Wetwork_SUBA
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","AssassinationStarted",1); //QuestUpdate_ARX_MerchantEstate_Wetwork_AssassinationStarted

DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","MerchantIsDead","QuestUpdate_ARX_MerchantEstate_Wetwork_MerchantIsDead_SUBA");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","TookWill","QuestUpdate_ARX_MerchantEstate_Wetwork_TookWill_SUBA");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","PoisonedEvent","QuestUpdate_ARX_MerchantEstate_Wetwork_PoisonedEvent_SUBA");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","GiveWill","QuestUpdate_ARX_MerchantEstate_Wetwork_GiveWill_SUBA");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","GroomIsDead_SUBA","QuestUpdate_ARX_MerchantEstate_Wetwork_GroomIsDead_SUBA_SUBA");
DB_QuestDef_CloseEvent("ARX_MerchantEstate_Wetwork_SUBA","QuestUpdate_ARX_MerchantEstate_Wetwork_GiveWill_SUBA");
DB_QuestDef_CloseEvent("ARX_MerchantEstate_Wetwork_SUBA","QuestUpdate_ARX_MerchantEstate_Wetwork_GroomIsDead_SUBA_SUBA");

//Wetwork_SUBB
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","MerchantsDeal",1);
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","ChoiceTellFather","QuestUpdate_ARX_MerchantEstate_Wetwork_AssassinationStarted");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","ToldDaughterRun","QuestUpdate_ARX_MerchantEstate_Wetwork_ToldDaughterRun_SUBB");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","ToldDaughterCounter","QuestUpdate_ARX_MerchantEstate_Wetwork_ToldDaughterCounter_SUBB");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","MerchantsDeal_Bonus","QuestUpdate_ARX_MerchantEstate_Wetwork_MerchantsDeal_Bonus_SUBB");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","GroomIsDead","QuestUpdate_ARX_MerchantEstate_Wetwork_GroomIsDead_SUBB");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","QuestEnd_MerchantDidNotSurvive","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestEnd_MerchantDidNotSurvive_SUBB");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","QuestEnd_MerchantSurvived","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestEnd_MerchantSurvived");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","CloseLeftARX_NoPay","QuestUpdate_ARX_MerchantEstate_Wetwork_CloseLeftARX_NoPay_SUBB");
DB_QuestDef_CloseEvent("ARX_MerchantEstate_Wetwork_SUBB","QuestUpdate_ARX_MerchantEstate_Wetwork_CloseLeftARX_NoPay_SUBB");
DB_QuestDef_CloseEvent("ARX_MerchantEstate_Wetwork_SUBB","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestEnd_MerchantDidNotSurvive_SUBB");
DB_QuestDef_CloseEvent("ARX_MerchantEstate_Wetwork_SUBB","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestEnd_MerchantSurvived_SUBB");




// ARX - Cathedral - Arhu's dog
DB_QuestDef_State("ARX_Cathedral_Dog","DogWantsBall",1);

DB_QuestDef_UpdateEvent("ARX_Cathedral_Dog","FoundBall","ARX_Cathedral_Dog_HasBall");
DB_QuestDef_State("ARX_Cathedral_Dog","DogInfo1");//REMOVED
DB_QuestDef_State("ARX_Cathedral_Dog","DogInfo2");//REMOVED
DB_QuestDef_State("ARX_Cathedral_Dog","DogInfo3");//REMOVED
DB_QuestDef_State("ARX_Cathedral_Dog","DogInfoBlock");

DB_QuestDef_State("ARX_Cathedral_Dog","GaveBall",-1);
DB_QuestDef_State("ARX_Cathedral_Dog","DogHasBall",-1);
DB_QuestDef_State("ARX_Cathedral_Dog","DogIsDead",-1);
DB_QuestDef_State("ARX_Cathedral_Dog","CloseLeftARX",-1);


// ARX - Antique Trader
DB_QuestDef_State("ARX_AntiqueTraders","HeardAboutAppriser",1);
DB_QuestDef_State("ARX_AntiqueTraders","MetAppriserInCaller",1);
DB_QuestDef_State("ARX_AntiqueTraders","AppriserToldAboutVault",1);
DB_QuestDef_State("ARX_AntiqueTraders","GotPainting");
DB_QuestDef_State("ARX_AntiqueTraders","GotCup");
DB_QuestDef_State("ARX_AntiqueTraders","GotScrolls");
DB_QuestDef_State("ARX_AntiqueTraders","GotAllTheItems");
DB_QuestDef_State("ARX_AntiqueTraders","TradedPainting");
DB_QuestDef_State("ARX_AntiqueTraders","TradedCup");
DB_QuestDef_State("ARX_AntiqueTraders","TradedScrolls");
DB_QuestDef_State("ARX_AntiqueTraders","GaveAllTheItems",-1);
DB_QuestDef_State("ARX_AntiqueTraders","AppriserIsDead",-1);
DB_QuestDef_State("ARX_AntiqueTraders","CloseLeftARX",-1);


//ARX School - PARTY
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","MetHobosInTheSchool",1);
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","MetPriest",1);
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","MotherAskedHelp",1);
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","ConvicedPriestToLeave");
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","KilledThePriest");
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","PriestIsDead");
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","TownCrier",1);

DB_QuestDef_State("ARX_Neighborhood_HouseSchool","MotherReward",-1);
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","MotherSecret",-1);
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","ToldMotherPriestLeft");
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","ToldMotherPriestDead",-1);
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","KilledMother",-1);
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","CloseLeftARXHomeless",-1);
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","CloseLeftARXMother",-1);


// Outskirts - PossessedKid - PARTY
// starting (conditional)
DB_QuestDef_State("ARX_Outskirts_PossessedKid","HeardAboutKid",1);
DB_QuestDef_State("ARX_Outskirts_PossessedKid","HeardAboutKidRCBI",1);
DB_QuestDef_State("ARX_Outskirts_PossessedKid","FoundKid",1);
DB_QuestDef_State("ARX_Outskirts_PossessedKid","FoundKidRCBI",1);
// mid-entry
DB_QuestDef_State("ARX_Outskirts_PossessedKid","DemonHint"); //SUBA
DB_QuestDef_State("ARX_Outskirts_PossessedKid","PassedPoB"); //SUBA
DB_QuestDef_State("ARX_Outskirts_PossessedKid","DemonReleased"); //SUBA
DB_QuestDef_UpdateEvent("ARX_Outskirts_PossessedKid","FindRealName","ARX_PossessedKid_KnowChildLostHerName"); //SUBB
DB_QuestDef_State("ARX_Outskirts_PossessedKid","LearnedName"); //SUBB
DB_QuestDef_State("ARX_Outskirts_PossessedKid","LearnedNameRCBI"); //SUBB
DB_QuestDef_State("ARX_Outskirts_PossessedKid","DemonReleasedWithName"); //SUBB
DB_QuestDef_State("ARX_Outskirts_PossessedKid","KidAttack"); //SUBC
DB_QuestDef_State("ARX_Outskirts_PossessedKid","DemonDead");
DB_QuestDef_State("ARX_Outskirts_PossessedKid","Possessed");
DB_QuestDef_State("ARX_Outskirts_PossessedKid","DemonOut");
DB_QuestDef_UpdateEvent("ARX_Outskirts_PossessedKid","DemonOut","QuestUpdate_ARX_Outskirts_PossessedKid_DemonReleased");
DB_QuestDef_UpdateEvent("ARX_Outskirts_PossessedKid","DemonOut","QuestUpdate_ARX_Outskirts_PossessedKid_DemonReleasedWithName");
// closing
DB_QuestDef_State("ARX_Outskirts_PossessedKid","FailedWithName",-1);
DB_QuestDef_State("ARX_Outskirts_PossessedKid","AttackedKid",-1); //closing SUBC and main
DB_QuestDef_State("ARX_Outskirts_PossessedKid","GirlSaved",-1);
DB_QuestDef_State("ARX_Outskirts_PossessedKid","CloseLeftARX",-1);
DB_QuestDef_CloseEvent("ARX_Outskirts_PossessedKid_SUBA","QuestUpdate_ARX_Outskirts_PossessedKid_DemonReleased");
DB_QuestDef_CloseEvent("ARX_Outskirts_PossessedKid_SUBB","QuestUpdate_ARX_Outskirts_PossessedKid_DemonReleased");
DB_QuestDef_CloseEvent("ARX_Outskirts_PossessedKid_SUBC","QuestUpdate_ARX_Outskirts_PossessedKid_DemonReleased");
DB_QuestDef_CloseEvent("ARX_Outskirts_PossessedKid_SUBA","QuestUpdate_ARX_Outskirts_PossessedKid_DemonReleasedWithName");
DB_QuestDef_CloseEvent("ARX_Outskirts_PossessedKid_SUBB","QuestUpdate_ARX_Outskirts_PossessedKid_DemonReleasedWithName");
DB_QuestDef_CloseEvent("ARX_Outskirts_PossessedKid_SUBC","QuestUpdate_ARX_Outskirts_PossessedKid_DemonReleasedWithName");
DB_QuestDef_CloseEvent("ARX_Outskirts_PossessedKid_SUBA","QuestUpdate_ARX_Outskirts_PossessedKid_Possessed");
DB_QuestDef_CloseEvent("ARX_Outskirts_PossessedKid_SUBB","QuestUpdate_ARX_Outskirts_PossessedKid_Possessed");
DB_QuestDef_CloseEvent("ARX_Outskirts_PossessedKid_SUBC","QuestUpdate_ARX_Outskirts_PossessedKid_Possessed");

//END_REGION
//REGION Arx Sewers

//Dwarven Sewers - PARTY
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Know_ToldPreSub","QuestUpdate_RC_ARX_TheImperialDwarves_Ros_PathToQueen");
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Know_ToldPreSub","QuestUpdate_RC_ARX_TheImperialDwarves_Ros_SaveTheQueen");

DB_QuestDef_State("RC_ARX_TheImperialDwarves","Deathfog_FleeIsbeil",-1); //QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_FleeIsbeil
DB_QuestDef_State("RC_ARX_TheImperialDwarves","LoharStart",1); //QuestUpdate_RC_ARX_TheImperialDwarves_LoharStart
DB_QuestDef_State("RC_ARX_TheImperialDwarves","LoharStart_EnteredArx"); //QuestUpdate_RC_ARX_TheImperialDwarves_LoharStart_EnteredArx
DB_QuestDef_State("RC_ARX_TheImperialDwarves","SuspiciousHole",1); //QuestUpdate_RC_ARX_TheImperialDwarves_SuspiciousHole
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Sewers_EnteredQueensRoom",1); //QuestUpdate_RC_ARX_TheImperialDwarves_Sewers_EnteredQueensRoom
DB_QuestDef_State("RC_ARX_TheImperialDwarves","LearnSecretFromMagisterGhost",1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Ros_PathToQueen",1); //QuestUpdate_RC_ARX_TheImperialDwarves_Ros_PathToQueen
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Ros_SaveTheQueen",1); //QuestUpdate_RC_ARX_TheImperialDwarves_Ros_SaveTheQueen
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Outskirts_QueenRumors"); 
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Sewers_ThievesTalkedAboutCrates",1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","MerchantEstate_ExaminedStatue",1); //QuestUpdate_RC_ARX_TheImperialDwarves_MerchantEstate_ExaminedStatue
DB_QuestDef_State("RC_ARX_TheImperialDwarves","MerchantEstate_ReadGardenNotes",1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Know_DeathfogArx",1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Know_DeathfogArx_PreStrike",1);
//DB_QuestDef_AddEvent("RC_ARX_TheImperialDwarves", "ARX_MerchantEstate_KnowsAboutVoidwoken");
//DB_QuestDef_AddEvent("RC_ARX_TheImperialDwarves", "ARX_KnowsAboutIsbeil"); --Shouldn't start quest as it is now a Mystery Update
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Windego_ToldAboutIsbeil","ARX_KnowsAboutIsbeil");
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Sewers_Entered","QuestUpdate_RC_ARX_TheImperialDwarves_Sewers_EnteredSewers"); //QuestUpdate_RC_ARX_TheImperialDwarves_Sewers_Entered
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Sewers_PeacemakersCrates",1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Sewers_MetTheQueenWithQ",1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Sewers_Arrested");
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Sewers_Q_IsDead");//QuestUpdate_RC_ARX_TheImperialDwarves_Sewers_Q_IsDead
DB_QuestDef_State("RC_ARX_TheImperialDwarves","DwarvenWedding_Letter",1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","CloseLeftARXSewerSecret",-1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","CloseLeftARXDeathfog",-1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Deathfog_ReleasedToArx",-1); //QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_ReleasedToArx

DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Deathfog_DestroyedMachine","QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_DestroyedMachine_CLOSE"); //QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_DestroyedMachine
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Deathfog_ReleasedToSea","QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_ReleasedToSea_CLOSE");	//QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_ReleasedToSea
DB_QuestDef_CloseEvent("RC_ARX_TheImperialDwarves","QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_DestroyedMachine_CLOSE");
DB_QuestDef_CloseEvent("RC_ARX_TheImperialDwarves","QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_ReleasedToSea_CLOSE");

//Asaf, revising Dwarven Politics, DOS2EE-4013

DB_QuestDef_State("RC_ARX_TheImperialDwarves","Sewers_Q_IsDead_Queen");
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Deathfog_ReleasedToSea_Queen");		//QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_ReleasedToSea_Queen
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Deathfog_DestroyedMachine_Queen");	//QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_DestroyedMachine_Queen
DB_QuestDef_State("RC_ARX_TheImperialDwarves","QueenDFCompletion",-1);

//SUBA
DB_QuestDef_State("RC_ARX_TheImperialDwarves","CloseLeftARXQueenFind");
DB_QuestDef_CloseEvent("RC_ARX_TheImperialDwarves_SUBA","QuestUpdate_RC_ARX_TheImperialDwarves_CloseLeftARXQueenFind");

DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Queen_IsDead","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_IsDead_SUBA");
DB_QuestDef_CloseEvent("RC_ARX_TheImperialDwarves_SUBA","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_IsDead_SUBA");
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Queen_Spared","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_Spared_SUBA");
DB_QuestDef_CloseEvent("RC_ARX_TheImperialDwarves_SUBA","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_Spared_SUBA");


DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Sewers_Entered","QuestUpdate_RC_ARX_TheImperialDwarves_Ros_EnteredSewers_SUBA");
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Ros_EnteredSewers","QuestUpdate_RC_ARX_TheImperialDwarves_Ros_EnteredSewers_SUBA"); 
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Sewers_ThiefGhost","QuestUpdate_RC_ARX_TheImperialDwarves_Sewers_ThiefGhost_SUBA");
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Queen_Found","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_Found_SUBA");
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Queen_Confront","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_Confront_SUBA");
DB_QuestDef_State("RC_ARX_TheImperialDwarves","SuspiciousHole_Solved");
//DOS2EE-4307
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Queen_IsSafe","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_IsSafe_SUBA");
DB_QuestDef_CloseEvent("RC_ARX_TheImperialDwarves_SUBA","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_IsSafe_SUBA");



//END_REGION
//REGION Arx Prison

//ARX_Prison_Windego
DB_QuestDef_State("ARX_Prison_Windego","TalkedToRat",1);
DB_QuestDef_State("ARX_Prison_Windego","EnteredTheRoom",1);
DB_QuestDef_State("ARX_Prison_Windego","PaladinToldAboutWitch",1);
//DB_QuestDef_State("ARX_Prison_Windego","COS_Letter",1); //REMOVED
DB_QuestDef_State("ARX_Prison_Windego","TalkedToPaladin");
DB_QuestDef_State("ARX_Prison_Windego","TalkedToWindego");
DB_QuestDef_State("ARX_Prison_Windego","PaladinLeft");
DB_QuestDef_State("ARX_Prison_Windego","PaladinKilled");
DB_QuestDef_State("ARX_Prison_Windego","PuzzleSolved");
DB_QuestDef_State("ARX_Prison_Windego","FightWindego");


DB_QuestDef_State("ARX_Prison_Windego","WindegoLeftKemmVault"); //QuestUpdate_ARX_Prison_Windego_WindegoLeftKemmVault
DB_QuestDef_State("ARX_Prison_Windego","KemmVaultAltar");		//QuestUpdate_ARX_Prison_Windego_KemmVaultAltar
DB_QuestDef_State("ARX_Prison_Windego","KemmVaultExecution",-1);//QuestUpdate_ARX_Prison_Windego_KemmVaultExecution


DB_QuestDef_State("ARX_Prison_Windego","TalkedToWindego");
 
DB_QuestDef_UpdateEvent("ARX_Prison_Windego","TalkedToRat","ARX_Barracks_MainHall_Rat_ShowMarkerToPrison");
DB_QuestDef_AddEvent("ARX_Prison_Windego","ARX_Barracks_MainHall_Rat_ShowMarkerToPrison");
//DB_QuestDef_UpdateEvent("ARX_Prison_Windego","TalkedToWindego","S_ARX_Prison_EscapedPrisoner"); //S_ARX_Prison_EscapedPrisoner is used as has met and it shared in the party 

DB_QuestDef_State("ARX_Prison_Windego","WindegoLeft",-1);
DB_QuestDef_State("ARX_Prison_Windego","GaveSwornBreaker",-1);
DB_QuestDef_State("ARX_Prison_Windego","CloseLeftArxWindego",-1);
DB_QuestDef_State("ARX_Prison_Windego","CloseLeftARXSecret",-1);
DB_QuestDef_State("ARX_Prison_Windego","CloseLeftARXPrison",-1);
DB_QuestDef_CloseEvent("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_FightWindego");


//ARX_Prison_TheMistake - PARTY
DB_QuestDef_UpdateEvent("ARX_Prison_TheMistake","ReadDoc","ARX_Prison_TheMistake_ReadDocument");
DB_QuestDef_AddEvent("ARX_Prison_TheMistake","ARX_Prison_TheMistake_ReadDocument");
DB_QuestDef_State("ARX_Prison_TheMistake","SawTheMistake",1);
DB_QuestDef_State("ARX_Prison_TheMistake","DidntReact");
DB_QuestDef_State("ARX_Prison_TheMistake","ReleasedHer");
DB_QuestDef_State("ARX_Prison_TheMistake","SourceVampedHer");
DB_QuestDef_State("ARX_Prison_TheMistake","MistakeIsdead");
DB_QuestDef_State("ARX_Prison_TheMistake","FledCombat");
DB_QuestDef_State("ARX_Prison_TheMistake","TalkedToSeekers");

DB_QuestDef_State("ARX_Prison_TheMistake","SourceVisionSeekersKnown");
DB_QuestDef_State("ARX_Prison_TheMistake","SourceVisionSeekersNotKnow");
DB_QuestDef_State("ARX_Prison_TheMistake","SourceVampedSeeker");
DB_QuestDef_State("ARX_Prison_TheMistake","MistakeIsGoneReturnedToPrison");
DB_QuestDef_State("ARX_Prison_TheMistake","WorkWithTheMistake");
DB_QuestDef_State("ARX_Prison_TheMistake","LucianTrueCrypt");

DB_QuestDef_State("ARX_Prison_TheMistake","LeaveMistake");//QuestUpdate_ARX_Prison_TheMistake_LeaveMistake

DB_QuestDef_State("ARX_Prison_TheMistake","TheMistakeMetInCrypt");
DB_QuestDef_State("ARX_Prison_TheMistake","LeftSewers");

DB_QuestDef_State("ARX_Prison_TheMistake","CloseLeftARXSecret",-1);
DB_QuestDef_State("ARX_Prison_TheMistake","CloseLeftARXFree",-1);
DB_QuestDef_CloseEvent("ARX_Prison_TheMistake","QuestUpdate_ARX_Prison_TheMistake_MistakeIsdead");

//END_REGION
//REGION Arx Doctor & Weakening
// The Doctor
DB_QuestDef_State("ARX_TheDoctor","DiscoveredFromTree",1);
DB_QuestDef_State("ARX_TheDoctor","MerchantEstate_TheCakeNote",1);
DB_QuestDef_State("ARX_TheDoctor","MerchantEstate_TheGuard",1);
DB_QuestDef_State("ARX_TheDoctor","Invitation_KilledKemm",1);
DB_QuestDef_State("ARX_TheDoctor","BannedFromHouse",1);
DB_QuestDef_State("ARX_TheDoctor","Know_Doctor",1);
DB_QuestDef_State("ARX_TheDoctor","FlowerTalk",1);
DB_QuestDef_State("ARX_TheDoctor","DemonDoctorAttack",1);
DB_QuestDef_State("ARX_TheDoctor","DemonDoctorThanks",1);
DB_QuestDef_State("ARX_TheDoctor","Invitation_KilledQ",1);
DB_QuestDef_State("ARX_TheDoctor","Pact_Offered",1);
DB_QuestDef_State("ARX_TheDoctor","Door_OnlyLohse",1);
DB_QuestDef_State("ARX_TheDoctor","Door_CantEnter",1);
DB_QuestDef_State("ARX_TheDoctor","Door_Opened",1);

DB_QuestDef_State("ARX_TheDoctor","KemmGarden_Doctor",1); //QuestUpdate_ARX_TheDoctor_KemmGarden_Doctor

DB_QuestDef_State("ARX_TheDoctor","Knows_NoDoor");
DB_QuestDef_State("ARX_TheDoctor","Pact_OnlyLohse");
DB_QuestDef_State("ARX_TheDoctor","Pact_Declined");
DB_QuestDef_State("ARX_TheDoctor","Pact_Accepted");
DB_QuestDef_State("ARX_TheDoctor","Prison_FoundBard");
DB_QuestDef_State("ARX_TheDoctor","Prison_FoundLizard");
DB_QuestDef_State("ARX_TheDoctor","Prison_FoundJahan");
DB_QuestDef_State("ARX_TheDoctor","Combat_DemonForm");
DB_QuestDef_State("ARX_TheDoctor","Combat_PossessionStarted");	
DB_QuestDef_State("ARX_TheDoctor","Combat_PossessionCompleted");
DB_QuestDef_State("ARX_TheDoctor","EndingDoctorWin", -1);

DB_QuestDef_State("ARX_TheDoctor","MoveToNextCategory");
DB_QuestDef_State("ARX_TheDoctor","TheDoctor_IsDead",-1);
DB_QuestDef_State("ARX_TheDoctor","CloseLeftARXDoor",-1);
DB_QuestDef_State("ARX_TheDoctor","CloseLeftARXDeal",-1);

DB_QuestDef_UpdateEvent("ARX_TheDoctor","EndingDoctorLose","EG_SidedAgainstDoctor");
DB_QuestDef_CloseEvent("ARX_TheDoctor","EG_SidedAgainstDoctor");

// The weakening
DB_QuestDef_State("ARX_TheWeakening","Malady_OfferedTheWeakening",1);
DB_QuestDef_State("ARX_TheWeakening","Malady_DeclinedTheWeakening",-1);
DB_QuestDef_State("ARX_TheWeakening","Started");
DB_QuestDef_State("ARX_TheWeakening","RoomA_SoulCandles");
DB_QuestDef_State("ARX_TheWeakening","RoomA_SoulCandles_Snuffed");
DB_QuestDef_State("ARX_TheWeakening","RoomA_SoulCandles_Preserved");
DB_QuestDef_State("ARX_TheWeakening","RoomA_SoulCandles_SomeoneElseSnuffed");
DB_QuestDef_State("ARX_TheWeakening","RoomB_SoulCandles");
DB_QuestDef_UpdateEvent("ARX_TheWeakening","RoomB_SoulCandles2","QuestUpdate_ARX_TheWeakening_RoomB_SoulCandles");
DB_QuestDef_State("ARX_TheWeakening","RoomB_SoulCandles_Snuffed");
DB_QuestDef_State("ARX_TheWeakening","RoomB_SoulCandles_Preserved");
DB_QuestDef_State("ARX_TheWeakening","RoomB_SoulCandles_SomeoneElseSnuffed");
DB_QuestDef_State("ARX_TheWeakening","FinalRoom_Arrive");						
DB_QuestDef_State("ARX_TheWeakening","FinalRoom_Snuffed",-1);						
DB_QuestDef_State("ARX_TheWeakening","FinalRoom_Preserved",-1);					
DB_QuestDef_State("ARX_TheWeakening","End_Failed",-1);								
DB_QuestDef_State("ARX_TheWeakening","TheDoctor_IsDead",-1);						
DB_QuestDef_State("ARX_TheWeakening","TheDoctor_Possessed",-1);	

DB_QuestDef_State("ARX_TheWeakening","RoomA_Reached");	//QuestUpdate_ARX_TheWeakening_RoomA_Reached
DB_QuestDef_State("ARX_TheWeakening","RoomB_Reached");	//QuestUpdate_ARX_TheWeakening_RoomB_Reached				

//END_REGION
//REGION Arx Consulate

// Lizard Consulate - PARTY
//DB_QuestDef_State("ARX_LizardConsulate","SawVoidwoken",1); not used
DB_QuestDef_State("ARX_LizardConsulate","VoidwokenAttacked",1);
DB_QuestDef_State("ARX_LizardConsulate","KnowsSadhaIsInARX",1);
DB_QuestDef_State("ARX_LizardConsulate","EnteredTheConsulate",1);

DB_QuestDef_State("ARX_LizardConsulate","KilledAllInfernalLizards");
DB_QuestDef_State("ARX_LizardConsulate","KilledAllInfernalLizards_Reported");
DB_QuestDef_State("ARX_LizardConsulate","Consulate_InfernalLizardResurrected");

DB_QuestDef_State("ARX_LizardConsulate","ConsulateRP");
DB_QuestDef_State("ARX_LizardConsulate","DiscoveredThePrincessWasHere",1);
DB_QuestDef_State("ARX_LizardConsulate","GardenPortal");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleep_Enter");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepArena_Start");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepArena_End");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepWarzone_Enter");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepWarzone_Dreamer_LetMePass");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepWarzone_DreamerHostile");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepWarzone_DreamerDead");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepSunset_Start");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepSunset_PrincessHostile");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepSunset_Princess_ToldGodKing");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepSunset_PrincessGaveEgg");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepSunset_PrincessDead");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepSunset_BringRP");
DB_QuestDef_UpdateEvent("ARX_LizardConsulate","HorrorSleepSunset_BringRP","ARX_LizardPrincess_AskedToBringRP");

DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepSunset_EggLeave");//QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_EggLeave
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepSunset_NoEggLeave");//QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_NoEggLeave
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepSunset_PrincessLeave");//QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_PrincessLeave

DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepSunset_RP_Seduction_TeleportedOut",-1);
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepSunset_End",-1);
DB_QuestDef_State("ARX_LizardConsulate","CloseLeftARX",-1);
//DB_QuestDef_State("ARX_LizardConsulate","ConsulateNoRP",-1);

DB_QuestDef_AddEvent("ARX_LizardConsulate","QuestUpdate_ARX_LizardConsulate_BridgeCathedral_Start");
DB_QuestDef_UpdateEvent("ARX_LizardConsulate","VoidwokenAttacked","QuestUpdate_ARX_LizardConsulate_BridgeCathedral_Start");

//END_REGION				


//REGION EndGame

DB_QuestDef_State("EG","EnterTomb",1);
DB_QuestDef_State("EG","LucianEncounter");

DB_QuestDef_UpdateEvent("EG","LucianEncounter2","QuestUpdate_EG_LucianEncounter");

DB_QuestDef_State("EG","RefusePurge");
DB_QuestDef_State("EG","SwornAttack");
DB_QuestDef_State("EG","AcceptPurge");
DB_QuestDef_State("EG","BraccusBetrayal_Purge");
DB_QuestDef_State("EG","BraccusBetrayal");
DB_QuestDef_State("EG","BraccusPersuaded");//REMOVED
DB_QuestDef_State("EG","Doctor_Purged");
DB_QuestDef_State("EG","Doctor_Combat");
DB_QuestDef_State("EG","DivineElection");//QuestUpdate_EG_DivineElection
DB_QuestDef_State("EG","Ending1",-1);
DB_QuestDef_State("EG","Ending2",-1);
DB_QuestDef_State("EG","Ending3",-1);
DB_QuestDef_State("EG","Ending3_NoLucian",-1);
DB_QuestDef_State("EG","Ending4",-1);
DB_QuestDef_State("EG","Ending5",-1);

//END_REGION


// Avatar/COM Origin
//REGION Avatar Origin entries
//Ifan and the Dark Faction - CHARACTER
DB_QuestDef_State("FTJ_Ifan_DarkFaction","Start_BeachWakeup",1);
DB_QuestDef_State("FTJ_Ifan_DarkFaction","Start_TUT",1);
DB_QuestDef_State("FTJ_Ifan_DarkFaction","Start_AfterTUT",1);
DB_QuestDef_State("FTJ_Ifan_DarkFaction","Start_AfterBorris",1);
DB_QuestDef_State("FTJ_Ifan_DarkFaction","IfanWashedAshore",1);
DB_QuestDef_State("FTJ_Ifan_DarkFaction","Atusa_Event");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","Borris_Intimidated");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","Borris_Note");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","KillOrder");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","SaheilaKilled");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","AlexandarInformation");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","GarethInfo"); //QuestUpdate_FTJ_Ifan_DarkFaction_GarethInfo
DB_QuestDef_State("FTJ_Ifan_DarkFaction","AlexandarKilled");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","AlexandarKilledLV");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","Act2Start");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","DWKid");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","WreckerHillsConfession");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","WreckerCaveBetrayal");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","FoundContract");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","LearnedRoost");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","LearnedBaran");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","Tricked");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","FindHannag");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","FindHannagAlt");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","HannaginBF");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","HannagInfo");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","COSAlexandar");

DB_QuestDef_State("FTJ_Ifan_DarkFaction","MetRoost");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","RoostDead");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","SUBA_LeftRC");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","WreckerHillsConfession2");//REMOVED
DB_QuestDef_State("FTJ_Ifan_DarkFaction","SUBB_LeftRC");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","Act2bStart");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","FindAlexandar");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","FleeAcademy");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","FindLoneWolves");
DB_SeenDeadNPCPartyFlag(CHARACTERGUID_S_RC_MIL_Roost_6fffadfe-b2a8-4e12-a664-ba84c0b0a3a3,"QuestUpdate_FTJ_Ifan_DarkFaction_RoostDead");

DB_QuestDef_State("FTJ_Ifan_DarkFaction","AlexandarLV");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","LizardDemonLeader");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","EnterAcademy");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","COSAlexandar");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","COSAlexandarNoHannag");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","KilledAlexandarCOS");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","DeadAlexandarCOS");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","StartAct3");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","KilledLucianCrypt");

DB_QuestDef_State("FTJ_Ifan_DarkFaction","ChoseToAscend");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","ChoseSource4All");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","ChoseCompanionDivine");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","ChoseLucian");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","ChoseGodKing");
DB_QuestDef_State("FTJ_Ifan_DarkFaction","ChoseDemon");

DB_QuestDef_CloseEvent("FTJ_Ifan_DarkFaction_SUBA","QuestUpdate_FTJ_Ifan_DarkFaction_MetRoost");
DB_QuestDef_CloseEvent("FTJ_Ifan_DarkFaction_SUBA","QuestUpdate_FTJ_Ifan_DarkFaction_RoostDead");
DB_QuestDef_CloseEvent("FTJ_Ifan_DarkFaction_SUBA","QuestUpdate_FTJ_Ifan_DarkFaction_SUBA_LeftRC");
DB_QuestDef_CloseAtRegionEnded("FTJ_Ifan_DarkFaction_SUBA","QuestUpdate_FTJ_Ifan_DarkFaction_SUBA_LeftRC","RC_Main");

DB_QuestDef_CloseEvent("FTJ_Ifan_DarkFaction_SUBB","QuestUpdate_FTJ_Ifan_DarkFaction_HannagInfo");
DB_QuestDef_CloseEvent("FTJ_Ifan_DarkFaction_SUBB","QuestUpdate_FTJ_Ifan_DarkFaction_SUBB_LeftRC");
DB_QuestDef_CloseAtRegionEnded("FTJ_Ifan_DarkFaction_SUBB","QuestUpdate_FTJ_Ifan_DarkFaction_SUBB_LeftRC","RC_Main");

DB_QuestDef_UpdateEvent("FTJ_Ifan_DarkFaction", "MetRoost", "QuestUpdate_FTJ_Ifan_DarkFaction_LearnedRoost");
DB_QuestDef_UpdateEvent("FTJ_Ifan_DarkFaction", "WreckerHillsConfession2", "QuestUpdate_FTJ_Ifan_DarkFaction_WreckerHillsConfession");//REMOVED
DB_QuestDef_UpdateEvent("FTJ_Ifan_DarkFaction", "FindAlexandar", "QuestUpdate_FTJ_Ifan_DarkFaction_HannagInfo");
DB_QuestDef_UpdateEvent("FTJ_Ifan_DarkFaction", "FleeAcademy", "QuestUpdate_CoS_ArenaOfTheOne_Phase_2_Start");
DB_AvatarUpdateRegionStart_ObjFlag_ObjFlag("IFAN","CoS_Main","QuestUpdate_FTJ_Ifan_DarkFaction_Act2bStart","QuestUpdate_FTJ_Ifan_DarkFaction_LearnedRoost",0,"QuestUpdate_FTJ_Ifan_DarkFaction_FindAlexandar",0);
DB_AvatarUpdateRegionStart("IFAN","QuestUpdate_FTJ_Ifan_DarkFaction_FindLoneWolves","RC_Main");


//Red Prince
DB_QuestDef_State("FTJ_OriginRedPrince","Start_BeachWakeup");
DB_QuestDef_State("FTJ_OriginRedPrince","RPWashedAshore");
DB_QuestDef_State("FTJ_OriginRedPrince","Start_MeetDreamer");
DB_QuestDef_State("FTJ_OriginRedPrince","StingtailDrudanae");
DB_QuestDef_State("FTJ_OriginRedPrince","AssassinKilled");
DB_QuestDef_State("FTJ_OriginRedPrince","AssassinKilledKnown");
DB_QuestDef_State("FTJ_OriginRedPrince","StingtailGaveInfo");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince", "StingtailGaveInfo2", "QuestUpdate_FTJ_OriginRedPrince_StingtailGaveInfo");//Optimization Supplement for FTJ_OriginRedPrince
DB_QuestDef_State("FTJ_OriginRedPrince","BaharaInfo");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince", "BaharaInfo2", "QuestUpdate_FTJ_OriginRedPrince_BaharaInfo");//Optimization Supplement for FTJ_OriginRedPrince
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince", "BaharaInfo3", "QuestUpdate_FTJ_OriginRedPrince_BaharaInfo");//Optimization Supplement for FTJ_OriginRedPrince
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","SpyMasterDead", "CoS_FoundDeadSpyMaster");
DB_QuestDef_State("FTJ_OriginRedPrince","HouseOfShadows_Close_CoS");
DB_QuestDef_State("FTJ_OriginRedPrince","HouseOfShadows_Close_CoS_NoInvite");
DB_QuestDef_State("FTJ_OriginRedPrince","RC_LizardDreamer");
DB_QuestDef_State("FTJ_OriginRedPrince","BaharaKilled_StingtailGaveInfo");
DB_QuestDef_State("FTJ_OriginRedPrince","BaharaKilled_NoStingtailInfo");
DB_QuestDef_State("FTJ_OriginRedPrince","DreamerKilledBeforeTalking");
DB_QuestDef_State("FTJ_OriginRedPrince","DreamerKilledAfterTalking");
DB_QuestDef_State("FTJ_OriginRedPrince","SurpriseResolved");
DB_QuestDef_State("FTJ_OriginRedPrince","ToRedPrincess");
DB_QuestDef_State("FTJ_OriginRedPrince","LizardAmbush");
DB_QuestDef_State("FTJ_OriginRedPrince","RC_PaladinInfo");
DB_QuestDef_State("FTJ_OriginRedPrince","RedPrincessTryKill");
DB_QuestDef_State("FTJ_OriginRedPrince","RedPrincessMate");
DB_QuestDef_State("FTJ_OriginRedPrince","RedPrincessEscape");
DB_QuestDef_State("FTJ_OriginRedPrince","CoS_Dreamer");
DB_QuestDef_State("FTJ_OriginRedPrince","CoS_MissedBrahmos");
DB_QuestDef_State("FTJ_OriginRedPrince","SpyMasterInvite");
DB_QuestDef_State("FTJ_OriginRedPrince","ToSallowMan");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","RedPrincessLearnShadowPrince", "QuestUpdate_FTJ_COM_RedPrince_ToSallowMan");
DB_QuestDef_State("FTJ_OriginRedPrince","BlackMirror_Pregnant_Warned");
DB_QuestDef_State("FTJ_OriginRedPrince","HouseOfShadows_BlackMirror");
DB_QuestDef_State("FTJ_OriginRedPrince","SpymasterMissingAfterRedPrincess");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_HouseOfShadows", "QuestUpdate_FTJ_OriginRedPrince_SpymasterMissingAfterRedPrincess");
DB_QuestDef_State("FTJ_OriginRedPrince","Branch");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Branch", "QuestUpdate_FTJ_OriginRedPrince_ToRedPrincess");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Branch", "QuestUpdate_FTJ_OriginRedPrince_ToSallowMan");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Branch", "QuestUpdate_FTJ_OriginRedPrince_BlackMirror_Pregnant_Warned");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Branch", "QuestUpdate_FTJ_OriginRedPrince_KemmMansion_Pregnant");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Branch", "QuestUpdate_FTJ_OriginRedPrince_KemmMansion_NotPregnant");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Branch", "QuestUpdate_ARX_LizardConsulate_ConsulateRP");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Consulate", "QuestUpdate_ARX_LizardConsulate_EnteredTheConsulate");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","ConsulatePortal", "QuestUpdate_ARX_LizardConsulate_ConsulateRP");
DB_QuestDef_State("FTJ_OriginRedPrince","ToSallowManKill");
DB_QuestDef_State("FTJ_OriginRedPrince","ToSallowMan");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","ToSallowMan2", "QuestUpdate_FTJ_OriginRedPrince_ToSallowMan");//REMOVED
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_ToSallowMan", "QuestUpdate_FTJ_OriginRedPrince_ToSallowMan");
DB_QuestDef_State("FTJ_OriginRedPrince","ToSallowManFake");

DB_QuestDef_State("FTJ_OriginRedPrince","NobleKnow");
DB_QuestDef_State("FTJ_OriginRedPrince","NobleWarned");
DB_QuestDef_State("FTJ_OriginRedPrince","Noble");
DB_QuestDef_State("FTJ_OriginRedPrince","Act2Start");
DB_QuestDef_State("FTJ_OriginRedPrince","Act2Start_NoDreamer");
DB_QuestDef_State("FTJ_OriginRedPrince","Act3Start");
DB_QuestDef_State("FTJ_OriginRedPrince","Act3Start_NoSpymaster");
DB_QuestDef_State("FTJ_OriginRedPrince","Act3Start_NoSadha");
DB_QuestDef_State("FTJ_OriginRedPrince","HorrorSleepSunset_Start");
DB_QuestDef_State("FTJ_OriginRedPrince","Princess_EggLeave");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_HorrorSleepSunset_Start", "QuestUpdate_FTJ_OriginRedPrince_HorrorSleepSunset_Start");
DB_QuestDef_State("FTJ_OriginRedPrince","HorrorSleepSunset_PrincessHostile");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_HorrorSleepSunset_PrincessHostile");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","HorrorSleepSunset_PrincessGaveEgg", "ARX_LizardPrincess_GaveEgg");
DB_QuestDef_State("FTJ_OriginRedPrince","HorrorSleepSunset_PrincessDead");
DB_QuestDef_State("FTJ_OriginRedPrince","HorrorSleepSunset_RP_Seduction");
DB_QuestDef_State("FTJ_OriginRedPrince","Princess_NoEggLeave");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_HorrorSleepSunset_PrincessGaveEgg", "ARX_LizardPrincess_GaveEgg");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_Brahmos", "ARX_HorrorSleep_WarZone_LizardDreamer_LetPlayerPass");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Brahmos", "ARX_HorrorSleep_WarZone_LizardDreamer_LetPlayerPass");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_HorrorSleepSunset_RP_Seduction", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_RP_Seduction_TeleportedOut");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_NoEggLeave", "QuestUpdate_FTJ_OriginRedPrince_Princess_NoEggLeave");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_EggLeave", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_EggLeave");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_HorrorSleepSunset_PrincessDead", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_PrincessDead");
DB_QuestDef_State("FTJ_OriginRedPrince","Princess_EggDragonHostile");
DB_QuestDef_State("FTJ_OriginRedPrince","HorrorSleepSunset_LeftEgg");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_Princess_EggLeave");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_Princess_NoEggLeave");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_HorrorSleepSunset_LeftEgg");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_Princess_EggDragonHostile");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_CompleteEmpire");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_HorrorSleepSunset_PrincessDead");
DB_QuestDef_State("FTJ_OriginRedPrince","SpymasterRewardAfterRedPrincess");
DB_QuestDef_State("FTJ_OriginRedPrince","SpymasterAttackRedPrincess");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_HouseOfShadows", "CoS_FoundDeadSpyMaster");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_HouseOfShadows", "QuestUpdate_FTJ_OriginRedPrince_HouseOfShadows_Close");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_HouseOfShadows", "QuestUpdate_FTJ_OriginRedPrince_SpymasterRewardAfterRedPrincess");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_HouseOfShadows", "QuestUpdate_FTJ_OriginRedPrince_SpymasterAttackRedPrincess");
DB_QuestDef_State("FTJ_OriginRedPrince","CompleteEmpire");
DB_QuestDef_State("FTJ_OriginRedPrince","ChoseToAscend");
DB_QuestDef_State("FTJ_OriginRedPrince","ChoseSource4All");
DB_QuestDef_State("FTJ_OriginRedPrince","ChoseCompanionDivine");
DB_QuestDef_State("FTJ_OriginRedPrince","ChoseLucian");
DB_QuestDef_State("FTJ_OriginRedPrince","ChoseGodKing");
DB_QuestDef_State("FTJ_OriginRedPrince","ChoseDemon");


//Lohse Origin
DB_QuestDef_State("FTJ_OriginLohse","Start_BeachWakeup",1);
DB_QuestDef_State("FTJ_OriginLohse","LohseWashedAshore",1);
DB_QuestDef_State("FTJ_OriginLohse","Start",1);
DB_QuestDef_State("FTJ_OriginLohse","Lute");
DB_QuestDef_State("FTJ_OriginLohse","HangingTree");				//QuestUpdate_FTJ_OriginLohse_HangingTree
DB_QuestDef_State("FTJ_OriginLohse","JahanApprentice");
DB_QuestDef_State("FTJ_OriginLohse","HallOfEchoes");
DB_QuestDef_State("FTJ_OriginLohse","Act2Start");
DB_QuestDef_State("FTJ_OriginLohse","MetJahan");
DB_QuestDef_State("FTJ_OriginLohse","FailedJahanExorcism");
DB_QuestDef_State("FTJ_OriginLohse","WeakeningSuggested");
DB_QuestDef_State("FTJ_OriginLohse","WeakeningSucceeded");
DB_QuestDef_State("FTJ_OriginLohse","WeakeningFailed");
DB_QuestDef_State("FTJ_OriginLohse","DoctorPact");
DB_QuestDef_State("FTJ_OriginLohse","DoctorDefeat");
DB_QuestDef_State("FTJ_OriginLohse","WeakeningLeft");
DB_QuestDef_UpdateEvent("FTJ_OriginLohse","KilledAdvocate","JDFProxy_QuestUpdate_FTJ_OriginLohse_KilledAdvocate");				
DB_QuestDef_State("FTJ_OriginLohse","JahanQuestPart1Done");			
DB_QuestDef_State("FTJ_OriginLohse","JahanToldSameDemon");			
DB_QuestDef_State("FTJ_OriginLohse","JahanLV");					
DB_QuestDef_State("FTJ_OriginLohse","JahanNoLV");	
DB_QuestDef_UpdateEvent("FTJ_OriginLohse","LearnedDemonName","JDFProxy_QuestUpdate_FTJ_OriginLohse_LearnedDemonName");
DB_QuestDef_State("FTJ_OriginLohse","MaladyTellsDemonArxName");		//QuestUpdate_FTJ_OriginLohse_MaladyTellsDemonArxName
DB_QuestDef_State("FTJ_OriginLohse","MaladyTellsDemonArxNoName");	//QuestUpdate_FTJ_OriginLohse_MaladyTellsDemonArxNoName
DB_QuestDef_State("FTJ_OriginLohse","WeakeningSuggested");			//QuestUpdate_FTJ_OriginLohse_WeakeningSuggested
DB_QuestDef_State("FTJ_OriginLohse","WeakeningDenied");				//QuestUpdate_FTJ_OriginLohse_WeakeningDenied
DB_QuestDef_State("FTJ_OriginLohse","WeakeningSelected");			//QuestUpdate_FTJ_OriginLohse_WeakeningSelected

DB_QuestDef_State("FTJ_OriginLohse","ChoseToAscend");
DB_QuestDef_State("FTJ_OriginLohse","ChoseSource4All");
DB_QuestDef_State("FTJ_OriginLohse","ChoseCompanionDivine");
DB_QuestDef_State("FTJ_OriginLohse","ChoseLucian");
DB_QuestDef_State("FTJ_OriginLohse","ChoseGodKing");
DB_QuestDef_State("FTJ_OriginLohse","ChoseDemon");


//Sebille Origin
DB_QuestDef_State("FTJ_OriginSebille","Start_Dreamer",1);
DB_QuestDef_State("FTJ_OriginSebille","SebilleWashedAshore",1);
DB_QuestDef_State("FTJ_OriginSebille","RecruitedRedPrince");
DB_QuestDef_State("FTJ_OriginSebille","RedPrince_Dreamer");
DB_QuestDef_State("FTJ_OriginSebille","DreamerFound");
DB_QuestDef_State("FTJ_OriginSebille","DreamerInKitchen");
DB_QuestDef_State("FTJ_OriginSebille","End_Dreamer");
DB_QuestDef_State("FTJ_OriginSebille","Part2_Start");
DB_QuestDef_State("FTJ_OriginSebille","Part2_Find_Zaleskar");
DB_QuestDef_State("FTJ_OriginSebille","Part2_Find_Roost");
DB_QuestDef_State("FTJ_OriginSebille","Baran");
DB_QuestDef_State("FTJ_OriginSebille","ConfrontedBaran");
DB_QuestDef_State("FTJ_OriginSebille","ConfrontedBaranKnow");
DB_QuestDef_State("FTJ_OriginSebille","Roost");
DB_QuestDef_State("FTJ_OriginSebille","RoostDead");
DB_QuestDef_State("FTJ_OriginSebille","SaheilaPostRoost");
DB_QuestDef_State("FTJ_OriginSebille","TovahPostRoost");
DB_QuestDef_State("FTJ_OriginSebille","Spymaster");
DB_QuestDef_State("FTJ_OriginSebille","MotherScionKillSpymaster");
DB_QuestDef_State("FTJ_OriginSebille","MotherEatHeart"); // QuestUpdate_FTJ_OriginSebille_MotherEatHeart
DB_QuestDef_State("FTJ_OriginSebille","Rooted"); // QuestUpdate_FTJ_OriginSebille_Rooted
DB_QuestDef_State("FTJ_OriginSebille","NotRooted"); // QuestUpdate_FTJ_OriginSebille_NotRooted
DB_QuestDef_State("FTJ_OriginSebille","SaheilaWantsKill"); // QuestUpdate_FTJ_OriginSebille_SaheilaWantsKill
DB_QuestDef_State("FTJ_OriginSebille","SaheilaToldMotherTreeDead"); // QuestUpdate_FTJ_OriginSebille_SaheilaToldMotherTreeDead
DB_QuestDef_State("FTJ_OriginSebille","KilledMotherTree"); // QuestUpdate_FTJ_OriginSebille_KilledMotherTree
DB_QuestDef_State("FTJ_OriginSebille","RemovedDreamer");
DB_QuestDef_State("FTJ_OriginSebille","Act2Start");
DB_QuestDef_State("FTJ_OriginSebille","Act2Start_LoneWolf");
DB_QuestDef_State("FTJ_OriginSebille","Act2Start_Nothing");
DB_QuestDef_State("FTJ_OriginSebille","PostRoostRefusedScion");
DB_QuestDef_State("FTJ_OriginSebille","RemovedSpymaster");
DB_QuestDef_State("FTJ_OriginSebille","COSStart_Nothing");
DB_QuestDef_State("FTJ_OriginSebille","COSStart_KnowSpy");
DB_QuestDef_State("FTJ_OriginSebille","COSStart_KnowMother");
DB_QuestDef_State("FTJ_OriginSebille","COSStart_KnowSpyMother");
DB_QuestDef_State("FTJ_OriginSebille","Act3Start_Spy");
DB_QuestDef_State("FTJ_OriginSebille","Act3Start_RootSpy");
DB_QuestDef_State("FTJ_OriginSebille","Act3Start");
DB_QuestDef_State("FTJ_OriginSebille","SpymasterKilled");
DB_QuestDef_State("FTJ_OriginSebille","SaheilaDryad_Root");
DB_QuestDef_State("FTJ_OriginSebille","SaheilaDryad_NoRoot");
DB_QuestDef_State("FTJ_OriginSebille","SaheilaDryad_DeadTree");

DB_QuestDef_State("FTJ_OriginSebille","ChoseToAscend");
DB_QuestDef_State("FTJ_OriginSebille","ChoseSource4All");
DB_QuestDef_State("FTJ_OriginSebille","ChoseCompanionDivine");
DB_QuestDef_State("FTJ_OriginSebille","ChoseLucian");
DB_QuestDef_State("FTJ_OriginSebille","ChoseGodKing");
DB_QuestDef_State("FTJ_OriginSebille","ChoseDemon");

DB_QuestDef_State("FTJ_OriginSebille","MotherScionSpymasterDead");
DB_QuestDef_State("FTJ_OriginSebille","MotherTreeDead");
DB_QuestDef_State("FTJ_OriginSebille","SpotRoost");
DB_QuestDef_State("FTJ_OriginSebille","SpotSpymaster");
DB_QuestDef_State("FTJ_OriginSebille","SUBA_LeftCoS");
DB_QuestDef_State("FTJ_OriginSebille","SUBB_LeftCoS");
DB_QuestDef_State("FTJ_OriginSebille","SUBC_LeftCoS");

DB_QuestDef_UpdateEvent("FTJ_OriginSebille","MotherScionSpymasterDead","QuestUpdate_CoS_SpyMaster_SpyMasterDead");
DB_QuestDef_UpdateEvent("FTJ_OriginSebille","GoToCoS","QuestUpdate_FTJ_OriginSebille_RoostDead");

DB_QuestDef_CloseEvent("FTJ_OriginSebille_SUBA","QuestUpdate_FTJ_OriginSebille_Rooted");
DB_QuestDef_CloseEvent("FTJ_OriginSebille_SUBA","QuestUpdate_FTJ_OriginSebille_NotRooted");
DB_QuestDef_CloseEvent("FTJ_OriginSebille_SUBA","QuestUpdate_FTJ_OriginSebille_MotherTreeDead");
DB_QuestDef_CloseEvent("FTJ_OriginSebille_SUBA","QuestUpdate_FTJ_OriginSebille_SUBA_LeftCoS");
DB_QuestDef_CloseAtRegionEnded("FTJ_OriginSebille_SUBA","QuestUpdate_FTJ_OriginSebille_SUBA_LeftCoS","CoS_Main");

DB_QuestDef_CloseEvent("FTJ_OriginSebille_SUBB","QuestUpdate_FTJ_OriginSebille_SaheilaToldMotherTreeDead");
DB_QuestDef_CloseEvent("FTJ_OriginSebille_SUBB","QuestUpdate_FTJ_OriginSebille_SUBB_LeftCoS");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag_OrClose("FTJ_OriginSebille_SUBB","QuestUpdate_FTJ_OriginSebille_SUBB_LeftCoS","CoS_Main","QuestUpdate_FTJ_OriginSebille_KilledMotherTree");

DB_SeenDeadNPCPartyFlag(CHARACTERGUID_S_RC_MIL_Roost_6fffadfe-b2a8-4e12-a664-ba84c0b0a3a3,"QuestUpdate_FTJ_OriginSebille_RoostDead");

DB_QuestDef_CloseEvent("FTJ_OriginSebille_SUBC","QuestUpdate_FTJ_OriginSebille_RemovedSpymaster");
DB_QuestDef_CloseEvent("FTJ_OriginSebille_SUBC","QuestUpdate_FTJ_OriginSebille_SUBC_LeftCoS");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("FTJ_OriginSebille_SUBC","QuestUpdate_FTJ_OriginSebille_SUBC_LeftCoS","CoS_Main","QuestUpdate_FTJ_OriginSebille_SpymasterKilled");

//Fane Origin
DB_QuestDef_State("FTJ_OriginFane","Start_BoatWakeup",1);
DB_QuestDef_UpdateEvent("FTJ_OriginFane", "Start_BoatWakeup2", "QuestUpdate_FTJ_OriginFane_Start_BoatWakeup");//REMOVED

DB_QuestDef_State("FTJ_OriginFane","LostMask");
DB_QuestDef_State("FTJ_OriginFane","FaneWashedAshore");

//SUB
DB_QuestDef_UpdateEvent("FTJ_OriginFane", "FaneWashedAshoreMask", "QuestUpdate_FTJ_OriginFane_FaneWashedAshore");
DB_QuestDef_State("FTJ_OriginFane","LearnedAboutKniles");
DB_QuestDef_State("FTJ_OriginFane","GotFaceRipper");
DB_QuestDef_State("FTJ_OriginFane","MetWindego");
DB_QuestDef_State("FTJ_OriginFane","GotMaskBack");
DB_QuestDef_State("FTJ_OriginFane","CraftMask");//QuestUpdate_FTJ_OriginFane_CraftMask
DB_QuestDef_CloseEvent("FTJ_OriginFane_SUBA","QuestUpdate_FTJ_OriginFane_GotMaskBack");
DB_QuestDef_CloseEvent("FTJ_OriginFane_SUBA","QuestUpdate_FTJ_OriginFane_CraftMask");

DB_QuestDef_State("FTJ_OriginFane","TalkedToAmadia");
DB_QuestDef_UpdateEvent("FTJ_OriginFane", "TalkedToAmadia2", "QuestUpdate_FTJ_OriginFane_TalkedToAmadia");

DB_QuestDef_State("FTJ_OriginFane","Act2Start");
DB_QuestDef_State("FTJ_OriginFane","TalkedToEternalAetera");
DB_QuestDef_State("FTJ_OriginFane","RefusedPromise");
DB_QuestDef_State("FTJ_OriginFane","TookPromise");
DB_QuestDef_State("FTJ_OriginFane","Promise");
DB_QuestDef_State("FTJ_OriginFane","RelievedOfPromise");
DB_QuestDef_State("FTJ_OriginFane","ArxSmallVoidWoken");
DB_QuestDef_State("FTJ_OriginFane","VoidwokenTaunts");
DB_QuestDef_State("FTJ_OriginFane","MetGratiana");
DB_QuestDef_State("FTJ_OriginFane","MetGratiana_Undead");
DB_QuestDef_State("FTJ_OriginFane","FoundEternalRelics");
DB_QuestDef_State("FTJ_OriginFane","LearnNameless");
DB_QuestDef_State("FTJ_OriginFane","LandedOnNamelessIsle");
DB_QuestDef_State("FTJ_OriginFane","FaneFoundAcademy");
DB_QuestDef_State("FTJ_OriginFane","StartedArenaOne");

DB_QuestDef_State("FTJ_OriginFane","ChoseToAscend");
DB_QuestDef_State("FTJ_OriginFane","ChoseToAscend_Fane");
DB_QuestDef_State("FTJ_OriginFane","ChoseSource4All");
DB_QuestDef_State("FTJ_OriginFane","ChoseCompanionDivine");
DB_QuestDef_State("FTJ_OriginFane","ChoseLucian");
DB_QuestDef_State("FTJ_OriginFane","ChoseGodKing");
DB_QuestDef_State("FTJ_OriginFane","ChoseDemon");


//Beast Origin
DB_QuestDef_State("FTJ_OriginBeast","Start_BoatWakeup", 1);
DB_QuestDef_State("FTJ_OriginBeast","WashedAshore");
DB_QuestDef_State("FTJ_OriginBeast","CarsonKeyUnused");
DB_QuestDef_State("FTJ_OriginBeast","KilledLohar");
DB_QuestDef_UpdateEvent("FTJ_OriginBeast", "BelievedLohar", "RC_DW_BST_BelievedLohar");
DB_QuestDef_State("FTJ_OriginBeast","RC_Start"); //QuestUpdate_FTJ_OriginBeast_RC_Start
DB_QuestDef_State("FTJ_OriginBeast","ShipmentToArx");
DB_QuestDef_State("FTJ_OriginBeast","ShipmentDeathFog");
DB_QuestDef_State("FTJ_OriginBeast","ToArx_1");
DB_QuestDef_State("FTJ_OriginBeast","ToArx_2");
DB_QuestDef_State("FTJ_OriginBeast","IsbeilBR");
DB_QuestDef_State("FTJ_OriginBeast","IsbeilQueenEncounter");
DB_QuestDef_State("FTJ_OriginBeast","MetCarson");
DB_QuestDef_State("FTJ_OriginBeast","CarsonKey");
DB_QuestDef_State("FTJ_OriginBeast","MetDuna");
DB_QuestDef_UpdateEvent("FTJ_OriginBeast","MetDuna2", "QuestUpdate_FTJ_OriginBeast_MetDuna");//Optimization Supplement for FTJ_OriginBeast
DB_QuestDef_State("FTJ_OriginBeast","COSDeathfogLetter");
DB_QuestDef_State("FTJ_OriginBeast","ChoseToAscend");
DB_QuestDef_State("FTJ_OriginBeast","ChoseSource4All");
DB_QuestDef_State("FTJ_OriginBeast","ChoseCompanionDivine");
DB_QuestDef_State("FTJ_OriginBeast","ChoseLucian");
DB_QuestDef_State("FTJ_OriginBeast","ChoseGodKing");
DB_QuestDef_State("FTJ_OriginBeast","ChoseDemon");
DB_QuestDef_UpdateEvent("FTJ_OriginBeast","AssassinationAttempt", "ARX_Sewers_TheQueen_AssassinationAttempt");
DB_QuestDef_State("FTJ_OriginBeast","Resolved");
DB_QuestDef_State("FTJ_OriginBeast","Act2b_Start_NoLeads");
DB_AvatarUpdateRegionStart("BEAST","QuestUpdate_FTJ_OriginBeast_Act2b_Start_NoLeads","CoS_Main");

DB_QuestDef_State("FTJ_OriginBeast","CaravanLohar");
DB_QuestDef_State("FTJ_OriginBeast","Act3Start");
DB_QuestDef_State("FTJ_OriginBeast","Act3StartLoharUnfinished");
DB_QuestDef_State("FTJ_OriginBeast","KnowSewers");
DB_QuestDef_UpdateEvent("FTJ_OriginBeast","KnowSewers", "QuestUpdate_RC_ARX_TheImperialDwarves_Ros_PathToQueen");

//END_REGION
//REGION Companion Origin entries
//Red Prince
DB_QuestDef_State("FTJ_COM_RedPrince","Start",1);
DB_QuestDef_State("FTJ_COM_RedPrince","Start_AfterBahara",1);
DB_QuestDef_State("FTJ_COM_RedPrince","Stingtail");
DB_QuestDef_State("FTJ_COM_RedPrince","StingtailDead");
DB_QuestDef_State("FTJ_COM_RedPrince","AssassinKilled");
DB_QuestDef_State("FTJ_COM_RedPrince","AssassinLetterRead");
DB_QuestDef_State("FTJ_COM_RedPrince","Bahara");
DB_QuestDef_State("FTJ_COM_RedPrince","BaharaKilled_StingtailGaveInfo");
DB_QuestDef_State("FTJ_COM_RedPrince","BaharaKilled_NoStingtailInfo");
DB_QuestDef_State("FTJ_COM_RedPrince","Start_PostStingtail");
DB_QuestDef_State("FTJ_COM_RedPrince","Start_PostBahara");
DB_QuestDef_State("FTJ_COM_RedPrince","Start_BaharaDead");
DB_QuestDef_State("FTJ_COM_RedPrince","Start_LV_NoStingtail");
DB_QuestDef_State("FTJ_COM_RedPrince","Start_LV_NoBahara");
DB_QuestDef_State("FTJ_COM_RedPrince","SurpriseResolved");
DB_QuestDef_State("FTJ_COM_RedPrince","ToRedPrincess");
DB_QuestDef_State("FTJ_COM_RedPrince","LizardAmbush");
DB_QuestDef_State("FTJ_COM_RedPrince","RC_LizardDreamer");
DB_QuestDef_State("FTJ_COM_RedPrince","RC_PaladinInfo");
DB_QuestDef_State("FTJ_COM_RedPrince","RedPrincessMate");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","RedPrincessMate2", "QuestUpdate_FTJ_COM_RedPrince_RedPrincessMate");//REMOVED
DB_QuestDef_State("FTJ_COM_RedPrince","RedPrincessEscape");
DB_QuestDef_State("FTJ_COM_RedPrince","RedPrincessRefused");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","RedPrincessRefused2", "QuestUpdate_FTJ_COM_RedPrince_RedPrincessRefused");//REMOVED
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Brahmos", "ARX_HorrorSleep_WarZone_LizardDreamer_LetPlayerPass");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_Brahmos", "ARX_HorrorSleep_WarZone_LizardDreamer_LetPlayerPass");
DB_QuestDef_State("FTJ_COM_RedPrince","SpyMasterInvite");
DB_QuestDef_State("FTJ_COM_RedPrince","HouseOfShadows_Close_CoS");
DB_QuestDef_State("FTJ_COM_RedPrince","HouseOfShadows_Close_CoS_NoInvite");
DB_QuestDef_State("FTJ_COM_RedPrince","ToSallowMan");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","ToSallowMan2", "QuestUpdate_FTJ_COM_RedPrince_ToSallowMan");//REMOVED
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_ToSallowMan", "QuestUpdate_FTJ_COM_RedPrince_ToSallowMan");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","SpyMasterDead", "CoS_FoundDeadSpyMaster");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","RedPrincessLearnShadowPrince", "QuestUpdate_FTJ_COM_RedPrince_ToSallowMan");
DB_QuestDef_State("FTJ_COM_RedPrince","BlackMirror_RedPrince");
DB_QuestDef_State("FTJ_COM_RedPrince","HouseOfShadows_BlackMirror_RedPrince");
DB_QuestDef_State("FTJ_COM_RedPrince","Branch");
DB_QuestDef_State("FTJ_COM_RedPrince","CoS_MissedBrahmos");
DB_QuestDef_State("FTJ_COM_RedPrince","CoS_Dreamer");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Branch", "QuestUpdate_FTJ_COM_RedPrince_ToRedPrincess");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Branch", "QuestUpdate_FTJ_COM_RedPrince_ToSallowMan");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Branch", "QuestUpdate_FTJ_COM_RedPrince_BlackMirror_RedPrince");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Branch", "QuestUpdate_FTJ_COM_RedPrince_KemmMansion_Pregnant");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Branch", "QuestUpdate_FTJ_COM_RedPrince_KemmMansion_NotPregnant");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Branch", "QuestUpdate_ARX_LizardConsulate_ConsulateRP");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Consulate", "QuestUpdate_ARX_LizardConsulate_EnteredTheConsulate");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","ConsulatePortal", "QuestUpdate_ARX_LizardConsulate_ConsulateRP");
DB_QuestDef_State("FTJ_COM_RedPrince","NobleKnow");
DB_QuestDef_State("FTJ_COM_RedPrince","NobleWarned");
DB_QuestDef_State("FTJ_COM_RedPrince","Noble");
DB_QuestDef_State("FTJ_COM_RedPrince","COS_Allowed");
DB_QuestDef_State("FTJ_COM_RedPrince","COS_Submitted");
DB_QuestDef_State("FTJ_COM_RedPrince","DNOTSLove"); //REMOVED
DB_QuestDef_State("FTJ_COM_RedPrince","DNOTSNotLove"); //REMOVED
DB_QuestDef_State("FTJ_COM_RedPrince","HorrorSleepSunset_Start");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_HorrorSleepSunset_Start", "QuestUpdate_FTJ_COM_RedPrince_HorrorSleepSunset_Start");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_HorrorSleepSunset_PrincessHostile");
DB_QuestDef_State("FTJ_COM_RedPrince","HorrorSleepSunset_PrincessHostile");
DB_QuestDef_State("FTJ_COM_RedPrince","HorrorSleepSunset_PrincessGaveEgg");
DB_QuestDef_State("FTJ_COM_RedPrince","HorrorSleepSunset_PrincessGaveEgg_RedPrince");
DB_QuestDef_State("FTJ_COM_RedPrince","HorrorSleepSunset_PrincessDead");
DB_QuestDef_State("FTJ_COM_RedPrince","HorrorSleepSunset_RP_Seduction_TeleportedOut");
DB_QuestDef_State("FTJ_COM_RedPrince","Princess_EggLeave");
DB_QuestDef_State("FTJ_COM_RedPrince","Princess_NoEggLeave");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_HorrorSleepSunset_RP_Seduction_TeleportedOut", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_RP_Seduction_TeleportedOut");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_HorrorSleepSunset_PrincessGaveEgg", "QuestUpdate_FTJ_COM_RedPrince_HorrorSleepSunset_PrincessGaveEgg");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_HorrorSleepSunset_PrincessGaveEgg_RedPrince", "QuestUpdate_FTJ_COM_RedPrince_HorrorSleepSunset_PrincessGaveEgg_RedPrince");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_HorrorSleepSunset_PrincessDead", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_PrincessDead");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_HorrorSleepSunset_PrincessDead");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_EggLeave", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_EggLeave");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_NoEggLeave", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_NoEggLeave");
DB_QuestDef_State("FTJ_COM_RedPrince","Princess_EggDragonHostile");
DB_QuestDef_State("FTJ_COM_RedPrince","HorrorSleepSunset_LeftEgg");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_Princess_EggLeave");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_Princess_NoEggLeave");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_HorrorSleepSunset_LeftEgg");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_Princess_EggDragonHostile");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_CompleteEmpire");
DB_QuestDef_State("FTJ_COM_RedPrince","HorrorSleepSunset_End");
DB_QuestDef_State("FTJ_COM_RedPrince","AssassinKilledShadow");
DB_QuestDef_State("FTJ_COM_RedPrince","Act2Start");
DB_QuestDef_State("FTJ_COM_RedPrince","Act2Start_Dreamer");
DB_QuestDef_State("FTJ_COM_RedPrince","Act3Start");
DB_QuestDef_State("FTJ_COM_RedPrince","Act3Start_NoConsulate");
DB_QuestDef_State("FTJ_COM_RedPrince","Act3Start_NoSadha");
DB_QuestDef_State("FTJ_COM_RedPrince","Act3Start_KnowConsulate");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_Act3Start", "QuestUpdate_FTJ_COM_RedPrince_Act3Start");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_Act3Start_NoConsulate", "QuestUpdate_FTJ_COM_RedPrince_Act3Start_NoConsulate");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_Act3Start_KnowConsulate", "QuestUpdate_FTJ_COM_RedPrince_Act3Start_KnowConsulate");
DB_QuestDef_State("FTJ_COM_RedPrince","SpymasterRewardAfterRedPrincess");
DB_QuestDef_State("FTJ_COM_RedPrince","SpymasterAttackRedPrincess");
DB_QuestDef_State("FTJ_COM_RedPrince","SpymasterMissingAfterRedPrincess");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_HouseOfShadows", "CoS_FoundDeadSpyMaster");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_HouseOfShadows", "QuestUpdate_FTJ_COM_RedPrince_HouseOfShadows_Close");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_HouseOfShadows", "QuestUpdate_FTJ_COM_RedPrince_SpymasterRewardAfterRedPrincess");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_HouseOfShadows", "QuestUpdate_FTJ_COM_RedPrince_SpymasterAttackRedPrincess");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_HouseOfShadows", "QuestUpdate_FTJ_COM_RedPrince_SpymasterMissingAfterRedPrincess");
DB_QuestDef_State("FTJ_COM_RedPrince","HorrorSleepSunset_PrinceAttackSex");
DB_QuestDef_State("FTJ_COM_RedPrince","HorrorSleepSunset_PrinceAttackDestroy");
DB_QuestDef_State("FTJ_COM_RedPrince","HorrorSleepSunset_PrinceAttackHatch");
DB_QuestDef_State("FTJ_COM_RedPrince","HorrorSleepSunset_PrinceAttack_AttackedSadha", -1);
DB_QuestDef_State("FTJ_COM_RedPrince","CompleteEmpire");
DB_QuestDef_State("FTJ_COM_RedPrince","LV_UnselectedClose",-1);
DB_QuestDef_State("FTJ_COM_RedPrince","COS_OpposedClose",-1);
DB_QuestDef_State("FTJ_COM_RedPrince","Gen_LeaveParty",-1);
DB_QuestDef_State("FTJ_COM_RedPrince","Crypt_Denied",-1);
DB_QuestDef_State("FTJ_COM_RedPrince","Crypt_Allowed",-1);
DB_QuestDef_State("FTJ_COM_RedPrince","RedPrinceDead",-1);
DB_QuestDef_State("FTJ_COM_RedPrince","RedPrinceLeaves",-1);
DB_QuestDef_State("FTJ_COM_RedPrince","Crypt_Divine",-1);
DB_QuestDef_State_CompanionLeft("RED PRINCE","QuestUpdate_FTJ_COM_RedPrince_LV_UnselectedClose","_DiedInLV");
DB_QuestDef_State_CompanionLeft("RED PRINCE","QuestUpdate_FTJ_COM_RedPrince_COS_OpposedClose","_OpposedInCOS");
DB_QuestDef_State_CompanionLeft("RED PRINCE","QuestUpdate_FTJ_COM_RedPrince_Gen_LeaveParty","_LowRelation");

//Sebille
DB_QuestDef_State("FTJ_COM_Sebille","Start",1); 
DB_QuestDef_State("FTJ_COM_Sebille","StartLV",1); 
DB_QuestDef_State("FTJ_COM_Sebille","Stingtail");
DB_QuestDef_State("FTJ_COM_Sebille","Griff");
DB_QuestDef_State("FTJ_COM_Sebille","Zaleskar");
DB_QuestDef_State("FTJ_COM_Sebille","StingtailDead");
DB_QuestDef_State("FTJ_COM_Sebille","GriffDead");
DB_QuestDef_State("FTJ_COM_Sebille","ZaleskarDead");
DB_QuestDef_State("FTJ_COM_Sebille","Baran");
DB_QuestDef_State("FTJ_COM_Sebille","Roost");
DB_QuestDef_State("FTJ_COM_Sebille","RoostDead");
DB_QuestDef_State("FTJ_COM_Sebille","SaheilaPostRoost");
DB_QuestDef_State("FTJ_COM_Sebille","TovahPostRoost");
DB_QuestDef_State("FTJ_COM_Sebille","KnowsScarSong");
DB_QuestDef_State("FTJ_COM_Sebille","AvoidMaster");
DB_QuestDef_State("FTJ_COM_Sebille","SpymasterPossessed",-1);
DB_QuestDef_State("FTJ_COM_Sebille","SongCountered");
DB_QuestDef_State("FTJ_COM_Sebille","MotherScionKillSpymaster");
DB_QuestDef_State("FTJ_COM_Sebille","MotherEatHeart"); //QuestUpdate_FTJ_COM_Sebille_MotherEatHeart
DB_QuestDef_State("FTJ_COM_Sebille","Rooted"); 		//QuestUpdate_FTJ_COM_Sebille_Rooted
DB_QuestDef_State("FTJ_COM_Sebille","NotRooted");	//QuestUpdate_FTJ_COM_Sebille_NotRooted
DB_QuestDef_State("FTJ_COM_Sebille","SaheilaWantsKill");	//QuestUpdate_FTJ_COM_Sebille_SaheilaWantsKill
DB_QuestDef_State("FTJ_COM_Sebille","KilledMotherTree"); //QuestUpdate_FTJ_COM_Sebille_KilledMotherTree
DB_QuestDef_State("FTJ_COM_Sebille","KilledMotherTree_DeathFog"); //QuestUpdate_FTJ_COM_Sebille_KilledMotherTree_DeathFog
DB_QuestDef_State("FTJ_COM_Sebille","SaheilaToldMotherTreeDead"); // QuestUpdate_FTJ_OriginSebille_SaheilaToldMotherTreeDead
DB_QuestDef_State("FTJ_COM_Sebille","COS_Allowed");
DB_QuestDef_State("FTJ_COM_Sebille","COS_Submitted");
DB_QuestDef_State("FTJ_COM_Sebille","COS_FaceMaster");


DB_QuestDef_State("FTJ_COM_Sebille","SaheilaDryad_Root");
DB_QuestDef_State("FTJ_COM_Sebille","SaheilaDryad_NoRoot");
DB_QuestDef_State("FTJ_COM_Sebille","SaheilaDryad_DeadTree");

DB_QuestDef_State("FTJ_COM_Sebille","SpymasterKilled");
DB_QuestDef_State("FTJ_COM_Sebille","Part2_Start");
DB_QuestDef_State("FTJ_COM_Sebille","Part2_Find_Roost");
DB_QuestDef_State("FTJ_COM_Sebille","Act2Start");
DB_QuestDef_State("FTJ_COM_Sebille","Act2Start_LoneWolf");
DB_QuestDef_State("FTJ_COM_Sebille","Act2Start_NoRoost");
DB_QuestDef_State("FTJ_COM_Sebille","COSStart_Nothing");
DB_QuestDef_State("FTJ_COM_Sebille","COSStart_KnowSpy");
DB_QuestDef_State("FTJ_COM_Sebille","COSStart_KnowMother");
DB_QuestDef_State("FTJ_COM_Sebille","COSStart_KnowSpyMother");
DB_QuestDef_State("FTJ_COM_Sebille","Act3Start_Spy");
DB_QuestDef_State("FTJ_COM_Sebille","Act3Start_RootSpy");
DB_QuestDef_State("FTJ_COM_Sebille","Act3Start"); //QuestUpdate_FTJ_COM_Sebille_Act3Start

DB_QuestDef_State("FTJ_COM_Sebille","SebilleDead",-1);
DB_QuestDef_State("FTJ_COM_Sebille","LV_UnselectedClose",-1);
DB_QuestDef_State("FTJ_COM_Sebille","COS_OpposedClose",-1);
DB_QuestDef_State("FTJ_COM_Sebille","Gen_LeaveParty",-1);
DB_QuestDef_State("FTJ_COM_Sebille","Crypt_Denied",-1);
DB_QuestDef_State("FTJ_COM_Sebille","Crypt_Allowed",-1);
DB_QuestDef_State("FTJ_COM_Sebille","SebilleDead",-1);
DB_QuestDef_State("FTJ_COM_Sebille","Crypt_Divine",-1);

DB_QuestDef_State_CompanionLeft("SEBILLE","QuestUpdate_FTJ_COM_Sebille_LV_UnselectedClose","_DiedInLV");
DB_QuestDef_State_CompanionLeft("SEBILLE","QuestUpdate_FTJ_COM_Sebille_COS_OpposedClose","_OpposedInCOS");
DB_QuestDef_State_CompanionLeft("SEBILLE","QuestUpdate_FTJ_COM_Sebille_Gen_LeaveParty","_LowRelation");

DB_QuestDef_State("FTJ_COM_Sebille","MotherTreeDead");
DB_QuestDef_State("FTJ_COM_Sebille","SUBA_LeftCoS");
DB_QuestDef_State("FTJ_COM_Sebille","SUBB_LeftCoS");

DB_QuestDef_UpdateEvent("FTJ_COM_Sebille","SpyMasterDead","QuestUpdate_CoS_SpyMaster_SpyMasterDead");
DB_QuestDef_UpdateEvent("FTJ_COM_Sebille","GoToCoS","QuestUpdate_FTJ_COM_Sebille_RoostDead");

DB_QuestDef_CloseEvent("FTJ_COM_Sebille_SUBA","QuestUpdate_FTJ_COM_Sebille_Rooted");
DB_QuestDef_CloseEvent("FTJ_COM_Sebille_SUBA","QuestUpdate_FTJ_COM_Sebille_NotRooted");
DB_QuestDef_CloseEvent("FTJ_COM_Sebille_SUBA","QuestUpdate_FTJ_COM_Sebille_MotherTreeDead");
DB_QuestDef_CloseEvent("FTJ_COM_Sebille_SUBA","QuestUpdate_FTJ_COM_Sebille_SUBA_LeftCoS");
DB_QuestDef_CloseAtRegionEnded("FTJ_COM_Sebille_SUBA","QuestUpdate_FTJ_COM_Sebille_SUBA_LeftCoS","CoS_Main");

DB_QuestDef_CloseEvent("FTJ_COM_Sebille_SUBB","QuestUpdate_FTJ_COM_Sebille_SaheilaToldMotherTreeDead");
DB_QuestDef_CloseEvent("FTJ_COM_Sebille_SUBB","QuestUpdate_FTJ_COM_Sebille_SUBB_LeftCoS");
DB_QuestDef_CloseEvent("FTJ_COM_Sebille_SUBB","QuestUpdate_FTJ_COM_Sebille_KilledMotherTree_DeathFog");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag_OrClose("FTJ_COM_Sebille_SUBB","QuestUpdate_FTJ_COM_Sebille_SUBB_LeftCoS","CoS_Main","QuestUpdate_FTJ_COM_Sebille_KilledMotherTree");

DB_SeenDeadNPCPartyFlag(CHARACTERGUID_S_RC_MIL_Roost_6fffadfe-b2a8-4e12-a664-ba84c0b0a3a3,"QuestUpdate_FTJ_COM_Sebille_RoostDead");

DB_QuestDef_CloseEvent("FTJ_COM_Sebille_SUBC","QuestUpdate_FTJ_COM_Sebille_SpymasterKilled");

//Ifan
DB_QuestDef_State("FTJ_COM_Ifan","Start",1);
DB_QuestDef_State("FTJ_COM_Ifan","StartLV",1);
DB_QuestDef_State("FTJ_COM_Ifan","NoteDarkFaction");
DB_QuestDef_State("FTJ_COM_Ifan","NoteDarkFactionAfterFTJ");
DB_QuestDef_State("FTJ_COM_Ifan","Borris");
DB_QuestDef_State("FTJ_COM_Ifan","Zaleskar");
DB_QuestDef_State("FTJ_COM_Ifan","AfterAlexandarFight");
DB_QuestDef_State("FTJ_COM_Ifan","GarethInfo");
DB_QuestDef_State("FTJ_COM_Ifan","AlexandarKilledLV");
DB_QuestDef_State("FTJ_COM_Ifan","Act2Start");
DB_QuestDef_State("FTJ_COM_Ifan","StartAct3");
DB_QuestDef_State("FTJ_COM_Ifan","DWKid");
DB_QuestDef_State("FTJ_COM_Ifan","WreckerHillsConfession");
DB_QuestDef_State("FTJ_COM_Ifan","WreckerCaveBetrayal");
DB_QuestDef_State("FTJ_COM_Ifan","FoundContract");
DB_QuestDef_State("FTJ_COM_Ifan","LearnedBaran");
DB_QuestDef_State("FTJ_COM_Ifan","LearnedRoost");
DB_QuestDef_State("FTJ_COM_Ifan","Tricked");
DB_QuestDef_State("FTJ_COM_Ifan","FindHannag");
DB_QuestDef_State("FTJ_COM_Ifan","FindHannagAlt");
DB_QuestDef_State("FTJ_COM_Ifan","HannaginBF");
DB_QuestDef_State("FTJ_COM_Ifan","HannagInfo");
DB_QuestDef_State("FTJ_COM_Ifan","COSAlexandar");
DB_QuestDef_State("FTJ_COM_Ifan","COSAlexandarNoHannag");
DB_QuestDef_State("FTJ_COM_Ifan","AlexandarLV");
DB_QuestDef_State("FTJ_COM_Ifan","LizardDemonLeader");
DB_QuestDef_State("FTJ_COM_Ifan","KilledAlexandarCOS");
DB_QuestDef_State("FTJ_COM_Ifan","DeadAlexandarCOS");
DB_QuestDef_State("FTJ_COM_Ifan","StartAct3");
DB_QuestDef_State("FTJ_COM_Ifan","RejectGroomContract");
DB_QuestDef_State("FTJ_COM_Ifan","KilledLucianCrypt");
DB_QuestDef_State("FTJ_COM_Ifan","COS_Allowed");
DB_QuestDef_State("FTJ_COM_Ifan","COS_Submitted");

DB_QuestDef_State("FTJ_COM_Ifan","LV_UnselectedClose",-1);
DB_QuestDef_State("FTJ_COM_Ifan","COS_OpposedClose",-1);
DB_QuestDef_State("FTJ_COM_Ifan","Gen_LeaveParty",-1);
DB_QuestDef_State("FTJ_COM_Ifan","Crypt_Denied",-1);
DB_QuestDef_State("FTJ_COM_Ifan","Crypt_Allowed",-1);
DB_QuestDef_State("FTJ_COM_Ifan","IfanDead",-1);
DB_QuestDef_State("FTJ_COM_Ifan","Crypt_Divine",-1);
DB_QuestDef_State("FTJ_COM_Ifan","DeathfogLeave",-1);
DB_QuestDef_State_CompanionLeft("IFAN","QuestUpdate_FTJ_COM_Ifan_LV_UnselectedClose","_DiedInLV");
DB_QuestDef_State_CompanionLeft("IFAN","QuestUpdate_FTJ_COM_Ifan_COS_OpposedClose","_OpposedInCOS");
DB_QuestDef_State_CompanionLeft("IFAN","QuestUpdate_FTJ_COM_Ifan_Gen_LeaveParty","_LowRelation");
DB_QuestDef_State_CompanionLeft("IFAN","QuestUpdate_FTJ_COM_Ifan_DeathfogLeave","_Deathfog");

DB_QuestDef_State("FTJ_COM_Ifan","MetRoost");
DB_QuestDef_State("FTJ_COM_Ifan","RoostDead");
DB_QuestDef_State("FTJ_COM_Ifan","SUBA_LeftRC");
DB_QuestDef_State("FTJ_COM_Ifan","WreckerHillsConfession2");//REMOVED
DB_QuestDef_State("FTJ_COM_Ifan","SUBB_LeftRC");
DB_QuestDef_State("FTJ_COM_Ifan","Act2bStart");
DB_QuestDef_State("FTJ_COM_Ifan","FindAlexandar");
DB_QuestDef_State("FTJ_COM_Ifan","FindLoneWolves");
DB_SeenDeadNPCPartyFlag(CHARACTERGUID_S_RC_MIL_Roost_6fffadfe-b2a8-4e12-a664-ba84c0b0a3a3,"QuestUpdate_FTJ_COM_Ifan_RoostDead");

DB_QuestDef_CloseEvent("FTJ_COM_Ifan_SUBA","QuestUpdate_FTJ_COM_Ifan_MetRoost");
DB_QuestDef_CloseEvent("FTJ_COM_Ifan_SUBA","QuestUpdate_FTJ_COM_Ifan_RoostDead");
DB_QuestDef_CloseEvent("FTJ_COM_Ifan_SUBA","QuestUpdate_FTJ_COM_Ifan_SUBA_LeftRC");
DB_QuestDef_CloseAtRegionEnded("FTJ_COM_Ifan_SUBA","QuestUpdate_FTJ_COM_Ifan_SUBA_LeftRC","RC_Main");

DB_QuestDef_CloseEvent("FTJ_COM_Ifan_SUBB","QuestUpdate_FTJ_COM_Ifan_HannagInfo");
DB_QuestDef_CloseEvent("FTJ_COM_Ifan_SUBB","QuestUpdate_FTJ_COM_Ifan_SUBB_LeftRC");
DB_QuestDef_CloseAtRegionEnded("FTJ_COM_Ifan_SUBB","QuestUpdate_FTJ_COM_Ifan_SUBB_LeftRC","RC_Main");

DB_QuestDef_UpdateEvent("FTJ_COM_Ifan", "MetRoost", "QuestUpdate_FTJ_COM_Ifan_LearnedRoost");
DB_QuestDef_UpdateEvent("FTJ_COM_Ifan", "WreckerHillsConfession2", "QuestUpdate_FTJ_COM_Ifan_WreckerHillsConfession");//REMOVED
DB_QuestDef_UpdateEvent("FTJ_COM_Ifan", "FindAlexandar", "QuestUpdate_FTJ_COM_Ifan_HannagInfo");

DB_CompanionUpdateRegionStart_ObjFlag_ObjFlag("IFAN","CoS_Main","QuestUpdate_FTJ_COM_Ifan_Act2bStart","QuestUpdate_FTJ_COM_Ifan_LearnedRoost",0,"QuestUpdate_FTJ_COM_Ifan_FindAlexandar",0);
DB_CompanionUpdateRegionStart("IFAN","QuestUpdate_FTJ_COM_Ifan_FindLoneWolves","RC_Main");


//Lohse
DB_QuestDef_State("FTJ_COM_Lohse","Start",1);
DB_QuestDef_State("FTJ_COM_Lohse","StartLV",1);
DB_QuestDef_State("FTJ_COM_Lohse","Saheila_Lives");
DB_QuestDef_State("FTJ_COM_Lohse","Saheila_Dies");
DB_QuestDef_State("FTJ_COM_Lohse","JahanApprentice");
DB_QuestDef_State("FTJ_COM_Lohse","Act2Start");
DB_QuestDef_State("FTJ_COM_Lohse","MetJahan");
DB_QuestDef_State("FTJ_COM_Lohse","FailedJahanExorcism");
DB_QuestDef_State("FTJ_COM_Lohse","WeakeningSuggested");
DB_QuestDef_State("FTJ_COM_Lohse","WeakeningSucceeded");
DB_QuestDef_State("FTJ_COM_Lohse","WeakeningFailed");
DB_QuestDef_State("FTJ_COM_Lohse","DoctorPossessed");
DB_QuestDef_State("FTJ_COM_Lohse","DoctorDefeat");
DB_QuestDef_UpdateEvent("FTJ_COM_Lohse","LearnedDemonName","JDFProxy_QuestUpdate_FTJ_COM_Lohse_LearnedDemonName");
DB_QuestDef_State("FTJ_COM_Lohse","WeakeningLeft");
DB_QuestDef_State("FTJ_COM_Lohse","JahanDenied");	
DB_QuestDef_State("FTJ_COM_Lohse","JahanWarning");	
DB_QuestDef_UpdateEvent("FTJ_COM_Lohse","KilledAdvocate","JDFProxy_QuestUpdate_FTJ_COM_Lohse_KilledAdvocate");
DB_QuestDef_State("FTJ_COM_Lohse","JahanQuestPart1Done");	
DB_QuestDef_State("FTJ_COM_Lohse","JahanToldSameDemon");	
DB_QuestDef_State("FTJ_COM_Lohse","JahanLV");	
DB_QuestDef_State("FTJ_COM_Lohse","JahanNoLV");	
DB_QuestDef_State("FTJ_COM_Lohse","MaladyTellsDemonArxName");	
DB_QuestDef_State("FTJ_COM_Lohse","MaladyTellsDemonArxNoName");	

DB_QuestDef_State("FTJ_COM_Lohse","WeakeningSuggested");	
DB_QuestDef_State("FTJ_COM_Lohse","WeakeningDenied");	
DB_QuestDef_State("FTJ_COM_Lohse","WeakeningSelected");	
DB_QuestDef_State("FTJ_COM_Lohse","DoctorPossessed");
DB_QuestDef_State("FTJ_COM_Lohse","DoctorDefeat");	
DB_QuestDef_State("FTJ_COM_Lohse","COS_Submitted");
DB_QuestDef_State("FTJ_COM_Lohse","COS_Allowed");	
DB_QuestDef_State("FTJ_COM_Lohse","DNOTSNotLove");	
DB_QuestDef_State("FTJ_COM_Lohse","DNOTSLove");	
DB_QuestDef_State("FTJ_COM_Lohse","Act3Start");

DB_QuestDef_State("FTJ_COM_Lohse","Crypt_Denied",-1);
DB_QuestDef_State("FTJ_COM_Lohse","Crypt_Allowed",-1);
DB_QuestDef_State("FTJ_COM_Lohse","LohseDead",-1);
DB_QuestDef_State("FTJ_COM_Lohse","Crypt_Divine",-1);
DB_QuestDef_State("FTJ_COM_Lohse","LV_UnselectedClose",-1);
DB_QuestDef_State("FTJ_COM_Lohse","COS_OpposedClose",-1);
DB_QuestDef_State("FTJ_COM_Lohse","Gen_LeaveParty",-1);
DB_QuestDef_State_CompanionLeft("LOHSE","QuestUpdate_FTJ_COM_Lohse_LV_UnselectedClose","_DiedInLV");
DB_QuestDef_State_CompanionLeft("LOHSE","QuestUpdate_FTJ_COM_Lohse_COS_OpposedClose","_OpposedInCOS");
DB_QuestDef_State_CompanionLeft("LOHSE","QuestUpdate_FTJ_COM_Lohse_Gen_LeaveParty","_LowRelation");


//Fane
// This update event is also tied to "Start", which actually opens the main quest;
// however, the text of Start2 is the one that opens the main quest rather than
// the subquest (see below), so it's listed here. For savegame and loca reasons,
// the Start and Start2 entries did not get just switched in the journal.
DB_QuestDef_UpdateEvent("FTJ_COM_Fane","Start2", "QuestUpdate_FTJ_COM_Fane_Start");

DB_QuestDef_State("FTJ_COM_Fane","StartLV",1);

//SUB
// This one opens the main companion quest, but the update text is tied to the
// subquest about finding the mask back.
DB_QuestDef_State("FTJ_COM_Fane","Start",1);
DB_QuestDef_UpdateEvent("FTJ_COM_Fane","NeedMask", "QuestUpdate_FTJ_COM_Fane_Start");
DB_QuestDef_State("FTJ_COM_Fane","GhettoBlacksmith");
DB_QuestDef_State("FTJ_COM_Fane","GotFaceRipper");
DB_QuestDef_State("FTJ_COM_Fane","MetWindego");
DB_QuestDef_State("FTJ_COM_Fane","GotMaskBack");
DB_QuestDef_State("FTJ_COM_Fane","CraftMask");
DB_QuestDef_CloseEvent("FTJ_COM_Fane_SUBA","QuestUpdate_FTJ_COM_Fane_GotMaskBack");
DB_QuestDef_CloseEvent("FTJ_COM_Fane_SUBA","QuestUpdate_FTJ_COM_Fane_CraftMask");

DB_QuestDef_State("FTJ_COM_Fane","Act2Start");
DB_QuestDef_State("FTJ_COM_Fane","FoundEternalRelics");
DB_QuestDef_State("FTJ_COM_Fane","TalkedToEternalAetera");
DB_QuestDef_State("FTJ_COM_Fane","RefusedPromise");
DB_QuestDef_State("FTJ_COM_Fane","ArxSmallVoidWoken");
DB_QuestDef_State("FTJ_COM_Fane","NoFaceRipper");
DB_QuestDef_State("FTJ_COM_Fane","MentionedFamily");
DB_QuestDef_State("FTJ_COM_Fane","AskedAboutPower");
DB_QuestDef_State("FTJ_COM_Fane","RecognisedEternalArchitecture");
DB_QuestDef_State("FTJ_COM_Fane","COS_Submitted");
DB_QuestDef_State("FTJ_COM_Fane","COS_Allowed");
DB_QuestDef_State("FTJ_COM_Fane","FaneAcademy");
DB_QuestDef_State("FTJ_COM_Fane","Crypt_Denied");
DB_QuestDef_State("FTJ_COM_Fane","Crypt_Allowed");
DB_QuestDef_State("FTJ_COM_Fane","Act3Start");

DB_QuestDef_State("FTJ_COM_Fane","TookPromise",-1);
DB_QuestDef_State("FTJ_COM_Fane","LV_UnselectedClose",-1);
DB_QuestDef_State("FTJ_COM_Fane","COS_OpposedClose",-1);
DB_QuestDef_State("FTJ_COM_Fane","Gen_LeaveParty",-1);
DB_QuestDef_State("FTJ_COM_Fane","Crypt_Denied",-1);
DB_QuestDef_State("FTJ_COM_Fane","Crypt_Allowed",-1);
DB_QuestDef_State("FTJ_COM_Fane","FaneDead",-1);
DB_QuestDef_State("FTJ_COM_Fane","Crypt_Divine",-1);
DB_QuestDef_State_CompanionLeft("FANE","QuestUpdate_FTJ_COM_Fane_LV_UnselectedClose","_DiedInLV");
DB_QuestDef_State_CompanionLeft("FANE","QuestUpdate_FTJ_COM_Fane_COS_OpposedClose","_OpposedInCOS");
DB_QuestDef_State_CompanionLeft("FANE","QuestUpdate_FTJ_COM_Fane_Gen_LeaveParty","_LowRelation");


//Beast
DB_QuestDef_State("FTJ_COM_Beast","Start",1);
DB_QuestDef_State("FTJ_COM_Beast","StartLV", 1);


DB_QuestDef_State("FTJ_COM_Beast","ReadOperationDownfall");
DB_QuestDef_State("FTJ_COM_Beast","CarsonKeyUnused");
DB_QuestDef_State("FTJ_COM_Beast","KilledLohar");
DB_QuestDef_State("FTJ_COM_Beast","BelievedLohar");
DB_QuestDef_State("FTJ_COM_Beast","ShipmentToArx");
DB_QuestDef_State("FTJ_COM_Beast","ShipmentDeathFog");
DB_QuestDef_State("FTJ_COM_Beast","ToArx_1");
DB_QuestDef_State("FTJ_COM_Beast","ToArx_2");
DB_QuestDef_State("FTJ_COM_Beast","Act2Start");
DB_QuestDef_State("FTJ_COM_Beast","PreAct2Start");
DB_QuestDef_State("FTJ_COM_Beast","KnowLoharDriftwood");
DB_QuestDef_State("FTJ_COM_Beast","IsbeilQueenEncounter");
DB_QuestDef_State("FTJ_COM_Beast","MetCarson");
DB_QuestDef_State("FTJ_COM_Beast","CarsonKey");
DB_QuestDef_State("FTJ_COM_Beast","COS_Allowed");
DB_QuestDef_State("FTJ_COM_Beast","COS_Submitted");
DB_QuestDef_State("FTJ_COM_Beast","COSDeathfogLetter");
DB_QuestDef_State("FTJ_COM_Beast","TurnedAssassinationAttempt");
DB_QuestDef_State("FTJ_COM_Beast","Resolved");
DB_QuestDef_State("FTJ_COM_Beast","Act3Start");
DB_QuestDef_State("FTJ_COM_Beast","Act3StartLoharUnfinished");
DB_QuestDef_UpdateEvent("FTJ_COM_Beast","AssassinationAttempt", "ARX_Sewers_TheQueen_AssassinationAttempt");

DB_QuestDef_State("FTJ_COM_Beast","KilledLoharLeave", -1);
DB_QuestDef_State("FTJ_COM_Beast","Crypt_Denied",-1);
DB_QuestDef_State("FTJ_COM_Beast","Crypt_Allowed",-1);
DB_QuestDef_State("FTJ_COM_Beast","LV_UnselectedClose",-1);
DB_QuestDef_State("FTJ_COM_Beast","COS_OpposedClose",-1);
DB_QuestDef_State("FTJ_COM_Beast","Gen_LeaveParty",-1);
DB_QuestDef_State("FTJ_COM_Beast","BeastDead",-1);
DB_QuestDef_State("FTJ_COM_Beast","Crypt_Divine",-1);
DB_QuestDef_State("FTJ_COM_Beast","DeathfogLeave",-1);
DB_QuestDef_State_CompanionLeft("BEAST","QuestUpdate_FTJ_COM_Beast_LV_UnselectedClose","_DiedInLV");
DB_QuestDef_State_CompanionLeft("BEAST","QuestUpdate_FTJ_COM_Beast_COS_OpposedClose","_OpposedInCOS");
DB_QuestDef_State_CompanionLeft("BEAST","QuestUpdate_FTJ_COM_Beast_Gen_LeaveParty","_LowRelation");
DB_QuestDef_State_CompanionLeft("BEAST","QuestUpdate_FTJ_COM_Beast_DeathfogLeave","_Deathfog");
DB_QuestDef_State("FTJ_COM_Beast","CaravanLohar");
DB_QuestDef_State("FTJ_COM_Beast","Act2b_Start_NoLeads");
DB_CompanionUpdateRegionStart("BEAST","QuestUpdate_FTJ_COM_Beast_Act2b_Start_NoLeads","CoS_Main");
DB_QuestDef_State("FTJ_COM_Beast","KnowSewers");
DB_QuestDef_UpdateEvent("FTJ_COM_Beast","KnowSewers", "QuestUpdate_RC_ARX_TheImperialDwarves_Ros_PathToQueen");
DB_QuestDef_State("FTJ_COM_Beast","IsbeilBR");

//END_REGION
//REGION Origin updates
DB_OriginID((CHARACTERGUID)CHARACTERGUID_S_Player_Ifan_ad9a3327-4456-42a7-9bf4-7ad60cc9e54f,"IFAN");
DB_OriginID((CHARACTERGUID)CHARACTERGUID_S_Player_Beast_f25ca124-a4d2-427b-af62-df66df41a978,"BEAST");
DB_OriginID((CHARACTERGUID)CHARACTERGUID_S_Player_Lohse_bb932b13-8ebf-4ab4-aac0-83e6924e4295,"LOHSE");
DB_OriginID((CHARACTERGUID)CHARACTERGUID_S_Player_RedPrince_a26a1efb-cdc8-4cf3-a7b2-b2f9544add6f,"RED PRINCE");
DB_OriginID((CHARACTERGUID)CHARACTERGUID_S_Player_Sebille_c8d55eaf-e4eb-466a-8f0d-6a9447b5b24c,"SEBILLE");
DB_OriginID((CHARACTERGUID)CHARACTERGUID_S_Player_Fane_02a77f1f-872b-49ca-91ab-32098c443beb,"FANE");

//--- COMPANION
DB_CompanionUpdateObjectFlag("IFAN","QuestUpdate_FTJ_COM_Ifan_AlexandarLV","QuestUpdate_LV_Main_AlexandarCaptive");
DB_CompanionUpdateObjectFlag("BEAST","QuestUpdate_FTJ_COM_Beast_IsbeilQueenEncounter","Beast_IsbeilQueenEncounter_SetUpdate");

DB_CompanionUpdateGlobalFlag("IFAN","QuestUpdate_FTJ_COM_Ifan_LizardDemonLeader","RC_BI_TalkAboutDFhelpingGodKing");
DB_CompanionUpdateGlobalFlag("IFAN","QuestUpdate_FTJ_COM_Ifan_KilledAlexandarCOS","CoS_Alexandar_Murder");
DB_CompanionUpdateGlobalFlag("IFAN","QuestUpdate_FTJ_COM_Ifan_RejectGroomContract","GLO_Ifan_ARX_Groom_COMFinished");



//--- AVATAR
DB_AvatarUpdateObjectFlag("IFAN","QuestUpdate_FTJ_Ifan_DarkFaction_AlexandarLV","QuestUpdate_LV_Main_AlexandarCaptive");
DB_AvatarUpdateObjectFlag("BEAST","QuestUpdate_FTJ_OriginBeast_IsbeilQueenEncounter","Beast_IsbeilQueenEncounter_SetUpdateBeastOnly");

DB_AvatarUpdateGlobalFlag("IFAN","QuestUpdate_FTJ_Ifan_DarkFaction_LizardDemonLeader","RC_BI_TalkAboutDFhelpingGodKing");


//DB_QuestDef_State("","");
//--- REGION STARTS
// COMPANION
DB_CompanionUpdateRegionStart_ObjFlag_ObjFlag("SEBILLE","RC_Main","QuestUpdate_FTJ_COM_Sebille_Act2Start","QuestUpdate_FTJ_COM_Sebille_Zaleskar",1,"QuestUpdate_FTJ_COM_Sebille_Start",1);
DB_CompanionUpdateRegionStart_ObjFlag_ObjFlag("SEBILLE","RC_Main","QuestUpdate_FTJ_COM_Sebille_Act2Start_LoneWolf","QuestUpdate_FTJ_COM_Sebille_Zaleskar",0,"QuestUpdate_FTJ_COM_Sebille_Stingtail",1);
DB_CompanionUpdateRegionStart_ObjFlag_ObjFlag("SEBILLE","RC_Main","QuestUpdate_FTJ_COM_Sebille_Act2Start_NoRoost","QuestUpdate_FTJ_COM_Sebille_Zaleskar",0,"QuestUpdate_FTJ_COM_Sebille_Stingtail",0);
DB_CompanionUpdateRegionStart_ObjFlag_ObjFlag("SEBILLE","ARX_Main","QuestUpdate_FTJ_COM_Sebille_Act3Start_Spy","QuestUpdate_QuestUpdate_FTJ_COM_Sebille_Roost",0,"QuestUpdate_FTJ_COM_Sebille_SpymasterKilled",1);
DB_CompanionUpdateRegionStart_ObjFlag_ObjFlag("SEBILLE","ARX_Main","QuestUpdate_FTJ_COM_Sebille_Act3Start_RootSpy","QuestUpdate_QuestUpdate_FTJ_COM_Sebille_Roost",1,"QuestUpdate_FTJ_COM_Sebille_SpymasterKilled",1);
DB_CompanionUpdateRegionStart_ObjFlag_ObjFlag("SEBILLE","ARX_Main","QuestUpdate_FTJ_COM_Sebille_Act3Start","QuestUpdate_FTJ_COM_Sebille_SpymasterKilled",0,"QuestUpdate_FTJ_COM_Sebille_Rooted",0);

DB_CompanionUpdateRegionStart("FANE","QuestUpdate_FTJ_COM_Fane_Act3Start","ARX_Main");

// AVATAR
DB_AvatarUpdateRegionStart_ObjFlag_ObjFlag("SEBILLE","RC_Main","QuestUpdate_FTJ_OriginSebille_Act2Start","QuestUpdate_FTJ_OriginSebille_Part2_Find_Roost",1,"QuestUpdate_FTJ_OriginSebille_Start_Dreamer",1);
DB_AvatarUpdateRegionStart_ObjFlag_ObjFlag("SEBILLE","RC_Main","QuestUpdate_FTJ_OriginSebille_Act2Start_LoneWolf","QuestUpdate_FTJ_OriginSebille_Part2_Find_Roost",0,"QuestUpdate_FTJ_OriginSebille_Part2_Start",1);
DB_AvatarUpdateRegionStart_ObjFlag_ObjFlag("SEBILLE","RC_Main","QuestUpdate_FTJ_OriginSebille_Act2Start_Nothing","QuestUpdate_FTJ_OriginSebille_Part2_Find_Roost",0,"QuestUpdate_FTJ_OriginSebille_Part2_Start",0);
DB_AvatarUpdateRegionStart_ObjFlag_ObjFlag("SEBILLE","ARX_Main","QuestUpdate_FTJ_OriginSebille_Act3Start_Spy","QuestUpdate_FTJ_OriginSebille_Roost",0,"QuestUpdate_FTJ_OriginSebille_SpymasterKilled",1);
DB_AvatarUpdateRegionStart_ObjFlag_ObjFlag("SEBILLE","ARX_Main","QuestUpdate_FTJ_OriginSebille_Act3Start_RootSpy","QuestUpdate_FTJ_OriginSebille_Roost",1,"QuestUpdate_FTJ_OriginSebille_SpymasterKilled",1);
DB_AvatarUpdateRegionStart_ObjFlag_ObjFlag("SEBILLE","ARX_Main","QuestUpdate_FTJ_OriginSebille_Act3Start","QuestUpdate_FTJ_OriginSebille_Start_Dreamer",1,"QuestUpdate_FTJ_OriginSebille_SpymasterKilled",0);

DB_AvatarUpdateRegionStart("IFAN","QuestUpdate_FTJ_Ifan_DarkFaction_StartAct3","ARX_Main");

DB_QuestDef_State("FTJ_OriginFane","Act2Start");
DB_AvatarUpdateRegionStart("FANE","QuestUpdate_FTJ_OriginFane_Act2Start","RC_Main");

DB_QuestDef_State("FTJ_OriginFane","Act3Start");
DB_AvatarUpdateRegionStart("FANE","QuestUpdate_FTJ_OriginFane_Act3Start","ARX_Main");

DB_QuestDef_State("FTJ_OriginFane","LandedOnNamelessIsle");
DB_AvatarUpdateRegionStart("FANE","QuestUpdate_FTJ_OriginFane_LandedOnNamelessIsle","CoS_Main");



//DB_AvatarUpdateRegionStart("","","");

//DB_AvatarRegionStartUpdate("","");





//END_REGION


// CloseAtRegionEnded Entries
//REGION FTJ
DB_QuestDef_CloseAtRegionEnded("FTJ_Arena","QuestUpdate_FTJ_Arena_CloseLeftFortJoyArena","FJ_FortJoy_Main");
DB_QuestDef_CloseAtRegionEnded("FTJ_Elodi","QuestUpdate_FTJ_Elodi_CloseLeftFortJoy","FJ_FortJoy_Main");
DB_QuestDef_CloseAtRegionEnded("FTJ_SW_Shriekers","QuestUpdate_FTJ_SW_Shriekers_CloseLeftFortJoy","FJ_FortJoy_Main");

DB_QuestDef_CloseAtRegionEnded_Conditions_TrueGlobalFlag_FalseUserFlag("RC_FTJ_OlgoSaheila","QuestUpdate_RC_FTJ_OlgoSaheila_CloseLeftFortJoySaheila","FJ_FortJoy_Main","FTJ_ImprissonedSkepticFreed","QuestUpdate_RC_FTJ_OlgoSaheila_SaheilaThanks");
DB_QuestDef_CloseAtRegionEnded_Condition_FalseGlobalFlag("RC_FTJ_OlgoSaheila","QuestUpdate_RC_FTJ_OlgoSaheila_CloseLeftFortJoy","FJ_FortJoy_Main","FTJ_ImprissonedSkepticFreed");


DB_QuestDef_CloseAtRegionEnded("FTJ_SourceHounds","QuestUpdate_FTJ_SourceHounds_CloseLeftFortJoy","FJ_FortJoy_Main");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_FTJ_SoulJar","QuestUpdate_RC_FTJ_SoulJar_CloseLeftFortJoy","FJ_FortJoy_Main","QuestUpdate_RC_FTJ_SoulJar_DestroyedSJ");
DB_QuestDef_CloseAtRegionEnded("FTJ_Teleporter","QuestUpdate_FTJ_Teleporter_CloseLeftFortJoy","FJ_FortJoy_Main");
DB_QuestDef_CloseAtRegionEnded("FTJ_SW_UndeadTowerMaze","QuestUpdate_FTJ_SW_UndeadTowerMaze_CloseLeftFortJoy","FJ_FortJoy_Main");
DB_QuestDef_CloseAtRegionEnded("FTJ_SW_BatteredAndCornered","QuestUpdate_FTJ_SW_BatteredAndCornered_CloseLeftFortJoy","FJ_FortJoy_Main");

DB_QuestDef_CloseAtRegionEnded_Condition_FalseGlobalFlag_OrClose("FTJ_SW_CallToArms","QuestUpdate_FTJ_SW_CallToArms_CloseLeftFortJoy","FJ_FortJoy_Main","FTJ_SW_FinalBattle_StartInfiltration");

DB_QuestDef_CloseAtRegionEnded("FTJ_SW_StuckHaunting","QuestUpdate_FTJ_SW_StuckHaunting_CloseLeftFortJoy","FJ_FortJoy_Main");
DB_QuestDef_CloseAtRegionEnded("FTJ_SW_Necromancers","QuestUpdate_FTJ_SW_Necromancers_CloseLeftFortJoy","FJ_FortJoy_Main");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_FTJ_MurderousGheist","QuestUpdate_RC_FTJ_MurderousGheist_CloseLeftFortJoyMigo","FJ_FortJoy_Main","QuestUpdate_RC_FTJ_MurderousGheist_InfoGheist");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_FTJ_MurderousGheist","QuestUpdate_RC_FTJ_MurderousGheist_CloseLeftFortJoyYarrow","FJ_FortJoy_Main","QuestUpdate_RC_FTJ_MurderousGheist_InfoGheist");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("FTJ_SW_Illusionist","QuestUpdate_FTJ_SW_Illusionist_CloseLeftFortJoyStillSecret","FJ_FortJoy_Main","QuestUpdate_FTJ_SW_Illusionist_Start_FindEntrance");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag_TrueObjFlag("FTJ_SW_Illusionist","QuestUpdate_FTJ_SW_Illusionist_Start_CloseLeftFortJoyDungeon","FJ_FortJoy_Main","QuestUpdate_FTJ_SW_Illusionist_MeetIllusionist","QuestUpdate_FTJ_SW_Illusionist_Start_FindEntrance");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("FTJ_SW_Illusionist","QuestUpdate_FTJ_SW_Illusionist_CloseLeftFortJoyTrompdoy","FJ_FortJoy_Main","QuestUpdate_FTJ_SW_Illusionist_MeetIllusionist");
DB_QuestDef_CloseAtRegionEnded("FTJ_SW_CursedPig","QuestUpdate_FTJ_SW_CursedPig_CloseLeftFortJoy","FJ_FortJoy_Main");
DB_QuestDef_CloseAtRegionEnded("FTJ_SW_BraccusArmory","QuestUpdate_FTJ_SW_BraccusArmory_CloseLeftFortJoy","FJ_FortJoy_Main");
DB_QuestDef_CloseAtRegionEnded("FTJ_SW_HurtSeekers","QuestUpdate_FTJ_SW_HurtSeekers_CloseLeftFortJoy","FJ_FortJoy_Main");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("FTJ_SW_Tyrant","QuestUpdate_FTJ_SW_Tyrant_CloseLeftFortJoy","FJ_FortJoy_Main","QuestUpdate_FTJ_SW_Tyrant_FoundAll");

//DB_QuestDef_CloseAtRegionEnded("FTJ_Seeker","QuestUpdate_FTJ_Seeker_CloseLeftFortJoy","FJ_FortJoy_Main"); //set in FTJ_SW_River

//END_REGION
//REGION RC
//DB_QuestDef_CloseAtRegionEnded("","QuestUpdate_","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_MIL_SyrusOates","QuestUpdate_RC_MIL_SyrusOates_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_MIL_BlackWidowMaker","QuestUpdate_RC_MIL_BlackWidowMaker_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_MIL_EdieEngrym","QuestUpdate_RC_MIL_EdieEngrym_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_MIL_Mudbarrow","QuestUpdate_RC_MIL_Mudbarrow_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_MIL_SavingCorbin","QuestUpdate_RC_MIL_SavingCorbin_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_BI_TheVaultGodwoken","QuestUpdate_RC_BI_TheVaultGodwoken_LeftRegion","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_BI_TheVaultKid","QuestUpdate_RC_BI_TheVaultKid_LeftRegion","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_BI_TheVaultAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_LeftRegion","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_BI_TheVaults","QuestUpdate_RC_BI_TheVaults_LeftRegion","RC_Main");
DB_QuestDef_CloseAtRegionEnded("FTJ_SaheilaFate","QuestUpdate_FTJ_SaheilaFate_NotFoundElf","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DW_Meistr","QuestUpdate_RC_DW_Meistr_LeaveRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DW_Dock_Kids","QuestUpdate_RC_DW_Dock_Kids_Leave","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_FL_GarethParents","QuestUpdate_RC_FL_GarethParents_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_BF_CorneredSourcerer","QuestUpdate_RC_BF_CorneredSourcerer_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DF_UndeadTrader","QuestUpdate_RC_DF_UndeadTrader_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_GY_RykersSpider","QuestUpdate_RC_GY_RykersSpider_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_GY_DeerGhost","QuestUpdate_RC_GY_DeerGhost_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_GY_UglyBird","QuestUpdate_RC_GY_UglyBird_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_GY_BuriedLizard","QuestUpdate_RC_GY_BuriedLizard_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_MIL_SelenHead","QuestUpdate_RC_MIL_SelenHead_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_GY_FavoritePet","QuestUpdate_RC_GY_FavoritePet_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_MIL_GhostRevenge","QuestUpdate_RC_MIL_GhostRevenge_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_MIL_GhostLog","QuestUpdate_RC_MIL_GhostLog_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_MIL_ElfTest","QuestUpdate_RC_MIL_ElfTest_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_MIL_RescuingSaheila","QuestUpdate_RC_MIL_RescuingSaheila_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_MIL_AvengingSaheila","QuestUpdate_RC_MIL_AvengingSaheila_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_ThreeAltars","QuestUpdate_RC_ThreeAltars_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DF_PaladinCheckpoint","QuestUpdate_RC_DF_PaladinCheckpoint_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_WH_SeaGodStatue","QuestUpdate_RC_WH_SeaGodStatue_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DW_DwarvenCriminals","QuestUpdate_RC_DW_DwarvenCriminals_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DW_ShadowOverDriftwood","QuestUpdate_RC_DW_ShadowOverDriftwood_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DW_FishScholar","QuestUpdate_RC_DW_FishScholar_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DW_HidingTinkerer","QuestUpdate_RC_DW_HidingTinkerer_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DW_SurpriseDate","QuestUpdate_RC_DW_SurpriseDate_CloseLeftRC","RC_Main");
//DB_QuestDef_CloseAtRegionEnded("RC_DW_Arena","QuestUpdate_RC_DW_Arena_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DW_TheDrunkenSailor","QuestUpdate_RC_DW_TheDrunkenSailor_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DW_SpidersKiss","QuestUpdate_RC_DW_SpidersKiss_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DW_SnoozingAdventurer","QuestUpdate_RC_DW_SnoozingAdventurer_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DW_GarvanSupplies","QuestUpdate_RC_DW_GarvanSupplies_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_WC_TheDeadTrader","QuestUpdate_RC_WC_TheDeadTrader_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DW_WreckedCaravan","QuestUpdate_RC_DW_WreckedCaravan_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_DU_HeroicRescue","QuestUpdate_RC_DU_HeroicRescue_WifeDied","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_MIL_ElvenBurial","QuestUpdate_RC_MIL_ElvenBurial_DidnotParticipate","RC_Main");

DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_DW_Arena","QuestUpdate_RC_DW_Arena_CloseLeftRC","RC_Main","QuestUpdate_RC_DW_Arena_ArenaChampion");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_DW_Arena","QuestUpdate_RC_DW_Arena_CloseLeftRC_Champion","RC_Main","QuestUpdate_RC_DW_Arena_ArenaChampion");

DB_QuestDef_CloseAtRegionEnded_Condition_FalseGlobalFlag("RC_GY_Godslayer","QuestUpdate_RC_GY_Godslayer_CloseLeftRC","RC_Main","RC_GY_NecromancerToLV");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_GY_Godslayer","QuestUpdate_RC_GY_Godslayer_NoPartsLeftRC","RC_Main","QuestUpdate_RC_GY_Godslayer_GaveParts");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_WH_BottledWish","QuestUpdate_RC_WH_BottledWish_CloseLeftRCNoBottle","RC_Main","RC_WH_BottledWish_HasBottle");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_WH_BottledWish","QuestUpdate_RC_WH_BottledWish_CloseLeftRCNoBottle","RC_Main","QuestUpdate_RC_WH_BottledWish_TransferredBottleToNpc");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_DF_TrollBridge","QuestUpdate_RC_DF_TrollBridge_CloseLeftRC","RC_Main","QuestUpdate_RC_DF_TrollBridge_CompetitionRemoved");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_DF_TrollBridge","QuestUpdate_RC_DF_TrollBridge_CloseLeftRCReward","RC_Main","QuestUpdate_RC_DF_TrollBridge_CompetitionRemoved");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_FL_GarethFarm","QuestUpdate_RC_FL_GarethFarm_CloseLeftRCHouse","RC_Main","RC_FL_Gareth_AfterJonathan");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_FL_GarethFarm","QuestUpdate_RC_FL_GarethFarm_CloseLeftRCJonathan","RC_Main","RC_FL_Gareth_AfterJonathan");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseLeftRCHens","RC_Main","QuestUpdate_RC_DW_VoidwokenChicks_BecameMama");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseLeftRCPet","RC_Main","QuestUpdate_RC_DW_VoidwokenChicks_BecameMama");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_DW_FunnyMeat","QuestUpdate_RC_DW_FunnyMeat_CloseLeftRCMurdererSecret","RC_Main","QuestUpdate_RC_DW_FunnyMeat_Cook_HasSrongEvidance");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_DW_FunnyMeat","QuestUpdate_RC_DW_FunnyMeat_CloseLeftRCMurdererAlive","RC_Main","QuestUpdate_RC_DW_FunnyMeat_Cook_HasSrongEvidance");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_GY_WronglyBuried","QuestUpdate_RC_GY_WronglyBuried_CloseLeftRCSecret","RC_Main","QuestUpdate_RC_GY_WronglyBuried_DugUpGrave");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_GY_WronglyBuried","QuestUpdate_RC_GY_WronglyBuried_CloseLeftRCPact","RC_Main","QuestUpdate_RC_GY_WronglyBuried_DugUpGrave");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_GY_LizardSpeakingLizard","QuestUpdate_RC_GY_LizardSpeakingLizard_CloseLeftRCSecret","RC_Main","QuestUpdate_RC_GY_LizardSpeakingLizard_Chest");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_GY_LizardSpeakingLizard","QuestUpdate_RC_GY_LizardSpeakingLizard_CloseLeftRCChest","RC_Main","QuestUpdate_RC_GY_LizardSpeakingLizard_Chest");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_FL_BrokenPromises","QuestUpdate_RC_FL_BrokenPromises_CloseLeftRCFarmlandsSecret","RC_Main","QuestUpdate_RC_FL_BrokenPromises_MetAlmira");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_FL_BrokenPromises","QuestUpdate_RC_FL_BrokenPromises_CloseLeftRCEscapeFarmlands","RC_Main","QuestUpdate_RC_FL_BrokenPromises_MetAlmira");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_BI_TheTruth","QuestUpdate_RC_BI_TheTruth_CloseLeftRCSecret","RC_Main","QuestUpdate_RC_BI_TheTruth_ArchiveKnown");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_BF_ThePresence","QuestUpdate_RC_BF_ThePresence_CloseLeftRCSecretIsland","RC_Main","QuestUpdate_RC_BF_ThePresence_GotTaskGetDemonsName");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_BF_ThePresence","QuestUpdate_RC_BF_ThePresence_CloseLeftRCNoJahanTask","RC_Main","QuestUpdate_RC_BF_ThePresence_GotTaskGetDemonsName");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag_TrueObjFlag("RC_OIL_ThirdHouse","QuestUpdate_RC_OIL_ThirdHouse_CloseLeftRCApprenticeOut","RC_Main","QuestUpdate_RC_OIL_ThirdHouse_FoundSourcerer","QuestUpdate_RC_OIL_ThirdHouse_SentHannag");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag_TrueObjFlag("RC_OIL_ThirdHouse","QuestUpdate_RC_OIL_ThirdHouse_CloseLeftRCApprenticeOut","RC_Main","QuestUpdate_RC_OIL_ThirdHouse_FoundSourcerer","QuestUpdate_RC_OIL_ThirdHouse_KnowSourcerer");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag_TrueObjFlag("RC_OIL_ThirdHouse","QuestUpdate_RC_OIL_ThirdHouse_CloseLeftRCFamilyOut","RC_Main","RC_OIL_ThirdHouse_Rescued","QuestUpdate_RC_OIL_ThirdHouse_FoundHouse");

//CLose FTJ_Seeker (with QuestUpdate_FTJ_Seeker_NoMeistr) at the end of RC if it is not closed before (should be close if Meistr Gen died OR went into Vault)
DB_QuestDef_CloseAtRegionEnded("FTJ_Seeker","QuestUpdate_FTJ_Seeker_NoMeistr","RC_Main");

//DOSTWO-21374:
DB_QuestDef_CloseAtRegionEnded("RC_OIL_Main","QuestUpdate_RC_OIL_Main_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_BI_Druid","QuestUpdate_RC_BI_Druid_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_BI_ThePresence","QuestUpdate_RC_BI_ThePresence_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_GY_RykersContract","QuestUpdate_RC_GY_RykersContract_CloseLeftRCNotMet","RC_Main","QuestUpdate_RC_GY_RykersContract_GotRykersQuest");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_GY_RykersContract","QuestUpdate_RC_GY_RykersContract_CloseLeftRCNoDeal","RC_Main","QuestUpdate_RC_GY_RykersContract_GotRykersQuest");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_DF_PolyLovers","QuestUpdate_RC_DF_PolyLovers_CloseLeftRCOneCow","RC_Main","QuestUpdate_RC_DF_PolyLovers_TrueCheck");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_DF_PolyLovers","QuestUpdate_RC_DF_PolyLovers_CloseLeftRCNoCow","RC_Main","QuestUpdate_RC_DF_PolyLovers_TrueCheck");
DB_QuestDef_CloseAtRegionEnded_Condition_TrueGlobalFlag("RC_DU_HeroicRescue","QuestUpdate_RC_DU_HeroicRescue_WifeSurvived","RC_Main","RC_DU_DrawBridge_VoidwokenAreDead");
DB_QuestDef_CloseAtRegionEnded_Condition_FalseGlobalFlag("RC_DU_HeroicRescue","QuestUpdate_RC_DU_HeroicRescue_WifeDied","RC_Main","RC_DU_DrawBridge_VoidwokenAreDead");

//DOSTWO-23204:
DB_QuestDef_CloseAtRegionEnded("RC_GY_KillRyker","QuestUpdate_RC_GY_KillRyker_CloseLeftRC","RC_Main");
DB_QuestDef_CloseAtRegionEnded("RC_GY_PurgedDaughter","QuestUpdate_RC_GY_PurgedDaughter_CloseLeftRC","RC_Main");

//ADDITION NEW JOURNAL - 3/14/18
DB_QuestDef_CloseAtRegionEnded("RC_DW_MissingEquipment","QuestUpdate_RC_DW_MissingEquipment_CloseLeftRC","RC_Main");

//END_REGION
//REGION COS
DB_QuestDef_CloseAtRegionEnded("CoS_OrcTemple","QuestUpdate_CoS_OrcTemple_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_GarethsRevenge","QuestUpdate_CoS_GarethsRevenge_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_TheWatcher","QuestUpdate_CoS_TheWatcher_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_HelpingTheSallowMan","QuestUpdate_CoS_HelpingTheSallowMan_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_CompanionCulling","QuestUpdate_CoS_CompanionCulling_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_HelpingAlexandar","QuestUpdate_CoS_HelpingAlexandar_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_SpyMaster","QuestUpdate_CoS_SpyMaster_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_MissingStudent","QuestUpdate_CoS_MissingStudent_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_ImpTemple","QuestUpdate_CoS_ImpTemple_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_ForbiddenLibrary","QuestUpdate_CoS_ForbiddenLibrary_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_BlackRing","QuestUpdate_CoS_BlackRing_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_WizardTemple","QuestUpdate_CoS_WizardTemple_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("FTJ_Hunted","QuestUpdate_FTJ_Hunted_CloseLeftCOS","CoS_Main_Ending");
//END_REGION
//REGION ARX

DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("CoS_BreakerForAlmira","QuestUpdate_CoS_BreakerForAlmira_CloseLeftArx","ARX_Main","QuestUpdate_CoS_BreakerForAlmira_GaveBreaker");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("CoS_BreakerForAlmira","QuestUpdate_CoS_BreakerForAlmira_CloseLeftArx","ARX_Main","QuestUpdate_CoS_BreakerForAlmira_GaveParts");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag_TrueObjFlag("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_CloseLeftArxWindego","ARX_Main","QuestUpdate_ARX_Prison_Windego_TalkedToWindego","QuestUpdate_ARX_Prison_Windego_EnteredTheRoom");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_CloseLeftARXSecret","ARX_Main","QuestUpdate_ARX_Prison_Windego_EnteredTheRoom");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag_TrueObjFlag("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_CloseLeftARXPrison","ARX_Main","QuestUpdate_ARX_Prison_Windego_PuzzleSolved","QuestUpdate_ARX_Prison_Windego_TalkedToWindego");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_CloseLeftArxWindego","ARX_Main","QuestUpdate_ARX_Prison_Windego_PuzzleSolved");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_BI_TheTruth","QuestUpdate_RC_BI_TheTruth_CloseLeftArxTree","ARX_Main","QuestUpdate_RC_BI_TheTruth_KilledDoctor");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("ARX_Neighborhood_HouseSchool","QuestUpdate_ARX_Neighborhood_HouseSchool_CloseLeftARXHomeless","ARX_Main","QuestUpdate_ARX_Neighborhood_HouseSchool_MetHobosInTheSchool");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("ARX_Prison_TheMistake","QuestUpdate_ARX_Prison_TheMistake_CloseLeftARXSecret","ARX_Main","QuestUpdate_ARX_Prison_TheMistake_SawTheMistake");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseGlobalFlag_TrueObjFlag("ARX_Neighborhood_HouseSchool","QuestUpdate_ARX_Neighborhood_HouseSchool_CloseLeftARXMother","ARX_Main","ARX_Neighborhood_HouseSchool_Squatters_ConvincedToLeave","QuestUpdate_ARX_Neighborhood_HouseSchool_MotherAskedHelp");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseGlobalFlag_TrueObjFlag("ARX_Prison_TheMistake","QuestUpdate_ARX_Prison_TheMistake_CloseLeftARXFree","ARX_Main","ARX_TheMistake_MistakeIsGone","QuestUpdate_ARX_Prison_TheMistake_SawTheMistake");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("ARX_DisappearanceOfArhu","QuestUpdate_ARX_DisappearanceOfArhu_CloseLeftARX","ARX_Main","QuestUpdate_ARX_DisappearanceOfArhu_ArhuPrison_FoundArhu");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseGlobalFlag_FalseObjFlag("ARX_LizardConsulate","QuestUpdate_ARX_LizardConsulate_CloseLeftARX","ARX_Main","ARX_HorrorSleep_Closed","QuestUpdate_ARX_LizardConsulate_ConsulateNoRP");
//DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_ARX_TheImperialDwarves","QuestUpdate_RC_ARX_TheImperialDwarves_CloseLeftARXDeathfog","ARX_Main","ARX_Sewers_TheQueen_KnowsQueenInSewers");
//DB_QuestDef_CloseAtRegionEnded_Conditions_FalseGlobalFlag_TrueObjFlag("RC_ARX_TheImperialDwarves","QuestUpdate_RC_ARX_TheImperialDwarves_CloseLeftARXDeathfog","ARX_Main","RC_ARX_Sewers_Q_IsDead","RC_ARX_Sewers_Q_PlayerArrested");

DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_ARX_TheImperialDwarves","QuestUpdate_RC_ARX_TheImperialDwarves_CloseLeftARXSewerSecret","ARX_Main","QuestUpdate_RC_ARX_TheImperialDwarves_Sewers_MetTheQueenWithQ");

DB_QuestDef_CloseAtRegionEnded("ARX_Barracks","QuestUpdate_ARX_Barracks_CloseLeftARX","ARX_Main");
DB_QuestDef_CloseAtRegionEnded("ARX_MissingPrisoners","QuestUpdate_ARX_MissingPrisoners_CloseLeftARX","ARX_Main");
DB_QuestDef_CloseAtRegionEnded("ARX_Cathedral_Dog","QuestUpdate_ARX_Cathedral_Dog_CloseLeftARX","ARX_Main");
DB_QuestDef_CloseAtRegionEnded("ARX_AntiqueTraders","QuestUpdate_ARX_AntiqueTraders_CloseLeftARX","ARX_Main");
DB_QuestDef_CloseAtRegionEnded("ARX_KemmVault","QuestUpdate_ARX_KemmVault_CloseLeftARX","ARX_Main");
DB_QuestDef_CloseAtRegionEnded("ARX_Neighborhood_TheFence","QuestUpdate_ARX_Neighborhood_TheFence_CloseLeftARX","ARX_Main");
DB_QuestDef_CloseAtRegionEnded("ARX_HuntingForDallis","QuestUpdate_ARX_HuntingForDallis_CryptEnd","ARX_Main");
DB_QuestDef_CloseAtRegionEnded("ARX_Outskirts_PossessedKid","QuestUpdate_ARX_Outskirts_PossessedKid_CloseLeftARX","ARX_Main");
//END_REGION


// Categories & rewards
//REGION SetCategories Entries

DB_RegionQuestCategory("FJ_FortJoy_Main","QCA_Chapter_02");
DB_RegionQuestCategory("LV_HoE_Main","QCA_Chapter_03");
DB_RegionQuestCategory("RC_Main","QCA_Chapter_04");
DB_RegionQuestCategory("COS_Main","QCA_Chapter_05");
DB_RegionQuestCategory("ARX_Main","QCA_Chapter_06");
DB_RegionQuestCategory("ARX_Endgame","QCA_Chapter_07");

DB_RegionQuestCategory_Swapped("RC_FTJ_SourceCollar");
DB_RegionQuestCategory_Swapped("FTJ_SW_CursedRing");
DB_RegionQuestCategory_Swapped("RC_WH_BottledWish");
DB_RegionQuestCategory_Swapped("RC_BI_TheTruth");
DB_RegionQuestCategory_Swapped("CoS_BreakerForAlmira");
DB_RegionQuestCategory_Swapped("FTJ_Godwoken");
DB_RegionQuestCategory_Swapped("FTJ_Hunted");
DB_RegionQuestCategory_Swapped("FTJ_SaheilaFate");
DB_RegionQuestCategory_Swapped("RC_ARX_TheImperialDwarves");
DB_RegionQuestCategory_Swapped("ARX_TheDoctor");
DB_RegionQuestCategory_Swapped("ARX_Prison_Windego");

//END_REGION
//REGION QuestReward

// FTJ
DB_QuestDef_QuestReward("FTJ_Arena","QuestReward","QuestUpdate_FTJ_Arena_QuestReward");
DB_QuestDef_QuestReward("FTJ_Escape","QuestReward","QuestUpdate_FTJ_Escape_QuestReward");
DB_QuestDef_QuestReward("FTJ_Elodi","QuestReward","QuestUpdate_FTJ_Elodi_QuestReward");
DB_QuestDef_QuestReward("RC_FTJ_OlgoSaheila","QuestReward","QuestUpdate_RC_FTJ_OlgoSaheila_QuestReward");
DB_QuestDef_QuestReward("RC_FTJ_MurderousGheist","QuestReward","QuestUpdate_RC_FTJ_MurderousGheist_QuestReward");
DB_QuestDef_QuestReward("FTJ_SW_Illusionist","QuestReward","QuestUpdate_FTJ_SW_Illusionist_QuestReward");
DB_QuestDef_QuestReward("FTJ_SW_UndeadTowerMaze","QuestReward01","QuestUpdate_FTJ_SW_UndeadTowerMaze_QuestReward01");
DB_QuestDef_QuestReward("FTJ_SW_UndeadTowerMaze","QuestReward02","QuestUpdate_FTJ_SW_UndeadTowerMaze_QuestReward02");
DB_QuestDef_QuestReward("FTJ_SW_UndeadTowerMaze","QuestReward03","QuestUpdate_FTJ_SW_UndeadTowerMaze_QuestReward03");
DB_QuestDef_QuestReward("FTJ_SW_BatteredAndCornered","QuestReward","QuestUpdate_FTJ_SW_BatteredAndCornered_QuestReward");
DB_QuestDef_QuestReward("FTJ_SW_StuckHaunting","QuestReward","QuestUpdate_FTJ_SW_StuckHaunting_QuestReward");
DB_QuestDef_QuestReward("FTJ_SW_HurtSeekers","QuestReward","QuestUpdate_FTJ_SW_HurtSeekers_QuestReward");
DB_QuestDef_QuestReward("FTJ_SW_PurgedDragon","QuestReward","QuestUpdate_FTJ_SW_PurgedDragon_QuestReward");
DB_QuestDef_QuestReward("FTJ_SW_CursedPig","QuestReward","QuestUpdate_FTJ_SW_CursedPig_QuestReward");


// RC
DB_QuestDef_QuestReward("RC_DW_Meistr","QuestReward","QuestUpdate_RC_DW_Meistr_QuestReward");
DB_QuestDef_QuestReward("RC_DU_HeroicRescue","QuestReward","QuestUpdate_RC_DU_HeroicRescue_QuestReward");
//DB_QuestDef_QuestReward("RC_DW_WreckedCaravan","QuestReward01","QuestUpdate_RC_DW_WreckedCaravan_QuestReward01"); //DOSTWO-21279
//DB_QuestDef_QuestReward("RC_DW_WreckedCaravan","QuestReward02","QuestUpdate_RC_DW_WreckedCaravan_QuestReward02"); //DOSTWO-21279
DB_QuestDef_QuestReward("RC_DW_VoidwokenChicks","QuestReward","QuestUpdate_RC_DW_VoidwokenChicks_QuestReward");
DB_QuestDef_QuestReward("RC_WC_TheDeadTrader","QuestReward","QuestUpdate_RC_WC_TheDeadTrader_QuestReward");
DB_QuestDef_QuestReward("RC_DW_GarvanSupplies","QuestReward","QuestUpdate_RC_DW_GarvanSupplies_QuestReward");
DB_QuestDef_QuestReward("RC_DW_TheDrunkenSailor","QuestReward","QuestUpdate_RC_DW_TheDrunkenSailor_QuestReward");
DB_QuestDef_QuestReward("RC_DW_Arena","QuestReward","QuestUpdate_RC_DW_Arena_QuestReward");
DB_QuestDef_QuestReward("RC_DW_FunnyMeat","QuestReward01","QuestUpdate_RC_DW_FunnyMeat_QuestReward01");
DB_QuestDef_QuestReward("RC_DW_FunnyMeat","QuestReward02","QuestUpdate_RC_DW_FunnyMeat_QuestReward02");
DB_QuestDef_QuestReward("RC_DW_Dock_Kids","QuestReward","QuestUpdate_RC_DW_Dock_Kids_QuestReward");
DB_QuestDef_QuestReward("RC_DW_HidingTinkerer","QuestReward","QuestUpdate_RC_DW_HidingTinkerer_QuestReward");
DB_QuestDef_QuestReward("RC_DW_FishScholar","QuestReward","QuestUpdate_RC_DW_FishScholar_QuestReward");
DB_QuestDef_QuestReward("RC_DW_ShadowOverDriftwood","QuestReward","QuestUpdate_RC_DW_ShadowOverDriftwood_QuestReward");
DB_QuestDef_QuestReward("RC_DW_DwarvenCriminals","QuestReward01","QuestUpdate_RC_DW_DwarvenCriminals_QuestReward01");
DB_QuestDef_QuestReward("RC_DW_DwarvenCriminals","QuestReward02","QuestUpdate_RC_DW_DwarvenCriminals_QuestReward02");
DB_QuestDef_QuestReward("RC_WH_SeaGodStatue","QuestReward","QuestUpdate_RC_WH_SeaGodStatue_QuestReward");
DB_QuestDef_QuestReward("RC_DF_TrollBridge","QuestReward","QuestUpdate_RC_DF_TrollBridge_QuestReward");
DB_QuestDef_QuestReward("RC_MIL_ElvenBurial","QuestReward01","QuestUpdate_RC_MIL_ElvenBurial_QuestReward01");
DB_QuestDef_QuestReward("RC_MIL_ElvenBurial","QuestReward02","QuestUpdate_RC_MIL_ElvenBurial_QuestReward02");
DB_QuestDef_QuestReward("RC_MIL_GhostLog","QuestReward","QuestUpdate_RC_MIL_GhostLog_QuestReward");
DB_QuestDef_QuestReward("RC_MIL_AvengingSaheila","QuestReward","QuestUpdate_RC_MIL_AvengingSaheila_QuestReward");
DB_QuestDef_QuestReward("RC_MIL_RescuingSaheila","QuestReward","QuestUpdate_RC_MIL_RescuingSaheila_QuestReward");
DB_QuestDef_QuestReward("RC_GY_RykersContract","QuestReward","QuestUpdate_RC_GY_RykersContract_QuestReward");
DB_QuestDef_QuestReward("RC_GY_BuriedLizard","QuestReward","QuestUpdate_RC_GY_BuriedLizard_QuestReward");
DB_QuestDef_QuestReward("RC_GY_PurgedDaughter","QuestReward","QuestUpdate_RC_GY_PurgedDaughter_QuestReward");
DB_QuestDef_QuestReward("RC_GY_KillRyker","QuestReward","QuestUpdate_RC_GY_KillRyker_QuestReward");
DB_QuestDef_QuestReward("RC_GY_Godslayer","QuestReward","QuestUpdate_RC_GY_Godslayer_QuestReward");
DB_QuestDef_QuestReward("RC_DF_UndeadTrader","QuestReward","QuestUpdate_RC_DF_UndeadTrader_QuestReward");
DB_QuestDef_QuestReward("RC_BF_CorneredSourcerer","QuestReward01","QuestUpdate_RC_BF_CorneredSourcerer_QuestReward01");
DB_QuestDef_QuestReward("RC_BF_CorneredSourcerer","QuestReward02","QuestUpdate_RC_BF_CorneredSourcerer_QuestReward02");
DB_QuestDef_QuestReward("RC_BF_ThePresence","QuestReward","QuestUpdate_RC_BF_ThePresence_QuestReward");
DB_QuestDef_QuestReward("RC_OIL_ThirdHouse","QuestReward01","QuestUpdate_RC_OIL_ThirdHouse_QuestReward01");
DB_QuestDef_QuestReward("RC_OIL_ThirdHouse","QuestReward02","QuestUpdate_RC_OIL_ThirdHouse_QuestReward02");
DB_QuestDef_QuestReward("RC_FL_Garethparents","QuestReward","QuestUpdate_RC_FL_Garethparents_QuestReward");
DB_QuestDef_QuestReward("RC_FL_GarethFarm","QuestReward","QuestUpdate_RC_FL_GarethFarm_QuestReward");
DB_QuestDef_QuestReward("RC_FL_BrokenPromises","QuestReward","QuestUpdate_RC_FL_BrokenPromises_QuestReward");
DB_QuestDef_QuestReward("RC_BI_ThePresence","QuestReward","QuestUpdate_RC_BI_ThePresence_QuestReward");
DB_QuestDef_QuestReward("RC_BI_TheTruth","QuestReward","QuestUpdate_RC_BI_TheTruth_QuestReward");
DB_QuestDef_QuestReward("RC_BI_TheVaultGodwoken","QuestReward","QuestUpdate_RC_BI_TheVaultGodwoken_QuestReward");
DB_QuestDef_QuestReward("RC_BI_TheVaultKid","QuestReward","QuestUpdate_RC_BI_TheVaultKid_QuestReward");
DB_QuestDef_QuestReward("RC_BI_TheVaultAdventurer","QuestReward","QuestUpdate_RC_BI_TheVaultAdventurer_QuestReward");
/*DB_QuestDef_QuestReward("RC_MIL_SyrusOates","QuestReward","QuestUpdate_RC_MIL_SyrusOates_GotReward");
DB_QuestDef_QuestReward("RC_MIL_BlackWidowMaker","QuestReward","QuestUpdate_RC_MIL_BlackWidowMaker_GotReward");
DB_QuestDef_QuestReward("RC_MIL_EdieEngrym","QuestReward","QuestUpdate_RC_MIL_EdieEngrym_GotReward");
DB_QuestDef_QuestReward("RC_MIL_Mudbarrow","QuestReward","QuestUpdate_RC_MIL_Mudbarrow_GotReward");
DB_QuestDef_QuestReward("RC_MIL_SavingCorbin","QuestReward","QuestUpdate_RC_MIL_SavingCorbin_CorbinShip");*/


// COS
DB_QuestDef_QuestReward("CoS_BreakerForAlmira","QuestReward","QuestUpdate_CoS_BreakerForAlmira_QuestReward");
DB_QuestDef_QuestReward("CoS_GarethsRevenge","QuestReward","QuestUpdate_CoS_GarethsRevenge_QuestReward");
DB_QuestDef_QuestReward("CoS_TheWatcher","QuestReward","QuestUpdate_CoS_TheWatcher_QuestReward");
DB_QuestDef_QuestReward("CoS_CompanionCulling","QuestReward","QuestUpdate_CoS_CompanionCulling_QuestReward");
DB_QuestDef_QuestReward("CoS_HelpingAlexandar","QuestReward","QuestUpdate_CoS_HelpingAlexandar_QuestReward");
DB_QuestDef_QuestReward("CoS_SpyMaster","QuestReward","QuestUpdate_CoS_SpyMaster_QuestReward");
DB_QuestDef_QuestReward("CoS_MissingStudent","QuestReward","QuestUpdate_CoS_MissingStudent_QuestReward");
DB_QuestDef_QuestReward("CoS_ForbiddenLibrary","QuestReward","QuestUpdate_CoS_ArenaOfTheOne_QuestReward");
DB_QuestDef_QuestReward("CoS_ImpTemple","QuestReward","QuestUpdate_CoS_ImpTemple_QuestReward");

//ARX
DB_QuestDef_QuestReward("ARX_TheWeakening","QuestReward","QuestUpdate_ARX_TheWeakening_QuestReward");
DB_QuestDef_QuestReward("ARX_Barracks","Clanwars_QuestReward","QuestUpdate_ARX_Barracks_Clanwars_QuestReward");
DB_QuestDef_QuestReward("ARX_Barracks","Execution_QuestReward","QuestUpdate_ARX_Barracks_Execution_QuestReward");
DB_QuestDef_QuestReward("ARX_Barracks","QuestReward01","QuestUpdate_ARX_Barracks_QuestReward01");
DB_QuestDef_QuestReward("ARX_Barracks","QuestReward02","QuestUpdate_ARX_Barracks_QuestReward02");
DB_QuestDef_QuestReward("ARX_MissingPrisoners","QuestReward","QuestUpdate_ARX_MissingPrisoners_QuestReward");
DB_QuestDef_QuestReward("ARX_Prison_Windego","QuestReward","QuestUpdate_ARX_Prison_Windego_QuestReward");
DB_QuestDef_QuestReward("ARX_Prison_Windego","QuestReward_Skill","ARX_Prison_Windego_GiveReward_Skill");
DB_QuestDef_QuestReward("RC_ARX_TheImperialDwarves","QuestReward","QuestUpdate_RC_ARX_TheImperialDwarves_QuestReward");
DB_QuestDef_QuestReward("ARX_AntiqueTraders","QuestReward","QuestUpdate_ARX_AntiqueTraders_QuestReward");
DB_QuestDef_QuestReward("ARX_KemmVault","QuestReward","QuestUpdate_ARX_KemmVault_QuestReward");
DB_QuestDef_QuestReward("ARX_TheDoctor","QuestReward","QuestUpdate_ARX_TheDoctor_QuestReward");
DB_QuestDef_QuestReward("ARX_Neighborhood_HouseSchool","QuestReward","QuestUpdate_ARX_Neighborhood_HouseSchool_QuestReward");
DB_QuestDef_QuestReward("ARX_LizardConsulate","QuestReward","QuestUpdate_ARX_LizardConsulate_QuestReward");
DB_QuestDef_QuestReward("RC_ARX_TheImperialDwarves","Ros_SaveTheQueen_Reward","QuestUpdate_RC_ARX_TheImperialDwarves_Ros_SaveTheQueen_Reward");
DB_QuestDef_QuestReward("ARX_LizardConsulate","QuestReward_BridgeLizard","QuestUpdate_ARX_LizardConsulate_QuestReward_BridgeLizard");
DB_QuestDef_QuestReward("ARX_LizardConsulate","QuestReward_PaladinOutside","QuestUpdate_ARX_LizardConsulate_QuestReward_PaladinOutside");
DB_QuestDef_QuestReward("ARX_Prison_TheMistake","QuestReward_Gareth","QuestUpdate_ARX_Prison_TheMistake_QuestReward_Gareth");

DB_QuestDef_QuestReward("ARX_MerchantEstate_Wetwork","QuestReward_Extra","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestReward_Extra");
DB_QuestDef_QuestReward("ARX_MerchantEstate_Wetwork","QuestReward","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestReward");

//END_REGION
KBSECTION
//REGION Debug
IF
TextEventSet("fulljournal")
THEN
DB_CheckLevelStart("ARX_Main");
DB_CurrentLevel("ARX_Main");
DB_CheckLevelStart("CoS_Main_Ending");
DB_CurrentLevel("CoS_Main_Ending");
DB_CheckLevelStart("CoS_Main");
DB_CurrentLevel("CoS_Main");
DB_CheckLevelStart("ARX_EndGame");
DB_CurrentLevel("ARX_EndGame");
DB_CheckLevelStart("FJ_FortJoy_Main");
DB_CurrentLevel("FJ_FortJoy_Main");
DB_CheckLevelStart("RC_Main");
DB_CurrentLevel("RC_Main");
DB_CheckLevelStart("TUT_Tutorial_A");
DB_CurrentLevel("TUT_Tutorial_A");

IF
TextEventSet("fulljournal")
AND
CharacterGetHostCharacter(_Player)
AND
DB_QuestDef_State(_Quest,_Update)
THEN
QuestAdd(_Player,_Quest);
QuestUpdate(_Player,_Quest,_Update);

IF
TextEventSet("fulljournal")
AND
CharacterGetHostCharacter(_Player)
AND
DB_QuestDef_UpdateEvent(_Quest,_Update,_)
THEN
QuestAdd(_Player,_Quest);
QuestUpdate(_Player,_Quest,_Update);


IF
TextEventSet("partjournal")
THEN
DB_CheckLevelStart("ARX_Main");
DB_CurrentLevel("ARX_Main");
DB_CheckLevelStart("CoS_Main_Ending");
DB_CurrentLevel("CoS_Main_Ending");
DB_CheckLevelStart("CoS_Main");
DB_CurrentLevel("CoS_Main");
DB_CheckLevelStart("ARX_EndGame");
DB_CurrentLevel("ARX_EndGame");
DB_CheckLevelStart("FJ_FortJoy_Main");
DB_CurrentLevel("FJ_FortJoy_Main");
DB_CheckLevelStart("RC_Main");
DB_CurrentLevel("RC_Main");
DB_CheckLevelStart("TUT_Tutorial_A");
DB_CurrentLevel("TUT_Tutorial_A");

IF
TextEventSet("partjournal")
AND
CharacterGetHostCharacter(_Player)
AND
GetTextEventParamString(1,_Param)
AND
DB_QuestDef_State(_Quest,_Update)
AND
StringContains(_Quest,_Param,1)
THEN
QuestAdd(_Player,_Quest);
QuestUpdate(_Player,_Quest,_Update);

IF
TextEventSet("singlejournal")
THEN
DB_CheckLevelStart("ARX_Main");
DB_CurrentLevel("ARX_Main");
DB_CheckLevelStart("CoS_Main_Ending");
DB_CurrentLevel("CoS_Main_Ending");
DB_CheckLevelStart("CoS_Main");
DB_CurrentLevel("CoS_Main");
DB_CheckLevelStart("ARX_EndGame");
DB_CurrentLevel("ARX_EndGame");
DB_CheckLevelStart("FJ_FortJoy_Main");
DB_CurrentLevel("FJ_FortJoy_Main");
DB_CheckLevelStart("RC_Main");
DB_CurrentLevel("RC_Main");
DB_CheckLevelStart("TUT_Tutorial_A");
DB_CurrentLevel("TUT_Tutorial_A");

IF
TextEventSet("singlejournal")
AND
CharacterGetHostCharacter(_Player)
AND
GetTextEventParamString(1,_Param)
AND
GetTextEventParamString(2,_Param2)
AND
DB_QuestDef_State(_Param,_Param2)
THEN
QuestAdd(_Player,_Param);
QuestUpdate(_Player,_Param,_Param2);


IF
TextEventSet("swappedjournal")
AND
CharacterGetHostCharacter(_Player)
AND
DB_RegionQuestCategory_Swapped(_Quest)
AND
DB_QuestDef_State(_Quest,_Update,1)
THEN
QuestAdd(_Player,_Quest);
QuestUpdate(_Player,_Quest,_Update);


IF
TextEventSet("swappedjournal")
AND
CharacterGetHostCharacter(_Player)
AND
DB_RegionQuestCategory_Swapped(_Quest)
AND
DB_QuestDef_AddEvent(_Quest,_Update)
THEN
QuestAdd(_Player,_Quest);
QuestUpdate(_Player,_Quest,_Update);

//END_REGION

//REGION PATCH - Preview build
IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
THEN
PROC_JournalEntries_ClearQuestUpdateEvent("RC_DW_DwarvenCriminals","SmugglingCacheFound","QuestUpdate_RC_DW_TaintedSmuggling_SmugglingCacheFound");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SmugglingFoundBeforeMagister_MainStartFallback","QuestUpdate_RC_DW_DwarvenCriminals_SmugglingFoundBeforeMagister_MainStartFallback");
DB_QuestDef_AddEvent("RC_DW_DwarvenCriminals","QuestUpdate_RC_DW_DwarvenCriminals_SmugglingFoundBeforeMagister_MainStartFallback");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SmugglingCacheFound","QuestUpdate_RC_DW_TaintedSmuggling_SmugglingCacheFoundAfterJulian");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SmugglingCacheFoundBeforeJulian","QuestUpdate_RC_DW_TaintedSmuggling_SmugglingCacheFoundBeforeJulian");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","SmugglingCacheReportToMagister","QuestUpdate_RC_DW_TaintedSmuggling_SmugglingCacheReportToMagister");
DB_QuestDef_CloseEvent("RC_DW_DwarvenCriminals_SUB_RottenGoods", "QuestUpdate_RC_DW_TaintedSmuggling_SmugglingToldMagister");
Proc_Journal_RC_DW_WreckedCaravan_SetUp();
Proc_Journal_RC_DW_Meistr_SetUp();
PROC_JournalEntries_ClearQuestState("FTJ_OriginBeast","LostHat");
PROC_JournalEntries_ClearQuestState("FTJ_OriginBeast","GotHat");
PROC_JournalEntries_ClearQuestState("FTJ_OriginBeast","KnowIsbeil");
PROC_JournalEntries_ClearQuestState("FTJ_OriginBeast","DunaHat");
PROC_JournalEntries_ClearQuestUpdateEvent("FTJ_OriginBeast","Start_BoatWakeup2", "QuestUpdate_FTJ_OriginBeast_Start_BoatWakeup");
PROC_JournalEntries_ClearQuestState("FTJ_OriginBeast","ShipmeantDeathFog");
DB_QuestDef_State("FTJ_OriginBeast","ShipmentDeathFog");
DB_QuestDef_State("FTJ_OriginBeast","Act2b_Start_NoLeads");
DB_AvatarUpdateRegionStart("BEAST","QuestUpdate_FTJ_OriginBeast_Act2b_Start_NoLeads","CoS_Main");
PROC_JournalEntries_ClearQuestState("FTJ_COM_Beast","FoughtDivineOrder");
PROC_JournalEntries_ClearQuestState("FTJ_COM_Beast","GotHat");
PROC_JournalEntries_ClearQuestState("FTJ_COM_Beast","DNOTSLove");
PROC_JournalEntries_ClearQuestState("FTJ_COM_Beast","DNOTSNotLove");
DB_QuestDef_State("FTJ_COM_Beast","Act2b_Start_NoLeads");
DB_CompanionUpdateRegionStart("BEAST","QuestUpdate_FTJ_COM_Beast_Act2b_Start_NoLeads","CoS_Main");
DB_QuestDef_State("FTJ_OriginBeast","CaravanLohar");
DB_QuestDef_State("FTJ_COM_Beast","CaravanLohar");
DB_QuestDef_State("FTJ_OriginBeast","Act3Start");
DB_QuestDef_State("FTJ_OriginBeast","Act3StartLoharUnfinished");
DB_QuestDef_State("FTJ_OriginBeast","KnowSewers");
DB_QuestDef_UpdateEvent("FTJ_OriginBeast","KnowSewers", "QuestUpdate_RC_ARX_TheImperialDwarves_Ros_PathToQueen");
DB_QuestDef_State("FTJ_COM_Beast","KnowSewers");
DB_QuestDef_UpdateEvent("FTJ_COM_Beast","KnowSewers", "QuestUpdate_RC_ARX_TheImperialDwarves_Ros_PathToQueen");
PROC_JournalEntries_ClearQuestState("FTJ_COM_Beast","KnowIsbeil");
DB_QuestDef_State("FTJ_COM_Beast","IsbeilBR");
PROC_JournalEntries_ClearQuestState("FTJ_OriginFane","LeftLich");
PROC_JournalEntries_ClearQuestState("FTJ_OriginFane","FreedLich");
PROC_JournalEntries_ClearQuestState("FTJ_OriginFane","MetGratiana_NotUndead");
DB_QuestDef_State("FTJ_OriginFane","MetGratiana");
DB_QuestDef_State("FTJ_OriginFane","LearnNameless");
DB_QuestDef_State("FTJ_OriginFane","StartedArenaOne");
PROC_JournalEntries_ClearQuestState("FTJ_COM_Fane","DNOTSLove");
PROC_JournalEntries_ClearQuestState("FTJ_COM_Fane","DNOTSNotLove");
DB_QuestDef_State("FTJ_COM_Fane","FoundEternalRelics");
DB_QuestDef_UpdateEvent("ARX_KemmVault","WindegoToldAboutKemm", "ARX_KnowsAboutKemmEighth");
DB_QuestDef_UpdateEvent("ARX_KemmVault","WindegoMentionedSwornBreaker", "ARX_Prison_Windego_Mentioned_SwornBreaker");
PROC_JournalEntries_ClearQuestState("RC_DW_ShadowOverDriftwood","AcceptedSP");
PROC_JournalEntries_ClearQuestState("RC_DW_ShadowOverDriftwood","DeclinedSP");
PROC_JournalEntries_ClearQuestState("RC_GY_RykersContract","AcceptedSP");
PROC_JournalEntries_ClearQuestState("RC_GY_RykersContract","DeclinedSP");
PROC_JournalEntries_ClearQuestState("RC_FL_BrokenPromises","AcceptedSP");
PROC_JournalEntries_ClearQuestState("RC_FL_BrokenPromises","DeclinedSP");
PROC_JournalEntries_ClearQuestState("RC_BF_ThePresence","AcceptedSP");
PROC_JournalEntries_ClearQuestState("RC_BF_ThePresence","DeclinedSP");
PROC_JournalEntries_ClearQuestState("RC_BI_ThePresence","AcceptedSP");
PROC_JournalEntries_ClearQuestState("RC_BI_ThePresence","DeclinedSP");
DB_SeenDeadNPCPartyFlag(CHARACTERGUID_S_RC_MIL_Roost_6fffadfe-b2a8-4e12-a664-ba84c0b0a3a3,"QuestUpdate_FTJ_Ifan_DarkFaction_RoostDead");
DB_SeenDeadNPCPartyFlag(CHARACTERGUID_S_RC_MIL_Roost_6fffadfe-b2a8-4e12-a664-ba84c0b0a3a3,"QuestUpdate_FTJ_COM_Ifan_RoostDead");
NOT DB_QuestDef_UpdateEvent("FTJ_Godwoken","Close","QuestUpdate_FTJ_Godwoken_DivinityAccept_End1");
NOT DB_QuestDef_UpdateEvent("FTJ_Godwoken","Close","QuestUpdate_FTJ_Godwoken_DivinityAccept_End2");
NOT DB_QuestDef_UpdateEvent("FTJ_Godwoken","Close","QuestUpdate_FTJ_Godwoken_DivinityAccept_End3");
NOT DB_QuestDef_UpdateEvent("FTJ_Godwoken","Close","QuestUpdate_FTJ_Godwoken_DivinityAccept_End4");
NOT DB_QuestDef_UpdateEvent("FTJ_Godwoken","Close","QuestUpdate_FTJ_Godwoken_DivinityAccept_End5");
NOT DB_QuestDef_UpdateEvent("FTJ_Godwoken","Close","FTJ_Godwoken_DivinityFail");
PROC_JournalEntries_ClearQuestState("RC_DW_VoidwokenChicks","KnowsWhatHappened");
PROC_JournalEntries_ClearQuestState("RC_OIL_Main","SpeakAeteran");
PROC_JournalEntries_ClearQuestState("RC_OIL_Main","SpeakAeteranDallis");
PROC_JournalEntries_ClearQuestState("RC_OIL_Main","EternalKilled");
DB_QuestDef_State("RC_OIL_Main","SpeakAeteran");
DB_QuestDef_State("RC_OIL_Main","SpeakAeteranDallis");
DB_QuestDef_State("RC_OIL_Main","EternalKilled",-1);
DB_QuestDef_State("ARX_HuntingForDallis","GetScrollArhu");
DB_QuestDef_CloseEvent("RC_DU_HeroicRescue","QuestUpdate_RC_DU_HeroicRescue_WifeSurvived");
NOT DB_QuestDef_CloseEvent("RC_DU_HeroicRescue","QuestUpdate_RC_DU_HeroicRescue_MariLowBridge");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_DW_DwarvenCriminals","LoharHint","QuestUpdate_RC_DW_ShadowOverDriftwood_CargoHint");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_DW_DwarvenCriminals","LoharProblem","QuestUpdate_RC_DW_ShadowOverDriftwood_AbandonedHouse_Start");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_DW_DwarvenCriminals","LoharProblem","QuestUpdate_RC_DW_CoverTheTracks_AbandonedHouse_Start");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_DW_DwarvenCriminals","KnowDeathfog","QuestUpdate_RC_DW_WC_AtaraxianLair_KnowAboutDeathFogInCave");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_DW_DwarvenCriminals","KnowDeathfog","RC_DW_WC_AskedMordusAboutDeathFogWeapons");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","LoharHint","QuestUpdate_RC_DW_DwarvenCriminals_CargoHint");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","LoharProblem","QuestUpdate_RC_DW_DwarvenCrminals_LoharProblem");
DB_QuestDef_UpdateEvent("RC_DW_DwarvenCriminals","KnowDeathfog","QuestUpdate_RC_DW_DwarvenCriminals_KnowDeathfog");
NOT DB_QuestDef_CloseAtRegionEnded_Condition_TrueGlobalFlag("RC_GY_Godslayer","QuestUpdate_RC_GY_Godslayer_NoPartsLeftRC","RC_Main","RC_GY_NecromancerToLV");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_GY_Godslayer","QuestUpdate_RC_GY_Godslayer_NoPartsLeftRC","RC_Main","QuestUpdate_RC_GY_Godslayer_GaveParts");
NOT DB_QuestDef_CloseEvent("ARX_HuntingForDallis_SUBB","QuestUpdate_ARX_HuntingForDallis_FailPoB");
NOT DB_QuestDef_CloseEvent("RC_BF_ThePresence","QuestUpdate_RC_BF_ThePresence_WithholdDemonsName");
// Drunken Sailor
DB_QuestDef_State("RC_DW_TheDrunkenSailor","FoundCompass",-1);
DB_QuestDef_State("RC_DW_TheDrunkenSailor","CompassGone",-1);
DB_QuestDef_State("ARX_LizardConsulate","KilledAllInfernalLizards_Reported");
// Voidwoken Chick
DB_QuestDef_State("RC_DW_VoidwokenChicks","CloseLeftRCPet",-1);
NOT DB_QuestDef_CloseAtRegionEnded("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseLeftRCHens","RC_Main");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseLeftRCHens","RC_Main","QuestUpdate_RC_DW_VoidwokenChicks_BecameMama");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_DW_VoidwokenChicks","QuestUpdate_RC_DW_VoidwokenChicks_CloseLeftRCPet","RC_Main","QuestUpdate_RC_DW_VoidwokenChicks_BecameMama");
DB_QuestDef_State("RC_MIL_SavingCorbin","LWDead");
DB_QuestDef_State("RC_OIL_FourthHouse","EnterCellar");
NOT DB_QuestDef_State("RC_DW_FunnyMeat","HarrickGhost_Lead");
DB_QuestDef_State("RC_DW_FunnyMeat","HarrickGhost_Lead",1);
NOT DB_QuestDef_CloseEvent("RC_FL_BrokenPromises","QuestUpdate_RC_FL_BrokenPromises_MihalyDied");
NOT DB_QuestDef_CloseEvent("CoS_CompanionCulling","QuestUpdate_CoS_CompanionCulling_Fail_SallowManDead");
DB_QuestDef_CloseEvent("CoS_CompanionCulling","CoS_SallowManIsDeadQuestUpdater");
PROC_JournalEntries_ClearQuestUpdateEvent("FTJ_Ifan_DarkFaction", "HannagLetter", "QuestUpdate_RC_DW_ShadowOverDriftwood_HannagLetter");
PROC_JournalEntries_ClearQuestUpdateEvent("FTJ_COM_Ifan", "HannagLetter", "QuestUpdate_RC_DW_ShadowOverDriftwood_HannagLetter");
PROC_JournalEntries_ClearQuestState("FTJ_Ifan_DarkFaction","HannagLetter");
PROC_JournalEntries_ClearQuestState("FTJ_COM_Ifan","HannagLetter");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_CloseLeftARXPrison","ARX_Main","QuestUpdate_ARX_Prison_Windego_PuzzleSolved");
DB_QuestDef_State("RC_GY_BuriedLizard","SuckedLizard",-1); //QuestUpdate_RC_GY_BuriedLizard_SuckedLizard
DB_QuestDef_State("RC_GY_BuriedLizard","LizardPoof",-1);
DB_QuestDef_State("RC_GY_BuriedLizard","LizardDestroyed",-1);
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","DestroyedPillarsAdventurer","QuestUpdate_RC_BI_TheVaultAdventurer_DestroyedPillars");
DB_QuestDef_UpdateEvent("RC_BI_TheVaults","DemonAppear","QuestUpdate_RC_BI_TheVaultAdventurer_DemonAppear");
DB_QuestDef_State("ARX_LizardConsulate","HorrorSleepSunset_BringRP");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_CompleteEmpire");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_CompleteEmpire");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag_TrueObjFlag("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_CloseLeftArxWindego","ARX_Main","QuestUpdate_ARX_Prison_Windego_TalkedToWindego","QuestUpdate_ARX_Prison_Windego_EnteredTheRoom");
NOT DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag_TrueObjFlag("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_CloseLeftArxWindego","ARX_Main","QuestUpdate_ARX_Prison_Windego_TalkedToWindego","QuestUpdate_ARX_Prison_Windego_COS_Letter");
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","PriestIsDead");
DB_QuestDef_State("ARX_TheWeakening","RoomA_Reached");						
DB_QuestDef_State("ARX_TheWeakening","RoomB_Reached");	
DB_QuestDef_State("RC_DW_Meistr","SaheilaTeacher_Hasmet");
DB_QuestDef_State("RC_DW_Meistr","SaheilaTeacher_Lohar");
DB_QuestDef_State("RC_DW_Meistr","SaheilaTeacher_Lohar_Hasmet");					

//END_REGION

//REGION PATCH - Full release

IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
THEN
DB_QuestDef_State("RC_DW_Meistr","Hannag_MaxedSP");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBD", "QuestUpdate_RC_DW_Meistr_Hannag_MaxedSP");
PROC_JournalEntries_ClearQuestState("ARX_LizardConsulate","BridgeCathedral_Start");
DB_QuestDef_AddEvent("ARX_LizardConsulate","QuestUpdate_ARX_LizardConsulate_BridgeCathedral_Start");
DB_QuestDef_UpdateEvent("ARX_LizardConsulate","VoidwokenAttacked","QuestUpdate_ARX_LizardConsulate_BridgeCathedral_Start");
DB_QuestDef_State("ARX_HuntingForDallis","DeathRoomWarningDelay");
PROC_JournalEntries_ClearQuestState("ARX_Neighborhood_HouseSchool","ToldMotherPriestLeft");
DB_QuestDef_State("ARX_Neighborhood_HouseSchool","ToldMotherPriestLeft");
DB_QuestDef_State("ARX_HuntingForDallis","KemmLeftBarracks_Unresolved");
DB_QuestDef_State("ARX_Barracks","KemmLeftBarracks_Unresolved");

PROC_JournalEntries_ClearQuestState("ARX_HuntingForDallis","ArhuLetterDivineOrder");
DB_QuestDef_State("ARX_DisappearanceOfArhu","ArhuLetterDivineOrder");
PROC_JournalEntries_ClearQuestState("ARX_HuntingForDallis","LetterKemmCrypt"); 
PROC_JournalEntries_ClearQuestUpdateEvent("ARX_HuntingForDallis","ArhuIsMissing","QuestUpdate_ARX_DisappearanceOfArhu_ArhuIsMissing");
NOT DB_QuestDef_CloseAtRegionEnded_Conditions_FalseGlobalFlag_TrueObjFlag("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_CloseLeftARXFree","ARX_Main","ARX_Prison_WindegoCell_PuzzleSolved","QuestUpdate_ARX_Prison_Windego_EnteredTheRoom");
NOT DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_CloseLeftARXPrison","ARX_Main","QuestUpdate_ARX_Prison_Windego_PuzzleSolved");
NOT DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_CloseLeftARXPrison","ARX_Main","QuestUpdate_ARX_Prison_Windego_PuzzleSolved");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag_FalseObjFlag("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_CloseLeftARXPrison","ARX_Main","QuestUpdate_ARX_Prison_Windego_PuzzleSolved","QuestUpdate_ARX_Prison_Windego_TalkedToWindego");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag_TrueObjFlag("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_CloseLeftARXPrison","ARX_Main","QuestUpdate_ARX_Prison_Windego_PuzzleSolved","QuestUpdate_ARX_Prison_Windego_TalkedToWindego");
DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("ARX_Prison_Windego","QuestUpdate_ARX_Prison_Windego_CloseLeftArxWindego","ARX_Main","QuestUpdate_ARX_Prison_Windego_PuzzleSolved");
DB_QuestDef_UpdateEvent("ARX_TheDoctor","EndingDoctorWin","EG_SidedWithDoctor");
DB_QuestDef_CloseEvent("ARX_TheDoctor","EG_SidedWithDoctor");
DB_QuestDef_UpdateEvent("ARX_TheDoctor","EndingDoctorLose","EG_SidedAgainstDoctor");
DB_QuestDef_CloseEvent("ARX_TheDoctor","EndingDoctorLose");
DB_QuestDef_State("ARX_TheDoctor","EndingDoctorLose");
DB_QuestDef_State("ARX_TheDoctor","EndingDoctorWin");
DB_QuestDef_State("RC_DW_SpidersKiss","SpiderDead",-1);


IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 6, 0, 1)
THEN
PROC_JournalEntries_ClearQuestUpdateEvent("ARX_TheDoctor","EndingDoctorWin","EG_SidedWithDoctor");
PROC_JournalEntries_ClearQuestUpdateEvent("ARX_TheDoctor","EndingDoctorLose", "QuestUpdate_ARX_TheDoctor_EndingDoctorLose");
DB_QuestDef_UpdateEvent("ARX_TheDoctor","EndingDoctorLose","EG_SidedAgainstDoctor");
DB_QuestDef_CloseEvent("ARX_TheDoctor","EG_SidedAgainstDoctor");
DB_QuestDef_State("ARX_TheDoctor","EndingDoctorWin", -1);
//END_REGION

//REGION ARX_KemmVault
//asaf, 5.16, DOS2EE-3959, merging Smooth Criminal with Kemms Vault
IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
AND
DB_QuestDef_State("ARX_FindingThievesGuild",_String)
THEN
NOT DB_QuestDef_State("ARX_FindingThievesGuild",_String);

IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
THEN
DB_QuestDef_UpdateEvent("ARX_KemmVault","KemmVaultGhost_Start","QuestUpdate_ARX_FindingThievesGuild_KemmVaultGhost_Start");
DB_QuestDef_State("ARX_KemmVault","KemmVaultGhost_Start",1);		//QuestUpdate_ARX_FindingThievesGuild_KemmVaultGhost_Start
DB_QuestDef_State("ARX_KemmVault","PainterSewers_Start");		//QuestUpdate_ARX_FindingThievesGuild_PainterSewers_Start
DB_QuestDef_State("ARX_KemmVault","LookingForSewers");			//QuestUpdate_ARX_FindingThievesGuild_LookingForSewers
DB_QuestDef_State("ARX_KemmVault","CheeseTraderHelpers_Start");	//QuestUpdate_ARX_FindingThievesGuild_CheeseTraderHelpers_Start
DB_QuestDef_State("ARX_KemmVault","LearntAboutGuild_Start");	//QuestUpdate_ARX_FindingThievesGuild_LearntAboutGuild_Start
DB_QuestDef_State("ARX_KemmVault","EnteredTheSewers"); 			//QuestUpdate_ARX_FindingThievesGuild_EnteredTheSewers
DB_QuestDef_State("ARX_KemmVault","KnowTheWay");					//QuestUpdate_ARX_FindingThievesGuild_KnowTheWay
DB_QuestDef_State("ARX_KemmVault","VictorRoss");					//QuestUpdate_ARX_FindingThievesGuild_VictorRoss
DB_QuestDef_State("ARX_KemmVault","ThievesGuild_CloseLeftARX",-1);				//QuestUpdate_ARX_FindingThievesGuild_CloseLeftARX
DB_QuestDef_State("ARX_KemmVault","FoundTheGuild");			//QuestUpdate_ARX_FindingThievesGuild_FoundTheGuild
DB_QuestDef_UpdateEvent("ARX_KemmVault","GotStolenPainting","QuestUpdate_ARX_KemmVault_ThievesGuild_BoughtPainting");
DB_QuestDef_UpdateEvent("ARX_KemmVault","GotStolenPainting","QuestUpdate_ARX_KemmVault_ThievesGuild_GotPainting");
DB_QuestDef_State("ARX_KemmVault","GotStolenPainting");
DB_QuestDef_State("ARX_KemmVault","ThievesGuild_BoughtPainting");
DB_QuestDef_State("ARX_KemmVault","ThievesGuild_GotPainting");
DB_QuestDef_CloseEvent("ARX_KemmVault_SUBA","QuestUpdate_ARX_KemmVault_ThievesGuild_GotPainting");
DB_QuestDef_CloseEvent("ARX_KemmVault_SUBA","QuestUpdate_ARX_KemmVault_ThievesGuild_BoughtPainting");
DB_QuestDef_State("ARX_KemmVault","ThievesGuild_PaintingOfferMade");
DB_QuestDef_State("ARX_KemmVault","ThievesGuild_SeenPainting");
DB_QuestDef_UpdateEvent("ARX_KemmVault","ThievesGuild_KnowPainting","QuestUpdate_ARX_FindingThievesGuild_KemmVaultGhost_Start");
DB_QuestDef_CloseAtRegionEnded("ARX_KemmVault","QuestUpdate_ARX_KemmVault_ThievesGuild_CloseLeftARX","ARX_Main");
NOT DB_QuestDef_CloseEvent("ARX_KemmVault","QuestUpdate_ARX_KemmVault_KemmVault_GhostPaintingSolved");
DB_QuestDef_State("ARX_KemmVault","KemmVault_GhostPaintingSolved");
DB_QuestDef_State("ARX_KemmVault","Replica_GhostPaintingSolved");
DB_QuestDef_CloseEvent("ARX_KemmVault_SUBA","QuestUpdate_ARX_KemmVault_Replica_GhostPaintingSolved");
PROC_JournalEntries_ClearQuestState ("ARX_KemmVault","BlackRingMirror");
//Asaf, revising Dwarven Politics, DOS2EE-4013
IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
THEN
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves_SUBA","","QuestUpdate_RC_ARX_TheImperialDwarves_Sewers_EnteredSewers");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves_SUBB","","QuestUpdate_RC_ARX_TheImperialDwarves_Sewers_EnteredSewers");
PROC_JournalEntries_ClearQuestState ("RC_ARX_TheImperialDwarves","Sewers_EnteredSewers");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves","Know_EncounterPreSub","QuestUpdate_RC_ARX_TheImperialDwarves_MerchantEstate_ExaminedStatue");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves","Know_EncounterPreSub","QuestUpdate_RC_ARX_TheImperialDwarves_MerchantEstate_ReadGardenNotes");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves","Know_EncounterPreSub","QuestUpdate_RC_ARX_TheImperialDwarves_DwarvenWedding_Found");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves","Know_RumorPreSub","ARX_MerchantEstate_KnowsAboutVoidwoken");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves","Know_RumorPreSub","QuestUpdate_RC_ARX_TheImperialDwarves_Outskirts_QueenRumors");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves","Know_RumorPreSub","QuestUpdate_RC_ARX_TheImperialDwarves_Outskirts_AttendingTheWedding");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves","ARX_MerchantEstate_KnowsAboutVoidwoken","ARX_MerchantEstate_KnowsAboutVoidwoken");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves","","ARX_MerchantEstate_KnowsAboutVoidwoken");
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","DwarvenWedding_Found");
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","DwarvenWedding_Cake");
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","Outskirts_AttendingTheWedding");
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","Outskirts_QueenRumors");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves_SUBA","","QuestUpdate_RC_ARX_TheImperialDwarves_Sewers_EnteredQueensRoom");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves_SUBB","","QuestUpdate_RC_ARX_TheImperialDwarves_Sewers_EnteredQueensRoom");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves_SUBA","","QuestUpdate_RC_ARX_TheImperialDwarves_Ros_EnteredSewers");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves_SUBB","","QuestUpdate_RC_ARX_TheImperialDwarves_Ros_EnteredSewers");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves","DwarvenWedding_AfterCombat","ARX_MerchantEstate_Garden_DefeatedVoidwoken");
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","Sewers_Q_ReadResearchNotes");//REMOVED
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","Queen_IsDead");//REMOVED
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","Sewers_QAndQueen_AreDead");//REMOVED
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","Sewers_Queen_Confront");//REMOVED
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","Garden_Queen_Confront");//REMOVED
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","Queen_Assassinate");//REMOVED
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","CloseLeftARXQueenFind");//REMOVED
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","Deathfog_DestroyedMachine"); //QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_DestroyedMachine
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","Deathfog_ReleasedToSea");	//QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_ReleasedToSea
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves","Know_ToldPreSub","QuestUpdate_RC_ARX_TheImperialDwarves_LoharStart");
PROC_JournalEntries_ClearQuestUpdateEvent("RC_ARX_TheImperialDwarves","Sewers_Entered","QuestUpdate_RC_ARX_TheImperialDwarves_Ros_EnteredSewers"); 
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","Ros_EnteredSewers");
PROC_JournalEntries_ClearQuestState("RC_ARX_TheImperialDwarves","Sewers_ThiefGhost"); 
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Outskirts_QueenRumors");
DB_QuestDef_State("RC_ARX_TheImperialDwarves","DwarvenWedding_Letter",1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Sewers_PeacemakersCrates",1);

DB_QuestDef_State("RC_ARX_TheImperialDwarves","MerchantEstate_ExaminedStatue",1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","MerchantEstate_ReadGardenNotes",1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Sewers_EnteredQueensRoom",1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","LoharStart",1);
DB_QuestDef_State("RC_ARX_TheImperialDwarves","LoharStart_EnteredArx");

//Asaf, new entries
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Sewers_Q_IsDead_Queen");
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Deathfog_ReleasedToSea_Queen");
DB_QuestDef_State("RC_ARX_TheImperialDwarves","Deathfog_DestroyedMachine_Queen");
DB_QuestDef_State("RC_ARX_TheImperialDwarves","QueenDFCompletion",-1);
//SUBA
DB_QuestDef_State("RC_ARX_TheImperialDwarves","CloseLeftARXQueenFind");
NOT DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("RC_ARX_TheImperialDwarves_SUBA","QuestUpdate_RC_ARX_TheImperialDwarves_CloseLeftARXQueenFind","ARX_Main","QuestUpdate_RC_ARX_TheImperialDwarves_Ros_SaveTheQueen");
NOT DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag_TrueObjFlag("RC_ARX_TheImperialDwarves","QuestUpdate_RC_ARX_TheImperialDwarves_CloseLeftARXQueenFind","ARX_Main","ARX_Sewers_TheQueen_KnowsQueenInSewers","QuestUpdate_ARX_FindingThievesGuild_EnteredTheSewers");

DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Deathfog_DestroyedMachine","QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_DestroyedMachine_CLOSE"); //QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_DestroyedMachine
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Deathfog_ReleasedToSea","QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_ReleasedToSea_CLOSE");	//QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_ReleasedToSea
DB_QuestDef_CloseEvent("RC_ARX_TheImperialDwarves","QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_DestroyedMachine_CLOSE");
DB_QuestDef_CloseEvent("RC_ARX_TheImperialDwarves","QuestUpdate_RC_ARX_TheImperialDwarves_Deathfog_ReleasedToSea_CLOSE");
//DEPENDENCIES 
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Sewers_Entered","QuestUpdate_RC_ARX_TheImperialDwarves_Ros_EnteredSewers_SUBA");
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Ros_EnteredSewers","QuestUpdate_RC_ARX_TheImperialDwarves_Ros_EnteredSewers_SUBA");
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Sewers_ThiefGhost","QuestUpdate_RC_ARX_TheImperialDwarves_Sewers_ThiefGhost_SUBA");
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Queen_Found","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_Found_SUBA");
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Queen_Confront","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_Confront_SUBA");
DB_QuestDef_CloseEvent("RC_ARX_TheImperialDwarves_SUBA","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_IsDead_SUBA");
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Queen_IsDead","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_IsDead_SUBA");
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Queen_Spared","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_Spared_SUBA");
DB_QuestDef_CloseEvent("RC_ARX_TheImperialDwarves_SUBA","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_Spared_SUBA");
DB_QuestDef_State("RC_ARX_TheImperialDwarves","SuspiciousHole_Solved");
//DOS2EE-4307
DB_QuestDef_UpdateEvent("RC_ARX_TheImperialDwarves","Queen_IsSafe","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_IsSafe_SUBA");
DB_QuestDef_CloseEvent("RC_ARX_TheImperialDwarves_SUBA","QuestUpdate_RC_ARX_TheImperialDwarves_Queen_IsSafe_SUBA");
//DOS2EE-4829
DB_QuestDef_CloseEvent("RC_ARX_TheImperialDwarves_SUBA","QuestUpdate_RC_ARX_TheImperialDwarves_CloseLeftARXQueenFind");
//DOS2EE-4818
NOT DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_ARX_TheImperialDwarves","QuestUpdate_RC_ARX_TheImperialDwarves_CloseLeftARXSewerSecret","ARX_Main","QuestUpdate_ARX_FindingThievesGuild_EnteredTheSewers");
DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("RC_ARX_TheImperialDwarves","QuestUpdate_RC_ARX_TheImperialDwarves_CloseLeftARXSewerSecret","ARX_Main","QuestUpdate_RC_ARX_TheImperialDwarves_Sewers_MetTheQueenWithQ");


//Asaf, revising Wetwork, DOS2EE-4354
IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
THEN
PROC_JournalEntries_ClearQuestUpdateEvent("ARX_MerchantEstate_Wetwork_SUBA","","ARX_MarchantEstate_Read_MerchantWill"); 
PROC_JournalEntries_ClearQuestUpdateEvent("ARX_MerchantEstate_Wetwork","","ARX_MarchantEstate_Read_MerchantWill"); 
PROC_JournalEntries_ClearQuestUpdateEvent("ARX_MerchantEstate_Wetwork_SUBB","","QuestUpdate_ARX_MerchantEstate_Wetwork_MerchantIsDead"); 
PROC_JournalEntries_ClearQuestUpdateEvent("ARX_MerchantEstate_Wetwork_SUBB","","QuestUpdate_ARX_MerchantEstate_Wetwork_MerchantsDeal"); 
PROC_JournalEntries_ClearQuestUpdateEvent("ARX_MerchantEstate_Wetwork_SUBB","","QuestUpdate_ARX_MerchantEstate_Wetwork_MerchantsDeal_Bonus"); 
PROC_JournalEntries_ClearQuestUpdateEvent("ARX_MerchantEstate_Wetwork_SUBB","","QuestUpdate_ARX_MerchantEstate_Wetwork_GroomDisappeared"); 
PROC_JournalEntries_ClearQuestUpdateEvent("ARX_MerchantEstate_Wetwork_SUBA","","QuestUpdate_ARX_MerchantEstate_Wetwork_GroomDisappeared");
PROC_JournalEntries_ClearQuestState("ARX_MerchantEstate_Wetwork","CloseLeftARX");
NOT DB_QuestDef_CloseAtRegionEnded("ARX_MerchantEstate_Wetwork","QuestUpdate_ARX_MerchantEstate_Wetwork_CloseLeftARX","ARX_Main");

DB_QuestDef_CloseAtRegionEnded_Conditions_FalseObjFlag("ARX_MerchantEstate_Wetwork","QuestUpdate_ARX_MerchantEstate_Wetwork_CloseLeftARX","ARX_Main","QuestUpdate_ARX_MerchantEstate_Wetwork_GroomIsDead");
NOT DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("ARX_MerchantEstate_Wetwork_SUBB","QuestUpdate_ARX_MerchantEstate_Wetwork_CloseLeftARX_NoPay","ARX_Main","QuestUpdate_ARX_MerchantEstate_Wetwork_GroomIsDead");
NOT DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("ARX_MerchantEstate_Wetwork","QuestUpdate_ARX_MerchantEstate_Wetwork_WetworkResolved_MerchantSurvived","ARX_Main","QuestUpdate_ARX_MerchantEstate_Wetwork_GroomIsDead");
NOT DB_QuestDef_CloseAtRegionEnded_Conditions_TrueObjFlag("ARX_MerchantEstate_Wetwork_SUBB","QuestUpdate_ARX_MerchantEstate_Wetwork_CloseLeftARX_NoPay_SUBB","ARX_Main","QuestUpdate_ARX_MerchantEstate_Wetwork_GroomIsDead");

//Wetwork_CORE
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","FoundGroom_MerchantDead");
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","FoundGroom_MerchantAlive");
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","WetworkResolved",-1);
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","WetworkResolved_MerchantSurvived",-1);
NOT DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","WetworkResolved_MerchantSurvived","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestEnd_MerchantSurvived");
NOT DB_QuestDef_CloseEvent("ARX_MerchantEstate_Wetwork","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestEnd_MerchantSurvived");
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","MerchantDeal_SecondParty",1);
DB_QuestDef_State("ARX_MerchantEstate_Wetwork","CloseLeftARX",-1);

//Wetwork_SUBA //SAFETY RESET
PROC_JournalEntries_ClearQuestState("ARX_MerchantEstate_Wetwork","MerchantIsDead");
PROC_JournalEntries_ClearQuestState("ARX_MerchantEstate_Wetwork","TookWill");
PROC_JournalEntries_ClearQuestState("ARX_MerchantEstate_Wetwork","PoisonedEvent");
PROC_JournalEntries_ClearQuestUpdateEvent("ARX_MerchantEstate_Wetwork","GiveWill","ARX_MarchantEstate_Read_MerchantWill");

DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","MerchantIsDead","QuestUpdate_ARX_MerchantEstate_Wetwork_MerchantIsDead_SUBA");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","TookWill","QuestUpdate_ARX_MerchantEstate_Wetwork_TookWill_SUBA");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","PoisonedEvent","QuestUpdate_ARX_MerchantEstate_Wetwork_PoisonedEvent_SUBA");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","GiveWill","QuestUpdate_ARX_MerchantEstate_Wetwork_GiveWill_SUBA");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","GroomIsDead_SUBA","QuestUpdate_ARX_MerchantEstate_Wetwork_GroomIsDead_SUBA_SUBA");
DB_QuestDef_CloseEvent("ARX_MerchantEstate_Wetwork_SUBA","QuestUpdate_ARX_MerchantEstate_Wetwork_GiveWill_SUBA");
DB_QuestDef_CloseEvent("ARX_MerchantEstate_Wetwork_SUBA","QuestUpdate_ARX_MerchantEstate_Wetwork_GroomIsDead_SUBA_SUBA");

DB_QuestDef_State("ARX_MerchantEstate_Wetwork","GroomDisappeared");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","GroomDisappeared","ARX_MerchantEstate_Groom_Wetwork_KnowsHeDisappeared");

//Wetwork_SUBB //SAFETY RESET
PROC_JournalEntries_ClearQuestState("ARX_MerchantEstate_Wetwork","ChoiceTellFather");
PROC_JournalEntries_ClearQuestState("ARX_MerchantEstate_Wetwork","ToldDaughterRun");
PROC_JournalEntries_ClearQuestState("ARX_MerchantEstate_Wetwork","ToldDaughterCounter");
PROC_JournalEntries_ClearQuestState("ARX_MerchantEstate_Wetwork","MerchantsDeal_Bonus");
PROC_JournalEntries_ClearQuestState("ARX_MerchantEstate_Wetwork","GroomIsDead");
PROC_JournalEntries_ClearQuestState("ARX_MerchantEstate_Wetwork","QuestEnd_MerchantDidNotSurvive");
PROC_JournalEntries_ClearQuestState("ARX_MerchantEstate_Wetwork","QuestEnd_MerchantSurvived");
PROC_JournalEntries_ClearQuestState("ARX_MerchantEstate_Wetwork","CloseLeftARX_NoPay");

DB_QuestDef_State("ARX_MerchantEstate_Wetwork","MerchantsDeal",1);
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","ChoiceTellFather","QuestUpdate_ARX_MerchantEstate_Wetwork_AssassinationStarted");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","ToldDaughterRun","QuestUpdate_ARX_MerchantEstate_Wetwork_ToldDaughterRun_SUBB");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","ToldDaughterCounter","QuestUpdate_ARX_MerchantEstate_Wetwork_ToldDaughterCounter_SUBB");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","MerchantsDeal_Bonus","QuestUpdate_ARX_MerchantEstate_Wetwork_MerchantsDeal_Bonus_SUBB");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","GroomIsDead","QuestUpdate_ARX_MerchantEstate_Wetwork_GroomIsDead_SUBB");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","QuestEnd_MerchantDidNotSurvive","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestEnd_MerchantDidNotSurvive_SUBB");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","QuestEnd_MerchantSurvived","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestEnd_MerchantSurvived");
DB_QuestDef_UpdateEvent("ARX_MerchantEstate_Wetwork","CloseLeftARX_NoPay","QuestUpdate_ARX_MerchantEstate_Wetwork_CloseLeftARX_NoPay_SUBB");
DB_QuestDef_CloseEvent("ARX_MerchantEstate_Wetwork_SUBB","QuestUpdate_ARX_MerchantEstate_Wetwork_CloseLeftARX_NoPay_SUBB");
DB_QuestDef_CloseEvent("ARX_MerchantEstate_Wetwork_SUBB","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestEnd_MerchantDidNotSurvive_SUBB");
DB_QuestDef_CloseEvent("ARX_MerchantEstate_Wetwork_SUBB","QuestUpdate_ARX_MerchantEstate_Wetwork_QuestEnd_MerchantSurvived_SUBB");

NOT DB_QuestDef_CloseAtRegionEnded("RC_ARX_TheImperialDwarves","QuestUpdate_RC_ARX_TheImperialDwarves_CloseLeftARXDeathfog","ARX_Main");
//END_REGION


//REGION //PROC RC_Main

PROC
Proc_Journal_RC_DW_WreckedCaravan_SetUp()
THEN
PROC_JournalEntries_ClearQuestState("RC_DW_WreckedCaravan","ToldMagister");
PROC_JournalEntries_ClearQuestState("RC_DW_WreckedCaravan","ToldMagisterVoidwoken");
PROC_JournalEntries_ClearQuestState("RC_DW_WreckedCaravan","ToldLilian");
DB_QuestDef_UpdateEvent("RC_DW_WreckedCaravan","ReportedCaravan","QuestUpdate_RC_DW_WreckedCaravan_ToldMagister");
DB_QuestDef_UpdateEvent("RC_DW_WreckedCaravan","ReportedCaravan","QuestUpdate_RC_DW_WreckedCaravan_ToldMagisterVoidwoken");
DB_QuestDef_UpdateEvent("RC_DW_WreckedCaravan","ReportedCaravan","QuestUpdate_RC_DW_WreckedCaravan_ToldLilian");
DB_QuestDef_State("RC_DW_WreckedCaravan","ToldMagister");
DB_QuestDef_State("RC_DW_WreckedCaravan","ToldMagisterVoidwoken");
DB_QuestDef_State("RC_DW_WreckedCaravan","ToldLilian");
DB_QuestDef_CloseEvent("RC_DW_WreckedCaravan","QuestUpdate_RC_DW_WreckedCaravan_ToldMagister");
DB_QuestDef_CloseEvent("RC_DW_WreckedCaravan","QuestUpdate_RC_DW_WreckedCaravan_ToldMagisterVoidwoken");
DB_QuestDef_CloseEvent("RC_DW_WreckedCaravan","QuestUpdate_RC_DW_WreckedCaravan_ToldLilian");

PROC
Proc_Journal_RC_DW_Meistr_SetUp()
THEN
DB_QuestDef_State("RC_DW_Meistr","DemonMetLate");
DB_QuestDef_CloseEvent("RC_DW_Meistr_SUBE","QuestUpdate_RC_DW_Meistr_DemonMetLate");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","VaultInstruction","QuestUpdate_RC_DW_Meistr_BookRead");
PROC_JournalEntries_ClearQuestState("RC_OIL_Main","BlackRingReveal");
DB_QuestDef_State("RC_OIL_Main","BlackRingReveal");
DB_QuestDef_State("RC_DW_Meistr","NewTeacherEarly");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","NewTeacherEarly","QuestUpdate_RC_DW_Meistr_MordusTeacher");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","NewTeacherEarly","QuestUpdate_RC_FL_BrokenPromises_MetAlmira");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","NewTeacherEarly","QuestUpdate_RC_DW_Meistr_HannagTeacher_Tinkerer");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","NewTeacherEarly","QuestUpdate_RC_DW_Meistr_DemonTeacher_Tinkerer");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","NewTeacherEarly","QuestUpdate_RC_BF_CorneredSourcerer_LearnApprentice");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","NewTeacherEarly","QuestUpdate_RC_DW_Meistr_MordusMet");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","NewTeacherEarly","QuestUpdate_RC_GY_RykersContract_GotRykersQuest");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","NewTeacherEarly","QuestUpdate_RC_BF_ThePresence_FoundDemonHunter");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","NewTeacherEarly","QuestUpdate_RC_BF_CorneredSourcerer_LearnApprentice");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","NewTeacherEarly","QuestUpdate_RC_DW_Meistr_DemonMet");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","NewTeacherEarly","QuestUpdate_RC_MIL_RescuingSaheila_LearnedRescueSaheila");
DB_QuestDef_UpdateEvent("RC_DW_Meistr","NewTeacherEarly","QuestUpdate_RC_FL_BrokenPromises_MetAlmira");

//END_REGION

//REGION Red Prince journal entries
IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
THEN
PROC_JournalEntries_ClearQuestState("FTJ_COM_RedPrince","RedPrincessTryKill");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Brahmos", "ARX_HorrorSleep_WarZone_LizardDreamer_LetPlayerPass");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_Brahmos", "ARX_HorrorSleep_WarZone_LizardDreamer_LetPlayerPass");
DB_QuestDef_State("FTJ_COM_RedPrince","HouseOfShadows_Close_CoS");
DB_QuestDef_State("FTJ_COM_RedPrince","HouseOfShadows_Close_CoS_NoInvite");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_ToSallowMan", "QuestUpdate_FTJ_COM_RedPrince_ToSallowMan");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","SpyMasterDead", "CoS_FoundDeadSpyMaster");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","RedPrincessLearnShadowPrince", "QuestUpdate_FTJ_COM_RedPrince_ToSallowMan");
DB_QuestDef_State("FTJ_COM_RedPrince","HouseOfShadows_BlackMirror_RedPrince");
DB_QuestDef_State("FTJ_COM_RedPrince","Branch");
DB_QuestDef_State("FTJ_COM_RedPrince","CoS_MissedBrahmos");
DB_QuestDef_State("FTJ_COM_RedPrince","CoS_Dreamer");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Branch", "QuestUpdate_FTJ_COM_RedPrince_ToRedPrincess");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Branch", "QuestUpdate_FTJ_COM_RedPrince_ToSallowMan");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Consulate", "QuestUpdate_ARX_LizardConsulate_EnteredTheConsulate");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","ConsulatePortal", "QuestUpdate_ARX_LizardConsulate_ConsulateRP");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_HorrorSleepSunset_RP_Seduction_TeleportedOut", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_RP_Seduction_TeleportedOut");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_HorrorSleepSunset_PrincessGaveEgg", "QuestUpdate_FTJ_COM_RedPrince_HorrorSleepSunset_PrincessGaveEgg");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_HorrorSleepSunset_PrincessGaveEgg_RedPrince", "QuestUpdate_FTJ_COM_RedPrince_HorrorSleepSunset_PrincessGaveEgg_RedPrince");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_HorrorSleepSunset_PrincessDead", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_PrincessDead");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_EggLeave", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_EggLeave");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_NoEggLeave", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_NoEggLeave");
DB_QuestDef_State("FTJ_COM_RedPrince","Princess_EggDragonHostile");
DB_QuestDef_State("FTJ_COM_RedPrince","HorrorSleepSunset_LeftEgg");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_Princess_EggLeave");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_Princess_NoEggLeave");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_HorrorSleepSunset_LeftEgg");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_Princess_EggDragonHostile");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_Act3Start", "QuestUpdate_FTJ_COM_RedPrince_Act3Start");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_Act3Start_NoConsulate", "QuestUpdate_FTJ_COM_RedPrince_Act3Start_NoConsulate");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_Act3Start_KnowConsulate", "QuestUpdate_FTJ_COM_RedPrince_Act3Start_KnowConsulate");
DB_QuestDef_State("FTJ_COM_RedPrince","SpymasterMissingAfterRedPrincess");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_HouseOfShadows", "CoS_FoundDeadSpyMaster");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_HouseOfShadows", "QuestUpdate_FTJ_COM_RedPrince_HouseOfShadows_Close");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_HouseOfShadows", "QuestUpdate_FTJ_COM_RedPrince_SpymasterRewardAfterRedPrincess");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_HouseOfShadows", "QuestUpdate_FTJ_COM_RedPrince_SpymasterAttackRedPrincess");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_HouseOfShadows", "QuestUpdate_FTJ_COM_RedPrince_SpymasterMissingAfterRedPrincess");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Branch", "QuestUpdate_FTJ_COM_RedPrince_BlackMirror_RedPrince");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Branch", "QuestUpdate_FTJ_COM_RedPrince_KemmMansion_Pregnant");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Branch", "QuestUpdate_FTJ_COM_RedPrince_KemmMansion_NotPregnant");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Branch", "QuestUpdate_ARX_LizardConsulate_ConsulateRP");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","Princess_HorrorSleepSunset_Start", "QuestUpdate_FTJ_COM_RedPrince_HorrorSleepSunset_Start");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_HorrorSleepSunset_PrincessHostile");
DB_QuestDef_CloseEvent("FTJ_COM_RedPrince_Princess", "QuestUpdate_FTJ_COM_RedPrince_HorrorSleepSunset_PrincessDead");

PROC_JournalEntries_ClearQuestState("FTJ_OriginRedPrince","HorrorSleepSunset_PrincessGaveEgg");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","SpyMasterDead", "CoS_FoundDeadSpyMaster");
DB_QuestDef_State("FTJ_OriginRedPrince","HouseOfShadows_Close_CoS");
DB_QuestDef_State("FTJ_OriginRedPrince","HouseOfShadows_Close_CoS_NoInvite");
DB_QuestDef_State("FTJ_OriginRedPrince","CoS_Dreamer");
DB_QuestDef_State("FTJ_OriginRedPrince","CoS_MissedBrahmos");
DB_QuestDef_UpdateEvent("FTJ_COM_RedPrince","RedPrincessLearnShadowPrince", "QuestUpdate_FTJ_COM_RedPrince_ToSallowMan");
DB_QuestDef_State("FTJ_OriginRedPrince","HouseOfShadows_BlackMirror");
DB_QuestDef_State("FTJ_OriginRedPrince","SpymasterMissingAfterRedPrincess");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_HouseOfShadows", "QuestUpdate_FTJ_OriginRedPrince_SpymasterMissingAfterRedPrincess");
DB_QuestDef_State("FTJ_OriginRedPrince","Branch");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Branch", "QuestUpdate_FTJ_OriginRedPrince_ToRedPrincess");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Branch", "QuestUpdate_FTJ_OriginRedPrince_ToSallowMan");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Branch", "QuestUpdate_FTJ_OriginRedPrince_BlackMirror_Pregnant_Warned");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Branch", "QuestUpdate_FTJ_OriginRedPrince_KemmMansion_Pregnant");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Branch", "QuestUpdate_FTJ_OriginRedPrince_KemmMansion_NotPregnant");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Branch", "QuestUpdate_ARX_LizardConsulate_ConsulateRP");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Consulate", "QuestUpdate_ARX_LizardConsulate_EnteredTheConsulate");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","ConsulatePortal", "QuestUpdate_ARX_LizardConsulate_ConsulateRP");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_ToSallowMan", "QuestUpdate_FTJ_OriginRedPrince_ToSallowMan");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_HorrorSleepSunset_Start", "QuestUpdate_FTJ_OriginRedPrince_HorrorSleepSunset_Start");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_HorrorSleepSunset_PrincessHostile");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","HorrorSleepSunset_PrincessGaveEgg", "ARX_LizardPrincess_GaveEgg");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_HorrorSleepSunset_PrincessGaveEgg", "ARX_LizardPrincess_GaveEgg");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_Brahmos", "ARX_HorrorSleep_WarZone_LizardDreamer_LetPlayerPass");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Brahmos", "ARX_HorrorSleep_WarZone_LizardDreamer_LetPlayerPass");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_HorrorSleepSunset_RP_Seduction", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_RP_Seduction_TeleportedOut");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_NoEggLeave", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_NoEggLeave");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_EggLeave", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_EggLeave");
DB_QuestDef_UpdateEvent("FTJ_OriginRedPrince","Princess_HorrorSleepSunset_PrincessDead", "QuestUpdate_ARX_LizardConsulate_HorrorSleepSunset_PrincessDead");
DB_QuestDef_State("FTJ_OriginRedPrince","Princess_EggDragonHostile");
DB_QuestDef_State("FTJ_OriginRedPrince","HorrorSleepSunset_LeftEgg");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_Princess_EggLeave");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_Princess_NoEggLeave");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_HorrorSleepSunset_LeftEgg");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_Princess_EggDragonHostile");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_Princess", "QuestUpdate_FTJ_OriginRedPrince_HorrorSleepSunset_PrincessDead");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_HouseOfShadows", "CoS_FoundDeadSpyMaster");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_HouseOfShadows", "QuestUpdate_FTJ_OriginRedPrince_HouseOfShadows_Close");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_HouseOfShadows", "QuestUpdate_FTJ_OriginRedPrince_SpymasterRewardAfterRedPrincess");
DB_QuestDef_CloseEvent("FTJ_OriginRedPrince_HouseOfShadows", "QuestUpdate_FTJ_OriginRedPrince_SpymasterAttackRedPrincess");

DB_QuestDef_State("FTJ_OriginRedPrince","Princess_EggLeave");
DB_QuestDef_State("FTJ_COM_RedPrince","Princess_EggLeave");
DB_QuestDef_State("FTJ_OriginRedPrince","Princess_NoEggLeave");
DB_QuestDef_State("FTJ_COM_RedPrince","Princess_NoEggLeave");
//END_REGION

//REGION Lohse journal entries
IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
THEN
PROC_JournalEntries_ClearQuestState("FTJ_OriginLohse","KilledAdvocate");				
PROC_JournalEntries_ClearQuestState("FTJ_OriginLohse","LearnedDemonName");				
PROC_JournalEntries_ClearQuestState("FTJ_COM_Lohse","KilledAdvocate");				
PROC_JournalEntries_ClearQuestState("FTJ_COM_Lohse","LearnedDemonName");				
DB_QuestDef_UpdateEvent("FTJ_OriginLohse","KilledAdvocate","JDFProxy_QuestUpdate_FTJ_OriginLohse_KilledAdvocate");				
DB_QuestDef_UpdateEvent("FTJ_OriginLohse","LearnedDemonName","JDFProxy_QuestUpdate_FTJ_OriginLohse_LearnedDemonName");
DB_QuestDef_UpdateEvent("FTJ_COM_Lohse","KilledAdvocate","JDFProxy_QuestUpdate_FTJ_COM_Lohse_KilledAdvocate");
DB_QuestDef_UpdateEvent("FTJ_COM_Lohse","LearnedDemonName","JDFProxy_QuestUpdate_FTJ_COM_Lohse_LearnedDemonName");

//END_REGION


//REGION Entries CoS subquests
IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
THEN
DB_QuestDef_UpdateEvent("CoS_Temples", "SUBA_SacrificeAllAltar", "QuestUpdate_CoS_Temples_SacrificeAllAltar");
DB_QuestDef_UpdateEvent("CoS_Temples", "SUBB_SacrificeAllAltar", "QuestUpdate_CoS_Temples_SacrificeAllAltar");
DB_QuestDef_State("CoS_Temples","GotHead");
DB_QuestDef_State("CoS_Temples","AteHead");
DB_QuestDef_CloseEvent("CoS_Temples_SUBB","QuestUpdate_CoS_Temples_AteHead");
PROC_JournalEntries_ClearQuestUpdateEvent("CoS_Temples","RewardAlexandar","QuestUpdate_CoS_HelpingAlexandar_Leave");
NOT DB_QuestDef_CloseEvent("CoS_Temples_SUBA","QuestUpdate_CoS_HelpingAlexandar_Leave");
NOT DB_QuestDef_CloseEvent("CoS_Temples_SUBB","QuestUpdate_CoS_HelpingAlexandar_Leave");
NOT DB_QuestDef_CloseEvent("CoS_Temples_SUBC","QuestUpdate_CoS_HelpingAlexandar_Leave");
DB_QuestDef_UpdateEvent("CoS_Temples","RewardAlexandar","QuestUpdate_CoS_HelpingAlexandar_End");
DB_QuestDef_CloseEvent("CoS_Temples_SUBA","QuestUpdate_CoS_HelpingAlexandar_End");
DB_QuestDef_CloseEvent("CoS_Temples_SUBB","QuestUpdate_CoS_HelpingAlexandar_End");
DB_QuestDef_CloseEvent("CoS_Temples_SUBC","QuestUpdate_CoS_HelpingAlexandar_End");
DB_QuestDef_UpdateEvent("CoS_Temples", "SUBB_RewardAlexandar", "QuestUpdate_CoS_HelpingAlexandar_End");
DB_QuestDef_UpdateEvent("CoS_Temples", "SUBC_RewardAlexandar", "QuestUpdate_CoS_HelpingAlexandar_End");


IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
THEN
NOT DB_QuestDef_CloseAtRegionEnded("CoS_OrcTemple","QuestUpdate_CoS_OrcTemple_CloseLeftCOS","CoS_Main_Ending");
NOT DB_QuestDef_CloseAtRegionEnded("CoS_GarethsRevenge","QuestUpdate_CoS_GarethsRevenge_CloseLeftCOS","CoS_Main_Ending");
NOT DB_QuestDef_CloseAtRegionEnded("CoS_TheWatcher","QuestUpdate_CoS_TheWatcher_CloseLeftCOS","CoS_Main_Ending");
NOT DB_QuestDef_CloseAtRegionEnded("CoS_HelpingTheSallowMan","QuestUpdate_CoS_HelpingTheSallowMan_CloseLeftCOS","CoS_Main_Ending");
NOT DB_QuestDef_CloseAtRegionEnded("CoS_CompanionCulling","QuestUpdate_CoS_CompanionCulling_CloseLeftCOS","CoS_Main_Ending");
NOT DB_QuestDef_CloseAtRegionEnded("CoS_SpyMaster","QuestUpdate_CoS_SpyMaster_CloseLeftCOS","CoS_Main_Ending");
NOT DB_QuestDef_CloseAtRegionEnded("CoS_MissingStudent","QuestUpdate_CoS_MissingStudent_CloseLeftCOS","CoS_Main_Ending");
NOT DB_QuestDef_CloseAtRegionEnded("CoS_ImpTemple","QuestUpdate_CoS_ImpTemple_CloseLeftCOS","CoS_Main_Ending");
NOT DB_QuestDef_CloseAtRegionEnded("CoS_ForbiddenLibrary","QuestUpdate_CoS_ForbiddenLibrary_CloseLeftCOS","CoS_Main_Ending");
NOT DB_QuestDef_CloseAtRegionEnded("CoS_BlackRing","QuestUpdate_CoS_BlackRing_CloseLeftCOS","CoS_Main_Ending");
NOT DB_QuestDef_CloseAtRegionEnded("CoS_WizardTemple","QuestUpdate_CoS_WizardTemple_CloseLeftCOS","CoS_Main_Ending");
NOT DB_QuestDef_CloseAtRegionEnded("CoS_HelpingAlexandar","QuestUpdate_CoS_HelpingAlexandar_CloseLeftCOS","CoS_Main_Ending");
DB_QuestDef_CloseAtRegionEnded("CoS_HelpingAlexandar","QuestUpdate_CoS_HelpingAlexandar_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_OrcTemple","QuestUpdate_CoS_OrcTemple_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_GarethsRevenge","QuestUpdate_CoS_GarethsRevenge_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_TheWatcher","QuestUpdate_CoS_TheWatcher_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_HelpingTheSallowMan","QuestUpdate_CoS_HelpingTheSallowMan_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_CompanionCulling","QuestUpdate_CoS_CompanionCulling_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_SpyMaster","QuestUpdate_CoS_SpyMaster_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_MissingStudent","QuestUpdate_CoS_MissingStudent_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_ImpTemple","QuestUpdate_CoS_ImpTemple_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_ForbiddenLibrary","QuestUpdate_CoS_ForbiddenLibrary_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_BlackRing","QuestUpdate_CoS_BlackRing_CloseLeftCOS","CoS_Main");
DB_QuestDef_CloseAtRegionEnded("CoS_WizardTemple","QuestUpdate_CoS_WizardTemple_CloseLeftCOS","CoS_Main");

IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
THEN
DB_QuestDef_State("CoS_TheWatcher","WatcherDead",-1);

//END_REGION


//REGION Ifan regions.

IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
THEN
DB_QuestDef_State("FTJ_Ifan_DarkFaction","DeadAlexandarCOS");
DB_QuestDef_State("FTJ_COM_Ifan","DeadAlexandarCOS");
//END_REGION

//REGION PATCH 0

IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 6, 0, 1)
THEN
DB_QuestDef_UpdateEvent("CoS_SpyMaster","Start_SpyParent","QuestUpdate_CoS_SpyMaster_Start_SpyMaster");
DB_QuestDef_UpdateEvent("CoS_SpyMaster","Start_MotherParent","QuestUpdate_CoS_SpyMaster_Start_MotherTree");
DB_QuestDef_State("FTJ_SW_CallToArms", "AllSeekersDead", -1);
Proc_JDF_CreateCustomFlagsDependency("FTJ_SW_FoundDeadGareth", "FTJ_SW_SawAllSeekersDead", "QuestUpdate_FTJ_SW_CallToArms_AllSeekersDead");
Proc_JDF_CreateCustomFlagsDependency("QuestUpdate_FTJ_SW_CallToArms_GotCallToArms_Exter", "FTJ_SW_SawAllSeekersDead", "QuestUpdate_FTJ_SW_CallToArms_AllSeekersDead");
PROC_JournalEntries_ClearQuestState("FTJ_SW_SourceField", "FoundBarrier");
PROC_JournalEntries_ClearQuestState("FTJ_SW_SourceField", "BarrierDisabledWithoutHelp");
PROC_JournalEntries_ClearQuestUpdateEvent("FTJ_SW_SourceField","SacrificedSelf","QuestUpdate_RC_FTJ_SoulJar_SacrificedSelf");
PROC_JournalEntries_ClearQuestUpdateEvent("FTJ_SW_SourceField","MysteryHelper","FTJ_SW_SourceField_MysteryHelper");
DB_QuestDef_State("RC_FTJ_SourceCollar","ReturnGarethCollar");
PROC_JournalEntries_ClearQuestState("ARX_KemmVault","KemmVault_AtticNote");
DB_QuestDef_State("FTJ_COM_Beast","PreAct2Start");

// Source barrier/field quest has been removed
IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 6, 0, 1)
AND
DB_IsPlayer(_Player)
AND
QuestAccepted(_Player, "FTJ_SW_SourceField", 1)
THEN
QuestClose(_Player, "FTJ_SW_SourceField");

//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Start"
