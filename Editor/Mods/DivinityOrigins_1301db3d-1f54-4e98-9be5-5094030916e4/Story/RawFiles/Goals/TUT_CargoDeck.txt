Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_AutoSaveTrigger(TRIGGERGUID_S_TUT_CargoDeck_AutoSave_eaad798a-aead-4f62-b321-3fdf4b8aebf7);
DB_AutoSaveTrigger(TRIGGERGUID_S_TUT_CargoDeck_AutoSave_CharacterCreation_1e515f82-bab7-4b8a-9fbd-e9c58387b95a);

//REGION //Tutorial info
DB_TutorialInfo("TUT_Exit","TUT_CAT_General","TUT_Exit_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_CombineCrafting","TUT_CAT_Inventory","TUT_CombineCrafting_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_Bed","TUT_CAT_Exploring","TUT_Bed_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_PressurePlatePuzzle","TUT_CAT_Exploring","TUT_PressurePlatePuzzle_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_CraftingRecipe","TUT_CAT_Inventory","TUT_CraftingRecipe_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_Locked_UseKey","TUT_CAT_Exploring","TUT_Locked_UseKey_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_SurfaceOil","TUT_CAT_Combat","TUT_SurfaceOil_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_ActiveSearch_Controller","TUT_CAT_Exploring","TUT_ActiveSearch_Controller_Title",2,0,-1,2,0,0);
DB_TutorialInfo("TUT_SelectionActiveSearch_Controller","TUT_CAT_Exploring","TUT_SelectionActiveSearch_Controller_Title",2,0,-1,2,0,0);
DB_TutorialInfo("TUT_Drag","TUT_CAT_Exploring","TUT_Drag_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_ScrollLightning","TUT_CAT_Combat","TUT_ScrollLightning_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_Locked_UseLockpick","TUT_CAT_Exploring","TUT_Locked_UseLockpick_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_SurfacePoison","TUT_CAT_Combat","TUT_SurfacePoison_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_Locked_PressurePlate","TUT_CAT_Exploring","TUT_Locked_PressurePlate_Title",0,0,-1,1,0,0);

//END_REGION

//REGION //Pressure Plate Puzzle
DB_S_TUT_CargoDeck_PressurePlate(ITEMGUID_S_TUT_CargoDeck_SecurityRoomOne_PressurePlateOne_34fc1380-4bf7-490b-b41f-3443681b6ab9,"S_TUT_CargoDeck_SecurityRoomOne_PressurePlateOne_On","TUT_CargoDeck_SecurityRoomOne",1,"ON");
DB_S_TUT_CargoDeck_PressurePlate(ITEMGUID_S_TUT_CargoDeck_SecurityRoomOne_PressurePlateTwo_d164d340-90ca-4ac2-9d34-a198c767b31f,"S_TUT_CargoDeck_SecurityRoomOne_PressurePlateTwo_On","TUT_CargoDeck_SecurityRoomOne",2,"ON");
DB_S_TUT_CargoDeck_PressurePlate(ITEMGUID_S_TUT_CargoDeck_SecurityRoomOne_PressurePlateOne_34fc1380-4bf7-490b-b41f-3443681b6ab9,"S_TUT_CargoDeck_SecurityRoomOne_PressurePlateOne_Off","TUT_CargoDeck_SecurityRoomOne",1,"OFF");
DB_S_TUT_CargoDeck_PressurePlate(ITEMGUID_S_TUT_CargoDeck_SecurityRoomOne_PressurePlateTwo_d164d340-90ca-4ac2-9d34-a198c767b31f,"S_TUT_CargoDeck_SecurityRoomOne_PressurePlateTwo_Off","TUT_CargoDeck_SecurityRoomOne",2,"OFF");

DB_S_TUT_CargoDeck_PressurePlate_Door(ITEMGUID_S_TUT_CargoDeck_SecurityRoomOne_Door_edce67b3-65cc-48fd-9534-88894b2766a3,"TUT_CargoDeck_SecurityRoomOne");
//END_REGION

//REGION //Trigger Register
ProcTriggerRegisterForPlayers(TRIGGERGUID_S_TUT_CargoDeck_UnrulyPrisoner_Trigger_6284e421-8805-4dc3-9aed-74abb0bd3ba4);
ProcTriggerRegisterForPlayers(TRIGGERGUID_S_TUT_CargoDeck_Tutorial_MessageTrigger_588feed5-aebe-401b-94ed-10221b6879e0);
ProcTriggerRegisterForPlayers(TRIGGERGUID_S_TUT_CargoDeck_SecurityRoomOne_ActiveSearchTutorial_2df469ff-37d5-41bb-9777-fdafac7795a1);
ProcTriggerRegisterForPlayers(TRIGGERGUID_S_TUT_CargoDeck_AnimalPen_SelectionTutorial_da34033c-0f5f-4f38-9813-b21ea50e15ce);
ProcTriggerRegisterForPlayers(TRIGGERGUID_S_TUT_CargoDeck_CollaringRoom_DragTutorial_bf65754b-3196-477f-bb20-64e4c9ad6107);
ProcTriggerRegisterForPlayers(TRIGGERGUID_S_TUT_CargoDeck_AnimalPen_Enter_2beb0727-e580-4a8d-bc05-fcb086ffe28d);
ProcTriggerRegisterForPlayers(TRIGGERGUID_S_TUT_CargoDeck_MedicalBay_OozeTutorial_40341ee0-2ec6-474c-a7f4-1747ac0df273);


//END_REGION

//REGION //Isolation Room
CharacterSetHitpointsPercentage(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, 50.0);

DB_Dialogs(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "TUT_CargoDeck_MagisterGuard");
DB_Dialogs(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,"TUT_CargoDeck_UnrulyPrisoner");

CharacterUseItem(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,ITEMGUID_S_TUT_CargoDeck_Isolation_Stool_b9a1020c-c1ce-470e-bcb9-fb5483a50d57,"TUT_CargoDeck_Isolation_MagisterSit");

ProcCharacterDisableCrime(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "IncapacitatedAssault");
ProcCharacterDisableCrime(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"UseForbiddenItem");

DB_TUT_CargoDeck_Isolation_Levers((ITEMGUID)ITEMGUID_S_TUT_CargoDeck_Isolation_Lever001_11901fdb-3115-4811-bb93-9b5ca408800c,(ITEMGUID)ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_000_2584e8a5-1fbe-4848-a368-55aeff1a2435);
DB_TUT_CargoDeck_Isolation_Levers((ITEMGUID)ITEMGUID_S_TUT_CargoDeck_Isolation_Lever002_e1efd6ba-1fa8-4155-a7a2-e74314317988,(ITEMGUID)ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c);

//END_REGION

//REGION //Medical Bay
ApplyDamage(ITEMGUID_S_TUT_CargoDeck_MedicalBay_Door_fb7ac9d0-d334-4778-8a0a-d0bf266e120c,24,"Physical");

DB_Tutorial_CargoDeck_MedicalBay_Ingredients(CON_Herb_Mushroom_A_0106e3c1-bd81-4118-8a28-59c6dc941feb,"Mushroom");
DB_Tutorial_CargoDeck_MedicalBay_Ingredients(CON_Potion_A_Empty_cd6e86ca-e9be-444e-a7df-d295ec6bb578,"Bottle");
//REGION


//REGION //Post Windego
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_CollaringRoom_Explosion_000_280aabfa-a0c9-4680-a6b8-fef908266483,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_CollaringRoom_Explosion_001_6ddb3bef-b02a-4f9d-a635-97312a8a8a45,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_CollaringRoom_Explosion_002_45c7bb3a-e7ae-421d-8f85-d867dc6112fd,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_CollaringRoom_Explosion_003_d06252d0-7755-4115-b4ba-65a6c729831c,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_AnimalPen_Explosion_000_00a692b3-faae-4a72-964f-796d198a858f,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_AnimalPen_Explosion_001_b5e2b079-5228-4064-b504-ae5c47607b13,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_AnimalPen_Explosion_002_641f7d43-4856-421d-a222-41085906dbd5,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_SecurityRoom_Explosion_000_15875ce1-25b5-4027-83d4-34c598669b7d,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_SecurityRoom_Explosion_001_a9565cd5-f2eb-4ea0-b0ca-030fc01936fb,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_Isolation_Explosion_000_8d2aae4e-e70b-43cd-b70e-955440fe28d6,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_Isolation_Explosion_001_74dce1d1-e6eb-434b-a2d5-67d9b0e9c34e,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_Isolation_Explosion_002_468124eb-e71a-4bfc-99e7-60030da9644a,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_Isolation_Explosion_003_95a6c23e-8891-4ad3-b012-b2affd35c45c,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_MedicalBay_Explosion_000_7df353a6-8108-49d9-945c-61b765cb26fb,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_MedicalBay_Explosion_001_62d50ce9-f585-4eb1-ad10-301b66ade272,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_MedicalBay_Explosion_002_e147fd92-d83f-4c4b-af0b-d324d6dccd6b,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_SecurityRoomTwo_Explosion_000_bfc7d1bb-2928-43b8-8191-0b0045bc960b,"Projectile_EnemyFireball",0);
DB_TUT_LowerDeck_WindegoExplosionPoints(TRIGGERGUID_S_TUT_CargoDeck_SecurityRoomTwo_Explosion_001_8be37be4-e1c9-498e-81a7-d3bf9d152d73,"Projectile_EnemyFireball",0);

DB_TUT_CargoDeck_WindegoDeaths(CHARACTERGUID_Animals_Sheep_C_000_0d51df41-eacd-46da-aeba-ee5080093fbe);
DB_TUT_CargoDeck_WindegoDeaths(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef);
DB_TUT_CargoDeck_WindegoDeaths(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);

DB_TUT_LowerDeck_WindegoDestroyItems((ITEMGUID)S_CONT_Humans_Citz_Barrel_A_024_8c1a8734-1b8c-408c-9bd0-9b471f8f46a4);

SetOnStage(ITEMGUID_S_TUT_CargoDeck_WindegoWave_f5035f0a-62dc-460a-84be-c178c9ad2e2e, 0);
SetOnStage(ITEMGUID_S_TUT_Lightning_CargoDeck_6bea4a63-d9a5-416b-bd36-04e963529fac,0);
//END_REGION

//REGION //Post Kraken
DB_TutorialSprayHelper(ITEMGUID_S_TUT_SplashHelper_Cargo_Left_1_af3fe50a-2d9f-409f-a097-d5807ba4855e, "Cargo", "Side", "Left", 1);
DB_TutorialSprayHelper(ITEMGUID_S_TUT_SplashHelper_Cargo_Left_2_f109f6a0-a78a-43a1-8c27-a3c32fa8a6d1, "Cargo", "Side", "Left", 2);
DB_TutorialSprayHelper(ITEMGUID_S_TUT_SplashHelper_Cargo_Left_3_ed167866-0245-41d3-88f2-6205c70a3384, "Cargo", "Side", "Left", 3);

DB_TutorialSprayHelper(ITEMGUID_S_TUT_SplashHelper_Cargo_Right_1_a3225544-0325-43ad-bccf-3b1816b047d0, "Cargo", "Side", "Right", 1);
DB_TutorialSprayHelper(ITEMGUID_S_TUT_SplashHelper_Cargo_Right_2_125efe84-3845-4e7e-8b15-4a11199b9365, "Cargo", "Side", "Right", 2);
DB_TutorialSprayHelper(ITEMGUID_S_TUT_SplashHelper_Cargo_Right_3_7ea174a8-a5b7-4462-b3f2-dd64bc8127ca, "Cargo", "Side", "Right", 3);
DB_TutorialSprayHelper(ITEMGUID_S_TUT_SplashHelper_Cargo_Right_4_21df258f-8f5e-48a4-8283-ed378dd55ab1, "Cargo", "Side", "Right", 4);

DB_TUT_Splashes_TotalLength("Cargo", 10);
//END_REGION
KBSECTION
//REGION //Check on leaving tut deck
PROC
ProcBlockUseOfItem(_Player,ITEMGUID_S_TUT_CargoDeck_LadderToLowerDeck_dd528659-9b95-40ca-89c3-043b0373c613)
AND
CharacterGetReservedUserID(_Player,_UserID)
AND
NOT DB_TUT_CargoDeck_AgreedToLeave(_UserID)
THEN
OpenMessageBoxYesNo(_Player,"TUT_SureWantLeaveTutDeck");
DB_CustomUseItemResponse(_Player,ITEMGUID_S_TUT_CargoDeck_LadderToLowerDeck_dd528659-9b95-40ca-89c3-043b0373c613,0);

IF
MessageBoxYesNoClosed(_Player,"TUT_SureWantLeaveTutDeck",1)
AND
CharacterGetReservedUserID(_Player,_UserID)
AND
NOT DB_TUT_CargoDeck_AgreedToLeave(_UserID)
THEN
DB_TUT_CargoDeck_AgreedToLeave(_UserID);
CharacterUseItem(_Player,ITEMGUID_S_TUT_CargoDeck_LadderToLowerDeck_dd528659-9b95-40ca-89c3-043b0373c613,"");

//END_REGION

//REGION //Animal pen

IF //Plays affirmation voicebark upon entry of animal pen
CharacterEnteredTrigger(_Player,TRIGGERGUID_S_TUT_CargoDeck_AnimalPen_Enter_2beb0727-e580-4a8d-bc05-fcb086ffe28d)
AND
QueryOnlyOnce("TUT_CargoDeck_AnimalPen_Entry")
THEN
StartVoiceBark("TUT_VB_CargoDeck_AnimalPen_Entry",_Player);

IF //Plays locked door tutorial 
CharacterUsedItem(_Player,ITEMGUID_S_TUT_CargoDeck_AnimalPen_DoorToSecurity_b4a7964b-e773-4de2-a340-b157e1a8f89a)
AND
DB_IsPlayer(_Player)
AND
ObjectIsItem(ITEMGUID_S_TUT_CargoDeck_AnimalPen_DoorToSecurity_b4a7964b-e773-4de2-a340-b157e1a8f89a,1)
AND
ItemIsLocked(ITEMGUID_S_TUT_CargoDeck_AnimalPen_DoorToSecurity_b4a7964b-e773-4de2-a340-b157e1a8f89a,1)
THEN
PROC_CheckPlayTut(_Player,"TUT_Locked_UseKey");

//END_REGION

//REGION //Security Rooms
IF //Plays active search tutorial when entering trigger
CharacterEnteredTrigger(_Player,TRIGGERGUID_S_TUT_CargoDeck_SecurityRoomOne_ActiveSearchTutorial_2df469ff-37d5-41bb-9777-fdafac7795a1)
AND
QueryOnlyOnce("TUT_CargoDeck_SecurityRoom_ActiveSearch")
THEN
PROC_CheckPlayTut(_Player,"TUT_ActiveSearch_Controller");

IF //Plays locked door pressure plate tutorial 
CharacterUsedItem(_Player,ITEMGUID_S_TUT_CargoDeck_SecurityRoomOne_Door_edce67b3-65cc-48fd-9534-88894b2766a3)
AND
DB_IsPlayer(_Player)
AND
ObjectIsItem(ITEMGUID_S_TUT_CargoDeck_SecurityRoomOne_Door_edce67b3-65cc-48fd-9534-88894b2766a3,1)
AND
ItemIsLocked(ITEMGUID_S_TUT_CargoDeck_SecurityRoomOne_Door_edce67b3-65cc-48fd-9534-88894b2766a3,1)
AND
NOT DB_TUT_CargoDeck_PressurePlateDoor_Opened(1)
THEN
PROC_CheckPlayTut(_Player,"TUT_Locked_PressurePlate");

IF //Checks which pressure plates have been pressed and which are no longer pressed
CharacterItemEvent(_Player,_PressurePlate,_Event)
AND
DB_S_TUT_CargoDeck_PressurePlate(_PressurePlate,_Event,_Room,_PlateNumber,_State)
AND
DB_S_TUT_CargoDeck_PressurePlate(_PressurePlate,_OtherEvent,_Room,_PlateNumber,_OtherState)
AND
_Event != _OtherEvent
AND
_State != _OtherState
THEN
NOT DB_S_TUT_CargoDeck_PressurePlate_Used(_Room,_PlateNumber,_OtherState);
DB_S_TUT_CargoDeck_PressurePlate_Used(_Room,_PlateNumber,_State);

IF //Unlocks the door when both pressure plates have been pressed
DB_S_TUT_CargoDeck_PressurePlate_Used(_Room,_Number,"ON")
AND
DB_S_TUT_CargoDeck_PressurePlate_Used(_Room,1,"ON")
AND
DB_S_TUT_CargoDeck_PressurePlate_Used(_Room,2,"ON")
AND
DB_S_TUT_CargoDeck_PressurePlate_Door(_Door,_Room)
THEN
DB_TUT_CargoDeck_PressurePlateDoor_Opened(1);
ItemUnlockAndOpen((ITEMGUID)_Door);
PROC_TUT_CargoDeck_SecurityRoom_AutosaveEnable();

PROC //Prevents the auto save trigger from constantly being readded each time the door is opened.
PROC_TUT_CargoDeck_SecurityRoom_AutosaveEnable()
AND
QueryOnlyOnce("TUT_CargoDeck_SecurityRoom_AutoSaveEnable")
THEN
DB_AutoSaveTrigger(TRIGGERGUID_S_TUT_LowerDeck_AutoSave_88dbb8e6-47d3-4d6c-adb4-6c5039bd5a09);

IF //Closes door if no longer both pressure plates are pressed
DB_S_TUT_CargoDeck_PressurePlate_Used(_Room,_Number,"OFF")
AND
DB_S_TUT_CargoDeck_PressurePlate_Door(_Door,_Room)
THEN
ItemCloseAndLock((ITEMGUID)_Door,"");

//END_REGION

//REGION //Isolation Room

//REGION Helpers
QRY
QRY_TUT_CargoDeck_PrisonDoorOpenOrOpening()
AND
ItemIsOpened(ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c,1)
THEN
DB_NOOP(1);

QRY
QRY_TUT_CargoDeck_PrisonDoorOpenOrOpening()
AND
DoorIsOpening(ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c,1)
THEN
DB_NOOP(1);
//END_REGION

//REGION // Sleeping magister approach

IF //Sets the magister to sleep
StoryEvent(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_MagisterSit")
THEN
ApplyStatus(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "SLEEPING", -1.0, 1);

PROC //Allows for player to speak to the guard
PROC_GLOBAL_DialogStartRequested(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,_Player)
AND
HasActiveStatus(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "SLEEPING", 1)
THEN
RemoveStatus(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "SLEEPING");

IF
DialogStarted("TUT_CargoDeck_MagisterGuard", _)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardAwakens",0)
THEN
DB_TUT_CargoDeck_Isolation_LeverInteraction("TUT_CargoDeck_Isolation_GuardInteractionComplete");

IF
DialogEnded("TUT_CargoDeck_MagisterGuard", _)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardAwakens",0)
THEN
NOT DB_TUT_CargoDeck_Isolation_LeverInteraction("TUT_CargoDeck_Isolation_GuardInteractionComplete");

PROC //Stops player from triggering the cage open and triggers dialog with guard
ProcBlockUseOfItem(_Player,_Lever)
AND
DB_IsPlayer((CHARACTERGUID)_Player)
AND
DB_TUT_CargoDeck_Isolation_Levers(_Lever,_Door)
AND
NOT DB_TUT_CargoDeck_Isolation_LeverInteraction("TUT_CargoDeck_Isolation_GuardInteractionComplete")
THEN
PROC_TUT_CargoDeck_LeverPulledGuardSleeping((ITEMGUID)_Lever, (CHARACTERGUID)_Player);

PROC
PROC_TUT_CargoDeck_LeverPulledGuardSleeping((ITEMGUID)_Lever, (CHARACTERGUID)_Player)
AND
//Not yet in a dialog
QRY_SpeakerIsAvailable(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
// Not waking up to start a dialog about the lever
NOT DB_TUT_CargoHold_Isolation_LeverPulled(_,_)
AND
// Can see perpetrator
CharacterCanSee(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, _Player, 1)
THEN
DB_CustomUseItemResponse(_Player,_Lever,0);
DB_TUT_CargoHold_Isolation_LeverPulled(_Lever,_Player);
PROC_TUT_CargoHold_CheckLeverlPulled((CHARACTERGUID)_Player);
ObjectSetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_Guard_LeverWake");
RemoveStatus(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "SLEEPING");

IF //Triggers a dialog with the magister if he is woken up
CharacterStatusRemoved(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "SLEEPING",_)
AND
DB_TUT_CargoHold_Isolation_LeverPulled(_Lever,_Player)
AND
NOT DB_TUT_CargoDeck_Isolation_Prisoner("TUT_CargoDeck_Isolation_Prisoner_Attacked")
THEN
NOT DB_TUT_CargoHold_Isolation_LeverPulled(_Lever,_Player);
PROC_TUT_CargoDeck_TryStartLeverDialog(_Player);

PROC
PROC_TUT_CargoHold_CheckLeverlPulled((CHARACTERGUID)_Player)
AND
DB_TUT_CargoHold_Isolation_LeverPulled(ITEMGUID_S_TUT_CargoDeck_Isolation_Lever002_e1efd6ba-1fa8-4155-a7a2-e74314317988, _Player)
THEN
ObjectSetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoHold_Isolation_PlayerCloseToLever");

PROC
PROC_TUT_CargoDeck_TryStartLeverDialog((CHARACTERGUID)_Player)
AND
QRY_SpeakerIsAvailable(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
CharacterCanSee(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, _Player, 1)
THEN
ProcForceStopDialog(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef);
Proc_StartDialog(0,"TUT_CargoDeck_MagisterGuard",CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,_Player);

IF
DialogEnded("TUT_CargoDeck_MagisterGuard", _)
THEN
ObjectClearFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoHold_Isolation_PlayerCloseToLever");

PROC
PROC_TUT_CargoDeck_TryStartLeverDialog((CHARACTERGUID)_Player)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "TUT_CargoHold_Isolation_PlayerCloseToLever", 0)
THEN
PROC_TUT_CargoDeck_TryGuardBackToSleep();

IF
DialogEnded("TUT_CargoDeck_MagisterGuard", _)
THEN
PROC_TUT_CargoDeck_TryGuardBackToSleep();

PROC
PROC_TUT_CargoDeck_TryGuardBackToSleep()
AND
HasActiveStatus(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "SITTING", 1)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardAwakens",0)
THEN
ApplyStatus(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "SLEEPING", -1.0, 1);

//END_REGION

//REGION // Prisoner asks for player to approach

IF
CharacterEnteredTrigger(_Player,TRIGGERGUID_S_TUT_CargoDeck_UnrulyPrisoner_Trigger_6284e421-8805-4dc3-9aed-74abb0bd3ba4)
AND
QueryOnlyOnce("TUT_CargoDeck_PrisonerCall")
THEN
Proc_StartDialog(1,"TUT_AD_CargoDeck_UnrulyPrisoners",CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);

//END_REGION

//REGION // Magister combat and prisoner release
IF //Checks if the player had a conversation with the guard
DialogEnded("TUT_CargoDeck_MagisterGuard",_)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardAwakens",1)
THEN
DB_TUT_CargoDeck_Isolation_LeverInteraction("TUT_CargoDeck_Isolation_GuardInteractionComplete");

IF
DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
THEN
DB_TUT_CargoDeck_Isolation_LeverInteraction("TUT_CargoDeck_Isolation_GuardInteractionComplete");

IF //Allows the player to open any of the cages
CharacterUsedItem(_Player,_Lever)
AND
DB_TUT_CargoDeck_Isolation_Levers(_Lever,_Door)
AND
DB_TUT_CargoDeck_Isolation_LeverInteraction("TUT_CargoDeck_Isolation_GuardInteractionComplete")
AND
ItemIsLocked(_Door,1)
THEN
ItemUnlockAndOpen(_Door);
DB_TUT_CargoDeck_Isolation_SecondPull(_Lever,_Player);

IF
DB_TUT_CargoDeck_Isolation_SecondPull(ITEMGUID_S_TUT_CargoDeck_Isolation_Lever002_e1efd6ba-1fa8-4155-a7a2-e74314317988,_Player)
AND
DB_IsPlayer(_Player)
THEN
ObjectSetFlag(_Player,"TUT_Cargodeck_Isolation_PrisonBreak");

IF //Sets magister to hostile if his stool is removed
CharacterStatusRemoved(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "SITTING",_)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardLeavesPrisoner",0)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardReleasesPrisoner",0)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardFlee",0)
AND
DB_IsPlayer(_Player)
THEN
RemoveStatus(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "SLEEPING");
ObjectSetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "TUT_CargoDeck_Isolation_MagisterWakes");
CharacterLookAt(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,_Player);
TimerLaunch("TUT_CargoDeck_Isolation_MagisterHostile",3000);
DB_TUT_CargoDeck_Isolation_Magister("TUT_CargoDeck_Isolation_Magister_ChairPulled");

IF
DialogEnded("TUT_CargoDeck_MagisterGuard",_)
AND
DB_TUT_CargoDeck_Isolation_Magister("TUT_CargoDeck_Isolation_Magister_ChairPulled")
THEN
Proc_StartDialog(1,"TUT_AD_CargoDeck_MagisterGuard",CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef);
SetRelationIndivFactionToPlayers(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,-100);
DB_TUT_CargoDeck_Isolation_LeverInteraction("TUT_CargoDeck_Isolation_GuardInteractionComplete");

IF //Sets magister hostile
TimerFinished("TUT_CargoDeck_Isolation_MagisterHostile")
AND
DB_IsPlayer(_Player)
THEN
Proc_StartDialog(1,"TUT_AD_CargoDeck_MagisterGuard",CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef);
SetRelationIndivFactionToPlayers(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,-100);
DB_TUT_CargoDeck_Isolation_LeverInteraction("TUT_CargoDeck_Isolation_GuardInteractionComplete");

IF //If the cage door is picklocked it will also trigger the right events
ItemUnlocked(ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c,_Player,_)
AND
NOT DB_Dead(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardReleasesPrisoner",0)
THEN
ObjectSetFlag(_Player,"TUT_Cargodeck_Isolation_PrisonBreak");

// Immediately open the door after it gets unlocked, because the prisoner tries to cast
// a fireball through it, which then hits both the door, himself and nearby players
IF
ItemUnlocked(ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c,_Player,_)
AND
NOT QRY_TUT_CargoDeck_PrisonDoorOpenOrOpening()
THEN
SetRelationIndivFactionToPlayers(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,100);
ItemOpen(ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c);

IF //Ensures that the player is pulled out of conversation with the prisoner when combat starts with the magister when the magister has not left yet. 
ObjectEnteredCombat(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,_)
AND
NOT DB_Dead(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardLeavesPrisoner",0)
THEN
ProcForceStopDialog(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);

IF //Sets the events up for when the prisoner is freed
ObjectFlagSet("TUT_Cargodeck_Isolation_PrisonBreak",_Player,_)
AND
NOT DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardLeavesPrisoner",0)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardReleasesPrisoner",0)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardFlee",0)
AND
NOT DB_TUT_CargoDeck_Isolation_Prisoner("TUT_CargoDeck_Isolation_Prisoner_Attacked")
AND
GetPosition(TRIGGERGUID_S_TUT_CargoDeck_Isolation_GuardStandUp_07105ef4-4e7a-4027-bf30-70bc6efb3c91,_X,_Y,_Z)
THEN
ObjectSetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_Magister_Prisonbreak");
RemoveStatus(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "SITTING");
SetRelationIndivFactionToPlayers(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,100);
// don't stop magister dialog, as this flag gets set inside a dialog and then it would abort in the middle of an answer node
// (should maybe use a database and check it at the end though)
ProcForceStopDialog(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);
ProcMakeNPCHostile((CHARACTERGUID)CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef);
GlobalSetFlag("TUT_CargoDeck_PrisonerFreed");
PROC_TUT_CargoDeck_PrisonBreakOut((CHARACTERGUID)_Player);

PROC //Checks whether the flag is called in conversation or out of conversation and will end the dialog with the magister if it is set out of conversation
PROC_TUT_CargoDeck_PrisonBreakOut((CHARACTERGUID)_Player)
AND
QRY_SpeakerIsAvailable(_Player)
THEN
ProcForceStopDialog(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef);

IF //Allows the player to open the cage from dialog.
ObjectFlagSet("TUT_Cargodeck_Isolation_PrisonBreak",_Player,_)
AND
ItemIsLocked(ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c,1)
THEN
CharacterUseItem((CHARACTERGUID)_Player,ITEMGUID_S_TUT_CargoDeck_Isolation_Lever002_e1efd6ba-1fa8-4155-a7a2-e74314317988,"TUT_CargoDeck_Isolation_LeverPull");
ItemUnlockAndOpen(ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c);
DB_TUT_CargoDeck_Isolation_SecondPull(ITEMGUID_S_TUT_CargoDeck_Isolation_Lever002_e1efd6ba-1fa8-4155-a7a2-e74314317988,_Player);

IF //Sets magister to hostile if dialog hostile flag is set.
DialogEnded("TUT_CargoDeck_MagisterGuard",_ID)
AND
DB_DialogPlayers(_ID,_Player,_)
AND
ObjectGetFlag(_Player,"TUT_CargoDeck_Isolation_MagisterHostile",1)
THEN
SetRelationIndivFactionToPlayers(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,-100);
DB_TUT_CargoDeck_Isolation_LeverInteraction("TUT_CargoDeck_Isolation_GuardInteractionComplete");
//END_REGION

//REGION //Resolution

//REGION //Guard leaves player behind with prisoner
IF //Causes the guard to leave the player behind with the prisoner
DialogEnded("TUT_CargoDeck_MagisterGuard",_)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardLeavesPrisoner",1)
THEN
SetHasDialog(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,0);
SetVarInteger(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "ForceSynchWhileMoving", 1);
ProcStateManagerCharacterMoveTo(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,TRIGGERGUID_TeleportTrigger_001_ed6cbd10-1893-4768-87d4-53aaf995dbfe,0,2.0,"TUT_CargoDeck_Isolation_GuardLeaves","");
//END_REGION

IF //If the magister is within 18 units of the lever, and the player opens the cell door of the prisoner, the guard will turn hostile.
ItemOpened(ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c)
AND
NOT DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardLeavesPrisoner",1)
AND
GetDistanceTo(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,ITEMGUID_S_TUT_CargoDeck_Isolation_Lever002_e1efd6ba-1fa8-4155-a7a2-e74314317988,_Distance)
AND
_Distance <= 18.0
THEN
DB_TUT_CargoDeck_Isolation_GuardLeavesPrisoner("DB_TUT_CargoDeck_Isolation_PrisonerReleasedNearGuard");
CharacterLookAt(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c);
SetRelationIndivFactionToPlayers(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,-100);
SetRelationIndivFactionToPlayers(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,100);
ProcMakeNPCHostile(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);

IF //Sets up the prisoner betrayal sequence if the magister was killed during his departure
ObjectLeftCombat(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_ID)
AND
DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
NOT DB_Dead(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae)
AND
DB_TUT_CargoDeck_Isolation_GuardLeavesPrisoner("DB_TUT_CargoDeck_Isolation_PrisonerReleasedNearGuard")
AND
QRY_GetClosestAvailableCharacterTo(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,1)
AND
DB_ClosestAvailableCharacterTo(_Player,CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_)
AND
QueryOnlyOnce("TUT_CargoDeck_Isolation_MagisterLeave_DeathBetrayalCheck")
THEN
ProcForceStopDialog(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);
Proc_StartDialog(0,"TUT_CargoDeck_UnrulyPrisoner",CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_Player);

//REGION //Guard takes prisoner with him and prisoner to kill the guard
IF //Triggered if player convinces magister to free the prisoner
DialogEnded("TUT_CargoDeck_MagisterGuard",_)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardReleasesPrisoner",1)
THEN
DB_TUT_CargoDeck_Isolation_MagisterEscort("DB_TUT_CargoDeck_Isolation_MagisterEscort_Active");
SetHasDialog(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,0);
SetVarInteger(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "ForceSynchWhileMoving", 1);
ProcStateManagerCharacterMoveTo(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,ITEMGUID_S_TUT_CargoDeck_Isolation_Lever002_e1efd6ba-1fa8-4155-a7a2-e74314317988,0,2.0,"TUT_CargoDeck_Isolation_Magister_LeverPulling","");

IF
StoryEvent(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_Magister_LeverPulling")
AND
QueryonlyOnce("TUT_CargoDeck_Isolation_PullLever")
THEN
PROC_TUT_CargoDeck_GuardOpenCageIfClosed();
TimerLaunch("TUT_CargoDeck_Isolation_PrisonerRelease",3000);

PROC
PROC_TUT_CargoDeck_GuardOpenCageIfClosed()
AND
NOT QRY_TUT_CargoDeck_PrisonDoorOpenOrOpening()
THEN
CharacterUseItem(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,ITEMGUID_S_TUT_CargoDeck_Isolation_Lever002_e1efd6ba-1fa8-4155-a7a2-e74314317988,"TUT_CargoDeck_Isolation_LeverPull");

IF
AttackedByObject(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,_Player,_Player,_,_)
AND
DB_IsPlayer((CHARACTERGUID)_Player)
AND
DB_TUT_CargoDeck_Isolation_MagisterEscort("DB_TUT_CargoDeck_Isolation_MagisterEscort_Active")
AND
QRY_TUT_CargoDeck_PrisonDoorOpenOrOpening()
THEN
SetRelationIndivFactionToPlayers(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,100);
GlobalSetFlag("TUT_CargoDeck_PrisonerFreed");

IF //Causes the guard to pull the lever to free the prisoner
StoryEvent(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_LeverPull")
THEN
Proc_StartDialog(1,"TUT_AD_CargoDeck_Isolation_MagisterPrisonerFree",CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef);

IF //Both guard and prisoner go upstairs if convinced to release prisoner
TimerFinished("TUT_CargoDeck_Isolation_PrisonerRelease")
THEN
ProcForceStopDialog(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);
SetHasDialog(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,0);
SetVarInteger(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "ForceSynchWhileMoving", 1);
SetVarInteger(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae, "ForceSynchWhileMoving", 1);
SetVarInteger(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "ForceSynchWhileMoving", 1);
ProcStateManagerCharacterMoveTo(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,TRIGGERGUID_S_TUT_CargoDeck_Isolation_GuardWaypoint_b1cc8648-1401-45d4-91f0-0e304e25f2d2,0,2.0,"TUT_CargoDeck_Isolation_GuardMovedUpstairs","");
SetVarInteger(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae, "ForceSynchWhileMoving", 1);
ProcStateManagerCharacterMoveTo(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,TRIGGERGUID_S_TUT_CargoDeck_Isolation_PrisonerWaypoint_60d4360f-82b3-497a-8842-a3590f926d7e,0,2.0,"TUT_CargoDeck_Isolation_PrisonerMovedToStairs","");

IF
ItemOpened(ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c)
AND
NOT DB_Dead(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae)
THEN
ProcForceStopDialog(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);
SetHasDialog(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,0);

IF
StoryEvent(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardMovedUpstairs")
THEN
Proc_StartDialog(1,"TUT_AD_CargoDeck_MagisterGuardCallToPrisoner", CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);
TimerLaunch("TUT_CargoDeck_Isolation_PrisonerAttack",3500);

IF
TimerFinished("TUT_CargoDeck_Isolation_PrisonerAttack")
AND
DB_IsPlayer(_Player)
THEN
DB_TUT_CargoDeck_Isolation_Betrayal("TUT_CargoDeck_Isolation_Betrayal_MagisterKilled");
CharacterUseSkill(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,"Projectile_Quest_Fireball_Tutorial",CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,0,0,0);
SetRelationIndivFactionToPlayers(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,-100);
ProcForceStopDialog(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef);
ProcForceStopDialog(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);
ProcMakeNPCHostile(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);

IF
AutomatedDialogEnded("TUT_AD_CargoDeck_UnrulyPrisonerBetrayal",_)
AND
DB_IsPlayer(_Player)
THEN
CharacterLookAt(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_Player);
Proc_StartDialog(1,"TUT_AD_CargoDeck_UnrulyPrisonerRemorse",CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);

IF
DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
DB_TUT_CargoDeck_Isolation_Betrayal("TUT_CargoDeck_Isolation_Betrayal_MagisterKilled")
THEN
Proc_StartDialog(1,"TUT_AD_CargoDeck_UnrulyPrisonerBetrayal",CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);
ObjectSetFlag(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,"TUT_CargoDeck_Isolation_PrisonerKilledMagister");

//END_REGION

IF //Sets prisoner in the windego room if he was allowed to escape
StoryEvent(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,"TUT_CargoDeck_Isolation_PrisonerLeaves")
AND
GetPosition(TRIGGERGUID_S_TUT_LowerDeck_HemwarAppear_688ee95a-1e39-4b0f-84fa-fe9ab692a2bb,_X,_Y,_Z)
THEN
DB_TUT_CargoDeck_Isolation_MoveToWindego("TUT_CargoDeck_Isolation_MoveToWindego_Complete");
SetOnStage(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,1);
SetFaction(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,"FTJ_SW_Windego");
TeleportToPosition(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_X,_Y,_Z,"TUT_CargoDeck_Isolation_PrisonerWentUp",0);
SetVarFixedString(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae, "currentState", "");
CharacterLookAt(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,CHARACTERGUID_S_TUT_LowerDeck_CrossBowMagister_000_c4531ec5-203f-4ff2-95f6-ac14b9cf7994);

//REGION //If player allowed for Rennart to go updeck
IF //Sets the death flag for Rennart if he went up
StoryEvent(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardLeaves")
AND
GetPosition(TRIGGERGUID_S_TUT_TopDeck_MagisterRennartSpawn_1703f9de-4f8d-42b5-b348-b33fa6d9b715,_X,_Y,_Z)
THEN
NOT DB_TUT_CargoDeck_WindegoDeaths(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef);
ObjectSetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardWentAway");
CharacterAppearAtPosition(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,_X,_Y,_Z,0,"TUT_CargoDeck_Isolation_GuardWentUp");

IF //Leaves dead corpse of Rennart on top deck if player convinced Rennart to go up deck
FadeOutDone(_,"TUT_LowerDeck_BlackOutAfterWindego")
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardWentAway",1)
AND
GetPosition(TRIGGERGUID_S_TUT_TopDeck_MagisterRennartSpawn_1703f9de-4f8d-42b5-b348-b33fa6d9b715,_X,_Y,_Z)
THEN
CharacterAppearAtPosition(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,_X,_Y,_Z,0,"TUT_CargoDeck_Isolation_GuardWentUp");
CharacterDie(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,1,"Physical");

//END_REGION

//END_REGION

//REGION //Magister Death 

IF
DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
DB_IsPlayer(_Player)
AND
DB_Sees(_Player,CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
THEN
ObjectSetFlag(_Player,"TUT_CargoDeck_Isolation_MagisterKilled");

IF
DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardAwakens",0)
AND
DB_IsPlayer(_Player)
THEN
PartySetFlag(_Player,"TUT_CargoHold_Isolation_MagisterMurderedByPlayer");

IF
DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardAwakens",1)
AND
DB_IsPlayer(_Player)
THEN
PartySetFlag(_Player,"TUT_CargoHold_Isolation_MagisterDeathSelfDefense");

IF
DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
ObjectGetFlag(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,"TUT_CargoDeck_Isolation_PrisonerKilledMagister",1)
AND
DB_IsPlayer(_Player)
THEN
PartySetFlag(_Player,"TUT_CargoHold_Isolation_MagisterKilledBeforePlayer");


IF
DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
DB_IsPlayer(_Player)
AND
DB_Sees(_Player,CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
QueryonlyOnce("TUT_CargoDeck_Isolation_MagisterDeath")
THEN
ProcObjectTimer(_Player,"TUT_CargoDeck_Isolation_MagisterDeath",3000);

PROC
ProcObjectTimerFinished(_Player,"TUT_CargoDeck_Isolation_MagisterDeath")
THEN
StartVoiceBark("TUT_VB_CargoDeck_Isolation_MagisterDeath",(CHARACTERGUID)_Player);


//END_REGION

//REGION //Prisoner Betrayal resolution

IF
DB_Sees(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_Player)
AND
DB_IsPlayer(_Player)
AND
NOT DB_TUT_CargoDeck_Isolation_MoveToWindego("TUT_CargoDeck_Isolation_MoveToWindego_Complete")
AND
GlobalGetFlag("TUT_CargoDeck_PrisonerFreed",1)
AND
DB_TUT_CargoDeck_Isolation_PrisonerDialogTimer("TUT_CargoDeck_Isolation_PrisonerDialogTimer_Active")
AND
NOT DB_TUT_CargoDeck_Isolation_PrisonerDialog("TUT_CargoDeck_Isolation_PrisonerDialog_Triggered")
AND
QRY_SpeakerIsAvailableAndInDialogRange(_Player, CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae)
THEN
DB_TUT_CargoDeck_Isolation_PrisonerDialog("TUT_CargoDeck_Isolation_PrisonerDialog_Triggered");
DB_TUT_CargoDeck_Isolation_PrisonerDialogTimer("TUT_CargoDeck_Isolation_PrisonerDialogTimer_Inactive");
Proc_StartDialog(0,"TUT_CargoDeck_UnrulyPrisoner",CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_Player);

IF
TimerFinished("TUT_CargoDeck_Isolation_PrisonerResolutionDialog")
AND
NOT DB_TUT_CargoDeck_Isolation_PrisonerDialogTimer("TUT_CargoDeck_Isolation_PrisonerDialogTimer_Inactive")
THEN
SetHasDialog(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae, 0);
SetVarInteger(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae, "ForceSynchWhileMoving", 1);
ProcStateManagerCharacterMoveTo(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,TRIGGERGUID_TeleportTrigger_001_ed6cbd10-1893-4768-87d4-53aaf995dbfe,0,2.0, "TUT_CargoDeck_Isolation_PrisonerLeaves","");


IF //After the post combat dialog with prisoner has concluded, the prisoner becomes hostile to the player
DialogEnded("TUT_CargoDeck_UnrulyPrisoner",_)
AND
DB_IsPlayer(_Player)
AND
GlobalGetFlag("TUT_CargoDeck_PrisonerFreed",1)
AND
PartyGetFlag(_Player,"TUT_CargoDeck_Isolation_Hemwar_Betrayal",1)
AND
DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
THEN
SetRelationIndivFactionToPlayers(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,-100);

IF //After the post combat dialog with prisoner has concluded, the prisoner becomes hostile to the player
DialogEnded("TUT_CargoDeck_UnrulyPrisoner",_)
AND
DB_IsPlayer(_Player)
AND
GlobalGetFlag("TUT_CargoDeck_PrisonerFreed",1)
AND
PartyGetFlag(_Player,"TUT_CargoDeck_Isolation_Hemwar_Betrayal",1)
AND
QRY_TUT_CargoDeck_GuardGone()
THEN
SetRelationIndivFactionToPlayers(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,-100);

IF //If the player unlocks the cage after fighting the magister, the prisoner will engage in conversation with the player
ItemOpened(ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c)
AND
QRY_TUT_CargoDeck_GuardGone()
AND
NOT DB_TUT_CargoDeck_Isolation_Prisoner("TUT_CargoDeck_Isolation_Prisoner_Attacked")
THEN
GlobalSetFlag("TUT_CargoDeck_PrisonerFreed");
DB_TUT_CargoDeck_Isolation_PrisonerDialogTimer("TUT_CargoDeck_Isolation_PrisonerDialogTimer_Active");
TimerLaunch("TUT_CargoDeck_Isolation_PrisonerResolutionDialog",10000);

//REGION //Prisoner Death
IF
CharacterKilledBy(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_Player,_Player)
AND
DB_IsPlayer(_Player)
AND
DB_Sees(_Player,CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae)
THEN
ObjectSetFlag(_Player,"TUT_CargoDeck_Isolation_PrisonerKilled");
TimerLaunch("TUT_CargoDeck_Isolation_PrisonerDeath",2000);


IF
TimerFinished("TUT_CargoDeck_Isolation_PrisonerDeath")
AND
DB_IsPlayer(_Player)
AND
PartyGetFlag(_Player,"TUT_CargoDeck_Isolation_Hemwar_Betrayal",1)
AND
QueryOnlyOnce("TUT_VB_CargoDeck_Isolation_PrisonerDeath")
THEN
StartVoiceBark("TUT_VB_CargoDeck_Isolation_PrisonerDeath",_Player);

//END_REGION

//END_REGION

//REGION //Post Battle Prisoner Resolution

QRY
QRY_TUT_CargoDeck_GuardGone()
AND
DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
THEN
DB_NOOP(1);

QRY
QRY_TUT_CargoDeck_GuardGone()
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardLeavesPrisoner",1)
THEN
DB_NOOP(1);

IF
ObjectLeftCombat(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_)
AND
NOT DB_Dead(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae)
AND
QRY_TUT_CargoDeck_GuardGone()
THEN
PROC_TUT_PrisonerFreeGuardGone();

PROC
PROC_TUT_PrisonerFreeGuardGone()
AND
GlobalGetFlag("TUT_CargoDeck_PrisonerFreed",1)
AND
ObjectGetFlag(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,"TUT_CargoDeck_Isolation_PrisonerKilledMagister",0)
THEN
NOT DB_TUT_CargoDeck_Isolation_PrisonerDialogTimer("TUT_CargoDeck_Isolation_PrisonerDialogTimer_Inactive");
DB_TUT_CargoDeck_Isolation_PrisonerDialogTimer("TUT_CargoDeck_Isolation_PrisonerDialogTimer_Active");
TimerLaunch("TUT_CargoDeck_Isolation_PrisonerResolutionDialog",10000);

PROC
PROC_TUT_PrisonerFreeGuardGone()
AND
ObjectGetFlag(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,"TUT_CargoDeck_Isolation_PrisonerKilledMagister",1)
THEN
SetHasDialog(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae, 0);
SetVarInteger(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae, "ForceSynchWhileMoving", 1);
ProcStateManagerCharacterMoveTo(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,TRIGGERGUID_TeleportTrigger_001_ed6cbd10-1893-4768-87d4-53aaf995dbfe,0,2.0, "TUT_CargoDeck_Isolation_PrisonerLeaves","");


//END_REGION

//REGION //Magister Post Battle

QRY
QRY_TUT_CargoDeck_PrisonerEscapeState()
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardReleasesPrisoner",1)
AND
ItemIsLocked(ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c, 0)
THEN
DB_NOOP(1);

QRY
QRY_TUT_CargoDeck_PrisonerEscapeState()
AND
GlobalGetFlag("TUT_CargoDeck_PrisonerFreed",1)
THEN
DB_NOOP(1);

IF
ObjectLeftCombat(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,_)
AND
QRY_TUT_CargoDeck_PrisonerEscapeState()
AND
NOT DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
THEN
PROC_TUT_PrisonerDeadGuardAlone();

PROC
PROC_TUT_PrisonerDeadGuardAlone()
AND
NOT DB_Dead(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae)
THEN
ProcForceStopDialog(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef);
ProcForceStopDialog(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);
ProcMakeNPCHostile((CHARACTERGUID)CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,(CHARACTERGUID)CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef);

PROC
PROC_TUT_PrisonerDeadGuardAlone()
AND
DB_Dead(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae)
THEN
SetHasDialog(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, 0);
SetVarInteger(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "ForceSynchWhileMoving", 1);
ProcStateManagerCharacterMoveTo(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,TRIGGERGUID_TeleportTrigger_001_ed6cbd10-1893-4768-87d4-53aaf995dbfe,0,2.0,"TUT_CargoDeck_Isolation_GuardLeaves","");


//END_REGION

IF
AttackedByObject(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_Player,_Player,_,_)
AND
ItemIsOpened(ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c,1)
AND
DB_IsPlayer((CHARACTERGUID)_Player)
AND
CharacterIsEnemy(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_Player,0)
AND
CombatGetIDForCharacter(_Player,_CombatID)
THEN
ProcWarnPlayerOfAttack(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_Player,_CombatID);

// Prisoner attacked while still in jail -> both guard and prisoner hostile
IF
AttackedByObject(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_Player,_Player,_,_)
AND
DB_IsPlayer((CHARACTERGUID)_Player)
AND
GlobalGetFlag("TUT_CargoDeck_PrisonerFreed",0)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardAwakens",0)
THEN
PROC_TUT_CargoDeck_MakeGuardAndPrisonerHostileToPlayer((CHARACTERGUID)_Player);

// Prisoner attacked while guard is going to free or escorting him -> both guard and prisoner hostile
IF
AttackedByObject(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_Player,_Player,_,_)
AND
DB_IsPlayer((CHARACTERGUID)_Player)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardReleasesPrisoner",1)
THEN
PROC_TUT_CargoDeck_MakeGuardAndPrisonerHostileToPlayer((CHARACTERGUID)_Player);

PROC
PROC_TUT_CargoDeck_MakeGuardAndPrisonerHostileToPlayer((CHARACTERGUID)_Player)
THEN
DB_TUT_CargoDeck_Isolation_Prisoner("TUT_CargoDeck_Isolation_Prisoner_Attacked");
RemoveStatus(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, "SLEEPING");
Proc_StartDialog(1,"TUT_AD_CargoDeck_MagisterGuard",CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef);
SetRelationIndivFactionToPlayers(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,-100);
SetRelationIndivFactionToPlayers(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,-100);


//END_REGION

//REGION //Security Room Two

IF
CharacterItemEvent(_Player,ITEMGUID_S_TUT_CargoDeck_SecurityRoomTwo_DoorLever_c5e2b0d1-4b06-4e4b-92a3-3b1dc9796f46,"TUT_CargoDeck_SecurityRoomTwo_DoorOpen")
THEN
ItemUnlockAndOpen(ITEMGUID_S_TUT_CargoDeck_SecurityRoomTwo_Door_3bcaf90b-2439-458a-a5fd-3cac478af9a6);


//END_REGION

//REGION //Bed tutorial
IF
CharacterUsedItem(_Player,ITEMGUID_S_TUT_CargoDeck_MedicalBay_Bed_9b6d7758-8bbe-4e3f-b6a2-8c4a771a53d8)
THEN
PROC_CheckPlayTut(_Player,"TUT_Bed");
//END_REGION

//REGION //Selection Tutorial

IF
CharacterEnteredTrigger(_Player,TRIGGERGUID_S_TUT_CargoDeck_AnimalPen_SelectionTutorial_da34033c-0f5f-4f38-9813-b21ea50e15ce)
THEN
PROC_CheckPlayTut(_Player,"TUT_SelectionActiveSearch_Controller");

//END_REGION

//REGION //Crafting tutorial
IF //Tracks potential healing potion crafting reagents
ItemTemplateAddedToCharacter(_Ingredient,_Item,_Player)
AND
DB_IsPlayer(_Player)
AND
DB_Tutorial_CargoDeck_MedicalBay_Ingredients((GUIDSTRING)_Ingredient,_IngredientName)
AND
StringConcatenate("S_TUT_CargoDeck_Ingredient_",_IngredientName,_Flag)
AND
NOT DB_HasStoryEvent(_Item,_Flag)
THEN
DB_HasStoryEvent(_Item,_Flag);

IF //Displays crafting tutorial when one acquires reagents for a healing potion
DB_HasStoryEvent(_Item,_Flag)
AND
DB_IsPlayer(_Player)
AND
DB_HasStoryEvent(_Item,"S_TUT_CargoDeck_Ingredient_Bottle")
AND
DB_HasStoryEvent(_OtherItem,_OtherFlag)
AND
_OtherItem != _Item
AND
DB_HasStoryEvent(_OtherItem,"S_TUT_CargoDeck_Ingredient_Mushroom")
THEN
PROC_CheckPlayTut(_Player,"TUT_CombineCrafting");

IF //Displays crafting recipe tutorial after crafting tutorial
ItemAddedToCharacter(ITEMGUID_BOOK_RCP_Potions_000_2eff05cc-e359-4612-90ca-d67bcd52b00d,_Player)
AND
DB_IsPlayer(_Player)
AND
NOT DB_TUT_CargoDeck_MedicalBay_Tutorial(1)
THEN
PROC_CheckPlayTut(_Player,"TUT_CraftingRecipe");

IF //Does not play recipe tutorial if player read the recipe book
GameBookInterfaceClosed(ITEMGUID_BOOK_RCP_Potions_000_2eff05cc-e359-4612-90ca-d67bcd52b00d,_Player)
AND
QueryOnlyOnce("TUT_CargoDeck_TutorialRecipeUsed")
THEN
DB_TUT_CargoDeck_MedicalBay_Tutorial(1);
//END_REGION

//REGION //Door bash tutorial

IF
DB_DestroyedItems(ITEMGUID_S_TUT_CargoDeck_MedicalBay_Door_fb7ac9d0-d334-4778-8a0a-d0bf266e120c)
THEN
ProcTriggerRegisterForPlayers(TRIGGERGUID_S_TUT_CargoDeck_MedicalBay_Voicebark_3ee55543-1146-47b6-a66c-288003ead701);


IF
CharacterEnteredTrigger(_Player,TRIGGERGUID_S_TUT_CargoDeck_MedicalBay_Voicebark_3ee55543-1146-47b6-a66c-288003ead701)
AND
DB_IsPlayer(_Player)
AND
QueryOnlyOnce("TUT_CargoDeck_MedicalBay_DoorBust")
THEN
StartVoiceBark("TUT_VB_CargoDeck_MedicalBay_DoorBust",_Player);


IF
CharacterUsedItem(_Player,ITEMGUID_S_TUT_CargoDeck_MedicalBay_Door_fb7ac9d0-d334-4778-8a0a-d0bf266e120c)
AND
DB_IsPlayer(_Player)
AND
ObjectIsItem(ITEMGUID_S_TUT_CargoDeck_MedicalBay_Door_fb7ac9d0-d334-4778-8a0a-d0bf266e120c,1)
AND
ItemIsLocked(ITEMGUID_S_TUT_CargoDeck_MedicalBay_Door_fb7ac9d0-d334-4778-8a0a-d0bf266e120c,1)
THEN
PROC_CheckPlayTut(_Player,"TUT_WoodenDoor");


//END_REGION

//REGION //Scroll tutorial
IF
ItemAddedToCharacter(ITEMGUID_Scroll_Skill_Water_LightningBolt_000_aabc538c-b76f-4395-9634-f08cff2a1017, _Player)
AND
DB_InitialTutorialsShown(1)
AND
DB_IsPlayer(_Player)
THEN
PROC_CheckPlayTut(_Player, "TUT_ScrollLightning");
//END_REGION

//REGION //Drag tutorial

IF
CharacterMovedItem(_Player,ITEMGUID_S_TUT_CargoDeck_CollaringRoom_Crate_b17df732-9c8d-47b8-9b0a-ed8f4aee5f27)
THEN
DB_TUT_CargoDeck_CollaringRoom_Crate("TUT_CargoDeck_CollaringRoom_Crate_Moved");

IF
ItemAddedToCharacter(ITEMGUID_S_TUT_CargoDeck_CollaringRoom_Crate_b17df732-9c8d-47b8-9b0a-ed8f4aee5f27,_Player)
THEN
DB_TUT_CargoDeck_CollaringRoom_Crate("TUT_CargoDeck_CollaringRoom_Crate_Looted");

IF
ItemDestroying(ITEMGUID_S_TUT_CargoDeck_CollaringRoom_Crate_b17df732-9c8d-47b8-9b0a-ed8f4aee5f27)
THEN
DB_TUT_CargoDeck_CollaringRoom_Crate("TUT_CargoDeck_CollaringRoom_Crate_Destroyed");

IF
CharacterEnteredTrigger(_Player,TRIGGERGUID_S_TUT_CargoDeck_CollaringRoom_DragTutorial_bf65754b-3196-477f-bb20-64e4c9ad6107)
AND
NOT DB_TUT_CargoDeck_CollaringRoom_Crate("TUT_CargoDeck_CollaringRoom_Crate_Moved")
AND
NOT DB_TUT_CargoDeck_CollaringRoom_Crate("TUT_CargoDeck_CollaringRoom_Crate_Looted")
AND
NOT DB_TUT_CargoDeck_CollaringRoom_Crate("TUT_CargoDeck_CollaringRoom_Crate_Destroyed")
THEN
PROC_CheckPlayTut(_Player,"TUT_Drag");
DB_InitialTutorialsShown(1);

//END_REGION

//REGION //Oil tutorial

IF
CharacterStatusApplied(_Player,"SLOWED",_)
AND
GetSurfaceGroundAt(_Player,"SurfaceOil")
THEN
PROC_CheckPlayTutWithDelay(_Player,"TUT_SurfaceOil",1000);

//END_REGION

//REGION //Poison Tutorial

IF
CharacterEnteredTrigger(_Player, TRIGGERGUID_S_TUT_CargoDeck_MedicalBay_OozeTutorial_40341ee0-2ec6-474c-a7f4-1747ac0df273)
AND
QueryOnlyOnce("TUT_CargoDeck_MedicalBay_OozeTutorial")
THEN
DB_TUT_CargoDeck_MedicalBay_PoisonTutorial("TUT_CargoDeck_MedicalBay_PoisonTutorial_Cleared");
PROC_CheckPlayTut(_Player,"TUT_SurfacePoison");

//END_REGION

//REGION //Lockpick tutorial
IF //Plays locked door tutorial 
CharacterUsedItem(_Player,ITEMGUID_S_TUT_CargoDeck_Isolation_Door_477d97e2-3461-4ae5-ae66-8a68cd153fbf)
AND
ObjectIsItem(ITEMGUID_S_TUT_CargoDeck_Isolation_Door_477d97e2-3461-4ae5-ae66-8a68cd153fbf,1)
AND
ItemIsInPartyInventory(ITEMGUID_S_TUT_Cargohold_MedicalBay_Key_6a20cfde-e99c-4394-8111-8ab219dc307d,_Player,0,0)
AND 
ItemIsLocked(ITEMGUID_S_TUT_CargoDeck_Isolation_Door_477d97e2-3461-4ae5-ae66-8a68cd153fbf,1)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardLeaving",1)
THEN
PROC_CheckPlayTut(_Player,"TUT_Locked_UseLockpick");
//END_REGION

//REGION //Tutorial leave message
IF
CharacterEnteredTrigger(_Player,TRIGGERGUID_S_TUT_CargoDeck_Tutorial_MessageTrigger_588feed5-aebe-401b-94ed-10221b6879e0)
THEN
PROC_CheckPlayTut((CHARACTERGUID)_Player,"TUT_Exit");
//END_REGION

//REGION //Pressure plate tutorial message
IF
CharacterItemEvent(_Player,_PressurePlate,_Event)
AND
_Player != NULL_00000000-0000-0000-0000-000000000000
AND
QueryOnlyOnce("TUT_CargoDeck_SecurityRoom_VoiceBark")
AND
DB_S_TUT_CargoDeck_PressurePlate(_PressurePlate,_Event,_Room,_PlateNumber,"ON")
AND
QRY_SpeakerIsAvailable(_Player)
THEN
StartVoiceBark("TUT_VB_CargoDeck_SecurityRoom_PressurePlate",_Player);

//END_REGION 

//REGION //Security Room Two Voicebark

IF
ItemOpened(ITEMGUID_S_TUT_CargoDeck_SecurityRoomTwo_Door_3bcaf90b-2439-458a-a5fd-3cac478af9a6)
THEN
ProcTriggerRegisterForPlayers(TRIGGERGUID_S_TUt_CargoDeck_CollaringRom_TutorialComplete_9e6969fa-8c7e-4c50-940b-a7694ed7aca1);

IF
CharacterEnteredTrigger(_Player,TRIGGERGUID_S_TUt_CargoDeck_CollaringRom_TutorialComplete_9e6969fa-8c7e-4c50-940b-a7694ed7aca1)
AND
DB_DestroyedItems(ITEMGUID_S_TUT_CargoDeck_MedicalBay_Door_fb7ac9d0-d334-4778-8a0a-d0bf266e120c)
AND
QueryOnlyOnce("TUT_CargoDeck_SecurityRoomII_VoiceBark")
AND
DB_IsPlayer(_Player)
THEN
StartVoiceBark("TUT_VB_CargoDeck_SecurityRoomII_Exit",_Player);

//END_REGION

//REGION //Post Windego
IF //Sets up everything after windego wave
FadeOutDone(_,"TUT_LowerDeck_BlackOutAfterWindego")
THEN
DB_TUT_CameraShakeTrigger((TRIGGERGUID)TRIGGERGUID_S_TUT_ShakeTrigger28_386da647-6e57-4610-958e-c45669742e5a, "");
DB_TUT_CameraShakeTrigger(TRIGGERGUID_S_TUT_ShakeTrigger29_a9a551d0-6e64-46ac-bbb3-61c39b8c29e9, "");
DB_TUT_CameraShakeTrigger(TRIGGERGUID_S_TUT_ShakeTrigger30_ce55188b-e639-415a-8551-1dc3fce0705e, "");
DB_TUT_CameraShakeTrigger(TRIGGERGUID_S_TUT_ShakeTrigger31_092ff68f-d308-4ae1-941f-3ca0aa2cc5bf, "");
DB_TUT_CameraShakeTrigger(TRIGGERGUID_S_TUT_ShakeTrigger32_1da72d1d-abff-439d-bced-56afdb9074c4, "");

IF //Kills required people on cargo death for windego blast
TimerFinished("TUT_LowerDeck_WindegoExplosionPeopleEffects")
AND
DB_TUT_CargoDeck_WindegoDeaths(_Char)
THEN
CharacterDie((CHARACTERGUID)_Char,1,"Explode");

PROC //Plays windego initial blast animation
PROC_TUT_Windego_KnockDown_LowerDeck()
AND
GetPosition(TRIGGERGUID_S_TUT_CargoDeck_Isolation_WindegoWave_b5f935df-40ff-4486-aace-d321db2a6e5c,_X,_Y,_Z)
THEN
PlayEffectAtPosition("RS3_FX_Skills_Void_EtherealStorm_Impact_01",_X,_Y,_Z);

IF //Plays windego initial blast animation
TimerFinished("TUT_WindegoAnimationDelay")
AND
GetPosition(TRIGGERGUID_S_TUT_CargoDeck_Isolation_WindegoWave_b5f935df-40ff-4486-aace-d321db2a6e5c,_X,_Y,_Z)
THEN
PlayEffectAtPosition("RS3_FX_Skills_Void_Divine_Cast_Shout_Root_01",_X,_Y,_Z);
TeleportTo(ITEMGUID_S_TUT_CargoDeck_WindegoWave_f5035f0a-62dc-460a-84be-c178c9ad2e2e, TRIGGERGUID_S_TUT_CargoDeck_Isolation_WindegoWave_b5f935df-40ff-4486-aace-d321db2a6e5c);
SetOnStage(ITEMGUID_S_TUT_CargoDeck_WindegoWave_f5035f0a-62dc-460a-84be-c178c9ad2e2e, 1);
ItemSetForceSynch(ITEMGUID_S_TUT_CargoDeck_WindegoWave_f5035f0a-62dc-460a-84be-c178c9ad2e2e, 1);

IF //Launches windego wave
ItemWentOnStage(ITEMGUID_S_TUT_CargoDeck_WindegoWave_f5035f0a-62dc-460a-84be-c178c9ad2e2e, 1)
THEN
ItemMoveToTrigger(ITEMGUID_S_TUT_CargoDeck_WindegoWave_f5035f0a-62dc-460a-84be-c178c9ad2e2e, TRIGGERGUID_S_TUT_CargoDeck_Windego_wave_trigger_1a8282e4-c226-4eb0-ad23-985e06741b8c, 10.0, 1.00, 0);
TimerLaunch("TUT_StopWindegoWave", 10000);

IF //Removes cargo bay windego wave
TimerFinished("TUT_StopWindegoWave")
THEN
ItemSetForceSynch(ITEMGUID_S_TUT_CargoDeck_WindegoWave_f5035f0a-62dc-460a-84be-c178c9ad2e2e, 0);
SetOnStage(ITEMGUID_S_TUT_CargoDeck_WindegoWave_f5035f0a-62dc-460a-84be-c178c9ad2e2e, 0);

PROC
PROC_TUT_SummonTheKraken()
THEN
TimerLaunch("TUT_CargoDeck_BreakTimer",5000);

IF //Initializes various effects when the walls are broken throuh by the kraken
TimerFinished("TUT_CargoDeck_BreakTimer")
THEN
DB_TUT_Splashes_Triggers((TRIGGERGUID)TRIGGERGUID_S_TUT_Splashes_Box_Cargo_cf28a7f4-75d6-49c4-9369-24361a2ba6cb, "TUT_Splashes_Tick_Bottom", "Cargo");
DB_TUT_Splashes_Wave_Timer("Cargo", "Right", "TUT_Splashes_SideWave_Bottom_Right", 0);
DB_TUT_Splashes_Wave_Timer("Cargo", "Left", "TUT_Splashes_SideWave_Bottom_Left", 0);
DB_TUT_Splashes_Wave_Timer("Cargo", "Right", "TUT_Splashes_FrontalWave_Bottom_Right", 1);
DB_TUT_Splashes_Wave_Timer("Cargo", "Left", "TUT_Splashes_FrontalWave_Bottom_Left", 1);
SetOnStage(ITEMGUID_S_TUT_Lightning_CargoDeck_6bea4a63-d9a5-416b-bd36-04e963529fac,1);

//END_REGION

//REGION //Save game patching

IF //Incase the player saved during a conversation with the prisoner
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
AND
NOT DB_Dead(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae)
AND 
NOT QRY_SpeakerIsAvailable(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae)
AND
CharacterIsInCombat(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,0)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardLeavesPrisoner",0)
THEN
PROC_TUT_CargoDeck_PrisonerStopDialog();

PROC //Will force the player out of conversation with the prisoner if the magister is not in combat, unless the magister left the isolation.
PROC_TUT_CargoDeck_PrisonerStopDialog()
AND
NOT DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
CharacterIsInCombat(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,1)
THEN
ProcForceStopDialog(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);

PROC //Will force the player out of conversation with the prisoner if the magister is dead and the player is not experiencing the betrayal dialog from the prisoner.
PROC_TUT_CargoDeck_PrisonerStopDialog()
AND
DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
DB_IsPlayer(_Player)
AND
PartyGetFlag(_Player,"TUT_CargoDeck_Isolation_Hemwar_Betrayal",0)
AND
DB_DialogName("TUT_CargoDeck_UnrulyPrisoner", _ID)
AND
DB_DialogPlayers(_ID,_Player,_)
THEN
ProcForceStopDialog(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);
PROC_TUT_CargoDeck_PrisonerSecondBetrayalApproach((CHARACTERGUID)_Player);

PROC
PROC_TUT_CargoDeck_PrisonerSecondBetrayalApproach((CHARACTERGUID)_Player)
AND
GlobalGetFlag("TUT_CargoDeck_PrisonerFreed",1)
THEN
DB_TUT_CargoDeck_Isolation_PrisonerDialog("TUT_CargoDeck_Isolation_PrisonerDialog_Triggered");
DB_TUT_CargoDeck_Isolation_PrisonerDialogTimer("TUT_CargoDeck_Isolation_PrisonerDialogTimer_Inactive");
Proc_StartDialog(0,"TUT_CargoDeck_UnrulyPrisoner",CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,_Player);

IF // Incase the player opened the cell door while the guard is still in range and then saved. This will make the guard react to the player opening the cage door when he is trying to leave and is still in logical range.
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
AND
ItemIsOpened(ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c,1)
AND
NOT DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
AND
ObjectGetFlag(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,"TUT_CargoDeck_Isolation_GuardLeavesPrisoner",1)
AND
GetDistanceTo(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,ITEMGUID_S_TUT_CargoDeck_Isolation_Lever002_e1efd6ba-1fa8-4155-a7a2-e74314317988,_Distance)
AND
_Distance <= 18.0
THEN
DB_TUT_CargoDeck_Isolation_GuardLeavesPrisoner("DB_TUT_CargoDeck_Isolation_PrisonerReleasedNearGuard");
CharacterLookAt(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,ITEMGUID_S_TUT_CargoDeck_Isolation_CageDoor_fe5ef326-6be6-48f3-a5da-32b106e91c1c);
SetRelationIndivFactionToPlayers(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,-100);
SetRelationIndivFactionToPlayers(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae,100);
ProcMakeNPCHostile(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef,CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae);


IF // Incase the player opened the cell door while the guard is still in range and then saved. This will make the guard react to the player opening the cage door when he is trying to leave and is still in logical range.
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
AND
DB_Dead(CHARACTERGUID_S_TUT_CargoHold_UnrulyPrisoner_d7a61dc6-a249-4e97-9914-53ea24e320ae)
AND
CharacterIsInCombat(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef, 0)
AND
QRY_TUT_CargoDeck_PrisonerEscapeState()
AND
NOT DB_Dead(CHARACTERGUID_TUT_CargoDeck_Humans_Male_Magister_Grunt_000_a06e61dd-58c6-4119-99be-716c3a4fc1ef)
THEN
PROC_TUT_PrisonerDeadGuardAlone();

//END_REGION

PROC
ProcRegionEnded("TUT_Tutorial_A")
THEN
GoalCompleted;
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Tutorial_PrisonShip"
