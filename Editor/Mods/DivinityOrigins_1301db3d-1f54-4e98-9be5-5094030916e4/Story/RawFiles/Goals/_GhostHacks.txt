Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
//REGION Ghost removal
IF
CharacterGhostDestroyed(_,_Ghost)
THEN
DB_GoneGhosts(_Ghost);
ProcRemoveAllDialogEntriesForSpeaker(_Ghost);

IF
CharacterUsedSkillOnTarget(_Player,(CHARACTERGUID)_Ghost,_Skill,_,_)
AND
DB_SourceVampirism_Skills(_Skill)
AND
DB_Ghosts(_Ghost,_)
AND
NOT DB_GhostIgnoreCower(_Ghost)
THEN
CharacterSetAnimationOverride(_Ghost,"cower");

IF
CharacterUsedSkillOnTarget(_Player,(CHARACTERGUID)_Ghost,_Skill,_,_)
AND
DB_SourceVampirism_Skills(_Skill)
AND
DB_Ghosts(_Ghost,_)
THEN
DialogRequestStop(_Ghost);
CharacterLookAt(_Ghost,_Player);
DB_GoneGhosts(_Ghost);
ProcRemoveAllDialogEntriesForSpeaker(_Ghost);
Proc_CharacterVampirisedGhost(_Player,_Ghost);

IF
CharacterUsedSkillOnTarget(_Player,(CHARACTERGUID)_Corpse,_Skill,_,_)
AND
DB_SourceVampirism_Skills(_Skill)
AND
DB_Ghosts(_Corpse,_Ghost,_)
AND
CharacterIsDead(_Corpse,1)
THEN
ProcRemoveAllDialogEntriesForSpeaker(_Ghost);
SetHasDialog(_Ghost,0);
DialogRequestStop(_Ghost);
Proc_CharacterVampirisedGhost(_Player,_Ghost);

PROC
Proc_GhostHacks_GhostPoof((CHARACTERGUID)_Ghost)
AND
GetPosition(_Ghost,_X,_Y,_Z)
THEN
DialogRequestStop(_Ghost);
PlayEffectAtPosition("RS3_FX_GP_ScriptedEvent_GhostDissipate_01",_X,_Y,_Z);
SetOnStage(_Ghost,0);
DB_GoneGhosts(_Ghost);

IF
ObjectFlagSet("GLO_GhostSuck",(CHARACTERGUID)_NPC,_Id)
AND
DialogGetInvolvedPlayer(_Id,1,(CHARACTERGUID)_Player)
THEN
DB_GhostPoofAfterDialog(_NPC,_Player,_Id);
ObjectClearFlag(_NPC,"GLO_GhostSuck",_Id);

IF
ObjectFlagSet("GLO_GhostVanish",(CHARACTERGUID)_NPC,_Id)
THEN
DB_GhostVanishAfterDialog(_NPC,_Id);
ObjectClearFlag(_NPC,"GLO_GhostVanish",_Id);

IF
DialogEnded(_,_Id)
AND
DB_GhostPoofAfterDialog(_NPC,_Player,_Id)
THEN
SetHasDialog(_NPC,0);
CharacterUseSkill(_Player,"Target_SourceVampirism",_NPC, 1, 1, 1);
NOT DB_GhostPoofAfterDialog(_NPC,_Player,_Id);

IF
DialogEnded(_,_Id)
AND
DB_GhostVanishAfterDialog(_NPC,_Id)
THEN
Proc_GhostHacks_GhostPoof(_NPC);
NOT DB_GhostVanishAfterDialog(_NPC,_Id);


PROC
Proc_CharacterVampirisedGhost((CHARACTERGUID)_Char,(CHARACTERGUID)_NPC)
THEN
DB_NOOP(1);

//END_REGION 

//REGION Change a ghosts dialog
PROC
Proc_GhostHacks_ChangeGhostDialog((CHARACTERGUID)_Ghost,(STRING)_Dialog)
THEN
ProcRemoveAllDialogEntriesForSpeaker(_Ghost);
// Don't redefine DB_Ghosts(), it will try to relink the NPC with the ghost
// and that will destroy the ghost
DB_Dialogs(_Ghost,_Dialog);
//END_REGION

//REGION Temporarily disable a global ghost
PROC
Proc_GhostHacks_DisableGlobalNPCGhost((CHARACTERGUID)_Ghost)
AND
DB_Ghosts(_NPC,_Ghost,_)
THEN
DB_GhostHacks_DisabledGhost(_Ghost);
SetOnStage(_Ghost,0);
CharacterUnlinkGhost(_NPC,_Ghost);

PROC
Proc_GhostHacks_EnableGlobalNPCGhostIfDisabled((CHARACTERGUID)_Ghost)
AND
DB_GhostHacks_DisabledGhost(_Ghost)
AND
DB_Ghosts(_NPC,_Ghost,_)
THEN
NOT DB_GoneGhosts(_Ghost);
NOT DB_GhostHacks_DisabledGhost(_Ghost);
CharacterLinkGhost(_NPC,_Ghost);
SetOnStage(_Ghost,1);
//END_REGION

//REGION Creating Ghosts
IF
DB_Ghosts((CHARACTERGUID)_Ghost,(STRING)_Dialog)
THEN
DB_BlockThreatenedDialog(_Ghost);
DB_Dialogs(_Ghost,_Dialog);
CharacterSetImmortal(_Ghost,1);
ProcSetInvulnerable(_Ghost,1);


IF
DB_Ghosts((CHARACTERGUID)_NPC,(CHARACTERGUID)_Ghost,(STRING)_Dialog)
AND
CharacterIsDead(_NPC,0)
THEN
SetOnStage(_Ghost,0);


IF
CharacterResurrected(_NPC)
AND
DB_Ghosts((CHARACTERGUID)_NPC,(CHARACTERGUID)_Ghost,(STRING)_Dialog)
THEN
DB_Dialogs(_Ghost,_Dialog);


IF
DB_Ghosts((CHARACTERGUID)_NPC,(CHARACTERGUID)_Ghost,(STRING)_Dialog)
THEN
DB_Ghosts(_Ghost,_Dialog);
CharacterLinkGhost(_NPC,_Ghost);
CharacterSetImmortal(_Ghost,1);
DB_GhostDialogs(_NPC,_Dialog);
ProcSetInvulnerable(_Ghost,1);


IF
CharacterTurnedToGhost(_,_Ghost)
THEN
CharacterSetImmortal(_Ghost,1);

IF
DB_GhostDialogs((CHARACTERGUID)_NPC,(STRING)_Dialog)
AND
NOT DB_Ghosts(_NPC,_,_)
AND
GetPosition(_NPC,_X,_Y,_Z)
AND
CharacterCreateAtPosition(_X,_Y,_Z,"S_Template_Ghost_6404b96b-270f-48d9-a75f-5670b09f518f",0,_Ghost)
THEN
DB_Ghosts(_NPC,_Ghost,_Dialog);
TeleportTo(_Ghost,_NPC);	//makes sure they're registered in the correct level

IF
CharacterTurnedToGhost(_NPC,_Ghost)
AND
DB_GhostDialogs((CHARACTERGUID)_NPC,(STRING)_Dialog)
THEN
DB_Ghosts(_Ghost,_Dialog);

//END_REGION 
//REGION Visibility tracking
IF
CharacterGhostRevealed(_,_Ghost)
THEN
ObjectSetFlag(_Ghost,"GLO_Ghost_Visible");
//END_REGION

//REGION Haunted NPCs
IF
CharacterDied(_Haunted)
AND
DB_HauntedNPC(_Haunted, (CHARACTERGUID)_Ghost)
THEN
Proc_GhostHacks_GhostPoof(_Ghost);
//END_REGION

//REGION Possessed Items
IF
DB_PossessedItem((ITEMGUID)_Object, _, (STRING)_Dialog, _)
THEN
DB_Dialogs(_Object, _Dialog);

PROC
Proc_DialogFlagSetup(_Dialog, _Object, _Player)
AND
DB_PossessedItem((ITEMGUID)_Object, (ITEMGUID)_Aura, (STRING)_Dialog, (STRING)_Flag)
AND
CharacterCanSeeGhost((CHARACTERGUID)_Player, _Aura, 1)
THEN
ObjectSetFlag(_Player, _Flag, 0);

PROC
Proc_DialogFlagSetup(_Dialog, _Object, _Player)
AND
DB_PossessedItem((ITEMGUID)_Object, (ITEMGUID)_Aura, (STRING)_Dialog, (STRING)_Flag)
AND
CharacterCanSeeGhost((CHARACTERGUID)_Player, _Aura, 0)
THEN
ObjectClearFlag(_Player, _Flag, 0);

IF
ItemDestroyed(_Object)
AND
DB_PossessedItem((ITEMGUID)_Object, (ITEMGUID)_Aura, _, _)
THEN
SetOnStage(_Aura, 0);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Start"
