Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DT - Divine Tomb
//DB_ARX_DT_DeathRoom_Puppet(_Puppet,_Trigger,_Serie)

//REGION AD, VB, etc.
DB_OneShot_VoiceBarkTrigger(TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_LeavingVB_Box_389101e6-c327-4c93-9219-f5e4d9e73248,"ARX_VB_DivineTomb_DeathRoom_Leaving");
//END_REGION

//REGION Puppet spawners & templates
DB_ARX_DT_DeathRoom_PuppetSpawner((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_PuppetSpawn_Point_000_9f25c7c8-8c36-461f-9c42-24924e482eb9);
DB_ARX_DT_DeathRoom_PuppetSpawner((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_PuppetSpawn_Point_001_a1bd7561-8883-4ede-95e7-b336c6c4026a);
DB_ARX_DT_DeathRoom_PuppetSpawner((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_PuppetSpawn_Point_002_dd12dea2-bb4f-4fa7-b301-ec9e46a15761);
DB_ARX_DT_DeathRoom_PuppetSpawner((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_PuppetSpawn_Point_003_d1b82d83-5be4-4dc5-b074-e7e2117a2683);

DB_ARX_DT_DeathRoom_PuppetTemplates("CHARACTERGUID_ARX_DivineTomb_DeathRoom_SourcePuppet_A_1a39d279-41d8-4b3c-a81a-b838b56b9383");
DB_ARX_DT_DeathRoom_PuppetTemplates("CHARACTERGUID_ARX_DivineTomb_DeathRoom_SourcePuppet_B_be875c10-2503-419e-9bdf-8a8ba5131bfd");
DB_ARX_DT_DeathRoom_PuppetTemplates("CHARACTERGUID_ARX_DivineTomb_DeathRoom_SourcePuppet_C_f494ff4e-3977-4786-b140-5fbef9ff47ea");
DB_ARX_DT_DeathRoom_PuppetTemplates("CHARACTERGUID_ARX_DivineTomb_DeathRoom_SourcePuppet_D_ddf80628-38a6-4427-939a-59d982bc3a7f");

DB_ARX_DT_DeathRoom_PuppetSpawnerExcess("ARX_DT_DeathRoom_Trap_MorePuppets_A",(TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_PuppetSpawn_Point_A_6091eb70-a1a2-4ffd-baed-fb840a87b65b,1);
DB_ARX_DT_DeathRoom_PuppetSpawnerExcess("ARX_DT_DeathRoom_Trap_MorePuppets_B",(TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_PuppetSpawn_Point_B_aefa0d88-2541-43ae-a4af-2ab7b7419db2,2);
DB_ARX_DT_DeathRoom_PuppetSpawnerExcess("ARX_DT_DeathRoom_Trap_MorePuppets_C",(TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_PuppetSpawn_Point_C_20b6e25a-a5e5-4bb9-9e2b-4ab6e50b345e,3);

//END_REGION

//REGION Levers
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_000_b8233c89-ca20-860d-2c88-be1392f7de38,"ARX_DT_DeathRoom_AssignedLever_000","ARX_DT_DeathRoom_Trap_SwapPuppetPlayer"); //spp
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_001_92550b83-8c2e-8d0c-2c47-3dea821fdce2,"ARX_DT_DeathRoom_AssignedLever_001","ARX_DT_DeathRoom_Trap_Barrels_B"); //bB
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_002_3dfa2878-e202-8160-4fea-b4984717dec4,"ARX_DT_DeathRoom_AssignedLever_002","ARX_DT_DeathRoom_Trap_SwapPuppetPlayer"); //spp
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_003_21d53946-eae8-8e9d-2da7-f2d37a367250,"ARX_DT_DeathRoom_AssignedLever_003","ARX_DT_DeathRoom_Trap_Turret_ON"); //t
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_004_037122ad-acc5-8e42-42a3-ec8ccc42a06a,"ARX_DT_DeathRoom_AssignedLever_004","ARX_DT_DeathRoom_Trap_Barrels_C"); //bC
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_005_cd0d0317-fd42-849e-278c-1e369135ad1e,"ARX_DT_DeathRoom_AssignedLever_005","ARX_DT_DeathRoom_Trap_FallingStuff_ON"); //fs (falling stuff)
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_006_bac7a10f-888a-8a58-201b-7409e77be916,"ARX_DT_DeathRoom_AssignedLever_006","ARX_DT_DeathRoom_Trap_GasPits_A"); //gpA
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_007_81c66c5b-6617-81ac-1f0c-1470d6a316c9,"ARX_DT_DeathRoom_AssignedLever_007","ARX_DT_DeathRoom_Trap_SpikeFloors_A"); //sfA
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_008_341f88e8-a733-8d1c-10d0-eff974816afc,"ARX_DT_DeathRoom_AssignedLever_008","ARX_DT_DeathRoom_Trap_Turret_ON"); //t
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_009_35aa19ba-3cbc-82f1-4db0-1c6aaada3201,"ARX_DT_DeathRoom_AssignedLever_009","ARX_DT_DeathRoom_Trap_SwapPuppetPlayer"); //spp
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_010_b276ca5a-991c-85d6-1ccb-5fea69ca4075,"ARX_DT_DeathRoom_AssignedLever_010","ARX_DT_DeathRoom_Trap_MorePuppets_B"); //mpB
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_011_ad24622c-19e4-828a-3a10-c8597f4b9c38,"ARX_DT_DeathRoom_AssignedLever_011","ARX_DT_DeathRoom_Trap_FallingStuff_ON"); //fs
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_012_6d62bb36-fcba-85d5-3d9d-bd5ba5114a62,"ARX_DT_DeathRoom_AssignedLever_012","ARX_DT_DeathRoom_Trap_GasPits_B"); //gpB
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_013_6a7f5e28-d5af-859c-18e0-4a1d5b065a22,"ARX_DT_DeathRoom_AssignedLever_013","ARX_DT_DeathRoom_Trap_Barrels_A"); //bA
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_014_c1ac1031-0560-80e5-3684-165f4479d763,"ARX_DT_DeathRoom_AssignedLever_014","ARX_DT_DeathRoom_Trap_GasPits_A"); //gpA
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_015_15322e01-ed9a-8335-3ecc-9dbd863e7218,"ARX_DT_DeathRoom_AssignedLever_015","ARX_DT_DeathRoom_Trap_FallingStuff_ON"); //fs
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_016_42e22ea2-d5fe-8faa-3b77-5ad195056676,"ARX_DT_DeathRoom_AssignedLever_016","ARX_DT_DeathRoom_Trap_SpikeFloors_B"); //sfB
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_017_5b4ed932-dda6-855f-1282-f7142260ee66,"ARX_DT_DeathRoom_AssignedLever_017","ARX_DT_DeathRoom_Trap_Polymorph"); //p
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_018_7d46827f-8e5d-8bde-3892-83f7adca96f4,"ARX_DT_DeathRoom_AssignedLever_018","ARX_DT_DeathRoom_Trap_Turret_ON"); //t
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_019_5f6a2706-07e0-8a7f-47b5-b3c77202386a,"ARX_DT_DeathRoom_AssignedLever_019","ARX_DT_DeathRoom_Trap_MorePuppets_C"); //mpC
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_020_cbbaa0d2-4374-888f-33f0-f336a0d2c0c0,"ARX_DT_DeathRoom_AssignedLever_020","ARX_DT_DeathRoom_Trap_GasPits_B"); //gpB
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_021_8ce3b2c1-a1f2-851f-39c5-fe66f264cc55,"ARX_DT_DeathRoom_AssignedLever_021","ARX_DT_DeathRoom_Trap_SwapPuppetPlayer"); //spp
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_022_2840052a-5787-8767-48bf-88dd75c38952,"ARX_DT_DeathRoom_AssignedLever_022","ARX_DT_DeathRoom_Trap_Turret_ON"); //t
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_023_c1afc6f3-ed5a-8ba1-2c5f-67004cda7684,"ARX_DT_DeathRoom_AssignedLever_023","ARX_DT_DeathRoom_Trap_SpikeFloors_B"); //sfB
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_024_b577b408-ec4b-88d0-4cae-1e5cb9e7f85e,"ARX_DT_DeathRoom_AssignedLever_024","ARX_DT_DeathRoom_Trap_MorePuppets_A"); //mpA
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_025_638d07b2-66f8-8d16-3f77-1c331895dad6,"ARX_DT_DeathRoom_AssignedLever_025","ARX_DT_DeathRoom_Trap_SpikeFloors_A"); //sfA
DB_ARX_DT_DeathRoom_Lever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_Lever_026_c43cf844-0589-887f-3706-b9f23f819fdd,"ARX_DT_DeathRoom_AssignedLever_026","ARX_DT_DeathRoom_Trap_FallingStuff_ON"); //fs

//ARX_DT_DeathRoom_Trap_Turrets
//ARX_DT_DeathRoom_Trap_MorePuppets
//ARX_DT_DeathRoom_Trap_FireBall
//ARX_DT_DeathRoom_Trap_Polymorph


DB_ARX_DT_DeathRoom_GoodLever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_GoodLever_000_9877e4c2-c2bc-8aee-4ae4-795be4c4171d,"ARX_DT_DeathRoom_PulledGoodLever_000",0);
DB_ARX_DT_DeathRoom_GoodLever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_GoodLever_001_bead5560-3e96-8a49-4c5f-9551e489969e,"ARX_DT_DeathRoom_PulledGoodLever_001",0);
DB_ARX_DT_DeathRoom_GoodLever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_GoodLever_002_bcbe0bc6-b4e5-80e7-3652-de2bb379b2c6,"ARX_DT_DeathRoom_PulledGoodLever_002",0);
DB_ARX_DT_DeathRoom_GoodLever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_GoodLever_003_dc445953-c559-854b-1d90-fee6a4198141,"ARX_DT_DeathRoom_PulledGoodLever_003",0);
DB_ARX_DT_DeathRoom_GoodLever((ITEMGUID)ITEMGUID_S_ARX_DivineTomb_DeathRoom_GoodLever_004_dd39cdad-ce8e-8707-43b0-493663d6cc4d,"ARX_DT_DeathRoom_PulledGoodLever_004",0);

//END_REGION

//REGION Traps
/*
DB_ARX_DT_DeathRoom_BarrelPoint((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_Barrel_Point_000_4e726a9b-1ce2-4cb2-90e1-e28339b1b5d8,"ITEMGUID_CONT_Barrel_A_Water_59b25792-1cc2-4364-92eb-89aca8fb8425");
DB_ARX_DT_DeathRoom_BarrelPoint((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_Barrel_Point_001_c5a401c2-6c72-4ff5-ae8d-efbf3a7d6f79,"ITEMGUID_CONT_Barrel_Oil_A_1b34b32c-e96c-404e-90cc-054cb549c558");
DB_ARX_DT_DeathRoom_BarrelPoint((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_Barrel_Point_002_f8721d47-c236-469f-8a68-20fbe3b9d214,"ITEMGUID_CONT_Barrel_Oil_A_1b34b32c-e96c-404e-90cc-054cb549c558");
DB_ARX_DT_DeathRoom_BarrelPoint((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_Barrel_Point_003_5c81182d-85f0-4d7e-b6e4-6ac11d61c00f,"ITEMGUID_CONT_Barrel_Oil_A_1b34b32c-e96c-404e-90cc-054cb549c558");
DB_ARX_DT_DeathRoom_BarrelPoint((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_Barrel_Point_004_d7730c32-8351-4f2f-aa94-b02e069dc654,"ITEMGUID_CONT_Barrel_Oil_A_1b34b32c-e96c-404e-90cc-054cb549c558");
DB_ARX_DT_DeathRoom_BarrelPoint((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_Barrel_Point_005_87c55626-8627-4be1-89cb-373b595dee6d,"ITEMGUID_CONT_Barrel_Oil_A_1b34b32c-e96c-404e-90cc-054cb549c558");
DB_ARX_DT_DeathRoom_BarrelPoint((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_Barrel_Point_006_b6bd6a2d-e035-4e55-8972-67532d555b73,"ITEMGUID_CONT_Barrel_Ooze_A_0ae0668f-418c-46c4-bcbb-1683aa3c68e3");
DB_ARX_DT_DeathRoom_BarrelPoint((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_Barrel_Point_007_f853d561-7b7a-4f53-90e2-7e60a863feca,"ITEMGUID_CONT_Barrel_Ooze_A_0ae0668f-418c-46c4-bcbb-1683aa3c68e3");
DB_ARX_DT_DeathRoom_BarrelPoint((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_Barrel_Point_008_72ada909-8f03-41f5-a735-bc5aca40041f,"ITEMGUID_CONT_Barrel_A_Cursed_c3f43b94-80b1-4b4f-b62a-35b8419940e5");
DB_ARX_DT_DeathRoom_BarrelPoint((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_Barrel_Point_009_6941d766-6d32-40fb-ab7e-923311debd41,"ITEMGUID_CONT_Barrel_Oil_A_1b34b32c-e96c-404e-90cc-054cb549c558");
DB_ARX_DT_DeathRoom_BarrelPoint((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_Barrel_Point_010_aaadda18-9376-4b53-83a0-5efcb52e2b08,"ITEMGUID_CONT_Barrel_A_Cursed_c3f43b94-80b1-4b4f-b62a-35b8419940e5");
DB_ARX_DT_DeathRoom_BarrelPoint((TRIGGERGUID)TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_Barrel_Point_011_72828e71-bc8e-4e88-acfd-febc6a815d81,"ITEMGUID_CONT_Barrel_A_Water_59b25792-1cc2-4364-92eb-89aca8fb8425");
*/
//END_REGION

//REGION Trap events

//DB_ARX_DT_DeathRoom_Events(_LeverEvent,_TurnsOn,_OnEvent,_OffEvent);
DB_ARX_DT_DeathRoom_Events("ARX_DT_DeathRoom_Trap_GasPits_A",2,"ARX_DT_DeathRoom_Trap_GasPits_A_ON","ARX_DT_DeathRoom_Trap_GasPits_A_OFF");
DB_ARX_DT_DeathRoom_Events("ARX_DT_DeathRoom_Trap_GasPits_B",2,"ARX_DT_DeathRoom_Trap_GasPits_B_ON","ARX_DT_DeathRoom_Trap_GasPits_B_OFF");
DB_ARX_DT_DeathRoom_Events("ARX_DT_DeathRoom_Trap_SpikeFloors_A",2,"ARX_DT_DeathRoom_Trap_SpikedFloor_A_ON","ARX_DT_DeathRoom_Trap_SpikedFloor_A_OFF");
DB_ARX_DT_DeathRoom_Events("ARX_DT_DeathRoom_Trap_SpikeFloors_B",2,"ARX_DT_DeathRoom_Trap_SpikedFloor_B_ON","ARX_DT_DeathRoom_Trap_SpikedFloor_B_OFF");
//DB_ARX_DT_DeathRoom_Events("ARX_DT_DeathRoom_Trap_Turrets",0,"ARX_DT_DeathRoom_Trap_Turret_ON","ARX_DT_DeathRoom_Trap_Turret_OFF");
//DB_ARX_DT_DeathRoom_Events("ARX_DT_DeathRoom_Trap_FireBall",0,"ARX_DT_DeathRoom_Trap_FireBall_ON","ARX_DT_DeathRoom_Trap_FireBall_OFF");

//END_REGION

//REGION Magic Walls

DB_ARX_DT_DeathRoom_MagicWalls(ITEMGUID_S_ARX_DivineTomb_DeathRoom_MagicWall_000_3ac7d3e2-9969-4d08-878e-710a37a5db4c);
DB_ARX_DT_DeathRoom_MagicWalls(ITEMGUID_S_ARX_DivineTomb_DeathRoom_MagicWall_001_a6fbedb7-6286-4a73-beeb-40f8150cba86);

//END_REGION


//--- Tweakable vars
DB_ARX_DT_DeathRoom_NumLeversUsed(0);
DB_ARX_DT_DeathRoom_MAXLeversUsed(8);
DB_ARX_DT_DeathRoom_RequestNewAt(4);
DB_ARX_DT_DeathRoom_ActualPuppets(0);
DB_ARX_DT_DeathRoom_MAXPuppets(12); //shouldn't go over 8, but setting 12 ensure there's always room for the 4 base puppets


//Proc_ARX_DT_DeathRoom_InitLeversList();
//Proc_ARX_DT_DeathRoom_InitTraps();
KBSECTION
//REGION Init & debug & VB & savegame

PROC
Proc_ARX_DT_DeathRoom_InitLeversList()
AND
DB_ARX_DT_DeathRoom_Lever(_Lever,_Flag,_Event)
AND
ObjectExists(_Lever,0)
THEN
NOT DB_ARX_DT_DeathRoom_Lever(_Lever,_Flag,_Event);

PROC
Proc_ARX_DT_DeathRoom_InitLeversList()
AND
DB_ARX_DT_DeathRoom_Lever(_Lever,_,_Event)
THEN
SetVarString(_Lever,"Event",_Event);
Proc_ARX_DT_DeathRoom_AddLeverToList(_Lever);

PROC
Proc_ARX_DT_DeathRoom_AddLeverToList((ITEMGUID)_Lever)
AND
NOT DB_ARX_DT_DeathRoom_UsedLever(_Lever)
THEN
CharacterItemSetEvent(NULL_00000000-0000-0000-0000-000000000000,_Lever,"ARX_DivineTomb_DeathRoom_AddLever");


IF
CharacterEnteredTrigger(_Player,TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_SubregionBox_f1670d09-2646-451f-96bb-74dcbdf06f1d)
AND
DB_IsPlayer(_Player)
AND
QueryOnlyOnce("ARX_VB_DivineTomb_EnteringDeathRoom")
THEN
StartVoiceBark("ARX_VB_DivineTomb_EnteringDeathRoom",_Player);

//END_REGION


//REGION Prep challenge and reset

//--- Prep
IF
CharacterEnteredTrigger(_Player,TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_SubregionBox_f1670d09-2646-451f-96bb-74dcbdf06f1d)
AND
NOT DB_GlobalFlag("ARX_DT_DeathRoom_ChallengeCompleted")
AND
QueryOnlyOnce("ARX_DT_DeathRoom_PrepChallenge")
THEN
Proc_ARX_DT_DeathRoom_InitLeversList();
ProcTriggerRegisterForPlayers(TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_FightStart_Box_a6772a8f-8075-4102-a1e7-3eec6af5f657);


//--- Reset
IF
CharacterLeftTrigger(_Player,TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_SubregionBox_f1670d09-2646-451f-96bb-74dcbdf06f1d)
AND
QRY_AnyRegionActive()
AND
NOT DB_CharacterPolymorphedInto(_Player,_)
AND
NOT DB_GlobalFlag("ARX_DT_DeathRoom_ChallengeCompleted")
AND
NOT QRY_ARX_DT_DeathRoom_PlayerInRoom()
THEN
Proc_ARX_DT_DeathRoom_ResetChallenge();


// Allow registering the start again
PROC
Proc_ARX_DT_DeathRoom_ResetChallenge()
THEN
Proc_ARX_DT_DeathRoom_CleanLeverUsed();
Proc_ARX_DT_DeathRoom_ClearTrapLogic();
NOT DB_OnlyOnce("ARX_DT_DeathRoom_PrepChallenge");
NOT DB_OnlyOnce("ARX_DT_DeathRoom_SpawnFirstPuppets");
NOT DB_ARX_DT_DeathRoom_CommentOnPuppetSpawn(1);
NOT DB_SpawnedPuppet(1);


// Reset & kill remaining puppets
PROC
Proc_ARX_DT_DeathRoom_ResetChallenge()
AND
DB_ARX_DT_CreatePuppetAt(_Trigger,_Template,_Serie)
THEN
NOT DB_ARX_DT_CreatePuppetAt(_Trigger,_Template,_Serie);

PROC
Proc_ARX_DT_DeathRoom_ResetChallenge()
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_Trigger,_Serie)
THEN
CharacterDie(_Puppet,0,"PHYSICAL");
NOT DB_ARX_DT_DeathRoom_Puppet(_Puppet,_Trigger,_Serie);


// Reset levers
PROC
Proc_ARX_DT_DeathRoom_ResetChallenge()
AND
DB_ARX_DT_DeathRoom_NumLeversUsed(_Num)
THEN
NOT DB_ARX_DT_DeathRoom_NumLeversUsed(_Num);
DB_ARX_DT_DeathRoom_NumLeversUsed(0);


// Reset assigned levers
PROC
Proc_ARX_DT_DeathRoom_ResetChallenge()
AND
DB_ARX_DT_DeathRoom_PuppetLever(_Puppet,_Lever)
THEN
NOT DB_ARX_DT_DeathRoom_PuppetLever(_Puppet,_Lever);


// Reset good levers state
PROC
Proc_ARX_DT_DeathRoom_ResetChallenge()
AND
DB_ARX_DT_DeathRoom_GoodLever(_Lever,_Flag,_State)
THEN
NOT DB_ARX_DT_DeathRoom_GoodLever(_Lever,_State);
DB_ARX_DT_DeathRoom_GoodLever(_Lever,0);


//--- 
QRY
QRY_ARX_DT_DeathRoom_PlayerInRoom()
AND
_Player.DB_IsPlayer()
AND
NOT DB_CharacterPolymorphedInto(_Player,_)
AND
DB_InRegion(_Player,TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_SubregionBox_f1670d09-2646-451f-96bb-74dcbdf06f1d)
THEN
DB_NOOP(1);

//END_REGION


//REGION Fight start

IF
CharacterLeftTrigger(_Player,TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_FightStart_Box_a6772a8f-8075-4102-a1e7-3eec6af5f657)
AND
QRY_AnyRegionActive()
AND
QueryOnlyOnce("ARX_DT_DeathRoom_SpawnFirstPuppets")
THEN
PartySetFlag(_Player,"QuestUpdate_ARX_HuntingForDallis_DeathRoomStarted");
ProcTriggerUnregisterForPlayers(TRIGGERGUID_S_ARX_DivineTomb_DeathRoom_FightStart_Box_a6772a8f-8075-4102-a1e7-3eec6af5f657);
Proc_ARX_DT_DeathRoom_SpawnNewPuppet(-1);

//END_REGION
  

//REGION Spawn puppet

PROC
Proc_ARX_DT_DeathRoom_SpawnNewPuppet((INTEGER)_Serie)
AND
QRY_ARX_DT_DeathRoom_AvailableRoomForPuppet()
AND
DB_ARX_DT_DeathRoom_PuppetSpawner(_Trigger)
AND
NOT DB_ARX_DT_DeathRoom_Puppet(_,_Trigger,_Serie)
THEN
Proc_ARX_DT_DeathRoom_SelectRandomPuppetTemplate(_Trigger,_Serie);


// normal flow: player in combat
PROC
Proc_ARX_DT_DeathRoom_SpawnSelectedPuppet((TRIGGERGUID)_Trigger,(STRING)_Template,(INTEGER)_Serie)
AND
_Serie != -1
AND
QRY_ARX_DT_DeathRoom_PlayerInRoom()
AND
QRY_ARX_DT_DeathRoom_AnyPlayerInDeathRoomFight()
THEN
DB_ARX_DT_CreatePuppetAt(_Trigger,_Template,_Serie);


// edge case: player(s) in the room, but not in the fight
PROC
Proc_ARX_DT_DeathRoom_SpawnSelectedPuppet((TRIGGERGUID)_Trigger,(STRING)_Template,(INTEGER)_Serie)
AND
_Serie != -1
AND
QRY_ARX_DT_DeathRoom_PlayerInRoom()
AND
NOT QRY_ARX_DT_DeathRoom_AnyPlayerInDeathRoomFight()
THEN
Proc_ARX_DT_DeathRoom_SpawnPuppet(_Trigger,_Template);


// first puppets, before combat starts
PROC
Proc_ARX_DT_DeathRoom_SpawnSelectedPuppet((TRIGGERGUID)_Trigger,(STRING)_Template,-1)
THEN
Proc_ARX_DT_DeathRoom_SpawnPuppet(_Trigger,_Template);


// spawn puppet directly
PROC
Proc_ARX_DT_DeathRoom_SpawnPuppet((TRIGGERGUID)_Trigger,(STRING)_Template)
AND
GetPosition(_Trigger,_X,_Y,_Z)
AND
TemporaryCharacterCreateAtPosition(_X,_Y,_Z,_Template,1,_Puppet)
AND
DB_ARX_DT_DeathRoom_ActualPuppets(_Num)
AND
IntegerSum(_Num,1,_Sum)
THEN
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_Trigger,0);
NOT DB_ARX_DT_DeathRoom_ActualPuppets(_Num);
DB_ARX_DT_DeathRoom_ActualPuppets(_Sum);
SetCombatGroupID(_Puppet,"ARX_DivineTomb_DeathRoom_CombatGroupID");


// turn delays
IF
ObjectTurnEnded((CHARACTERGUID)_Obj)
AND
DB_CombatCharacters(_Obj,_CombatID) 
AND
DB_ARX_DT_PuppetCombatID(_CombatID)
THEN
ProcARX_DT_CheckCombatSpawnPuppet();

IF
CombatEnded(_CombatID)
AND
DB_ARX_DT_PuppetCombatID(_CombatID)
THEN
ProcARX_DT_CheckCombatSpawnPuppet();

PROC
ProcARX_DT_CheckCombatSpawnPuppet()
AND
DB_ARX_DT_CreatePuppetAt(_Trigger,_Template,_Serie)
AND
NOT DB_SpawnedPuppet(1)
AND
GetPosition(_Trigger,_X,_Y,_Z)
AND
TemporaryCharacterCreateAtPosition(_X,_Y,_Z,_Template,1,_Puppet)
AND
DB_ARX_DT_DeathRoom_ActualPuppets(_Num)
AND
IntegerSum(_Num,1,_Sum)
THEN
NOT DB_ARX_DT_CreatePuppetAt(_Trigger,_Template,_Serie);
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_Trigger,_Serie);
NOT DB_ARX_DT_DeathRoom_ActualPuppets(_Num);
DB_ARX_DT_DeathRoom_ActualPuppets(_Sum);
SetCombatGroupID(_Puppet,"ARX_DivineTomb_DeathRoom_CombatGroupID");
DB_SpawnedPuppet(1);
DB_ARX_DT_DeathRoom_CommentOnPuppetSpawn(_Serie);


PROC
ProcARX_DT_CheckCombatSpawnPuppet()
THEN
NOT DB_SpawnedPuppet(1);

IF
CharacterItemEvent(_Puppet,_Lever,"ARX_DivineTomb_DeathRoom_AssignLever")
AND
DB_ARX_DT_DeathRoom_Lever(_Lever,_Flag,_)
THEN
ObjectSetFlag(_Puppet,_Flag);
DB_ARX_DT_DeathRoom_PuppetLever(_Puppet,_Lever);


QRY
QRY_ARX_DT_DeathRoom_AvailableRoomForPuppet()
AND
DB_ARX_DT_DeathRoom_ActualPuppets(_NumPuppets)
AND
DB_ARX_DT_DeathRoom_MAXPuppets(_MAX)
AND
_NumPuppets < _MAX
THEN
DB_NOOP(1);


//END_REGION


//REGION Comment on puppet respawn

IF
ObjectTurnStarted((CHARACTERGUID)_Player)
AND
DB_IsPlayer(_Player)
AND
QRY_ARX_DT_DeathRoom_InDeathRoomFight(_Player)
AND
DB_ARX_DT_DeathRoom_CommentOnPuppetSpawn(_Serie)
THEN
NOT DB_ARX_DT_DeathRoom_CommentOnPuppetSpawn(_Serie);
Proc_ARX_DivineTomb_DeathRoom_AD_PuppetRespawned(_Serie,_Player);

// 0 excludes the first puppets and the puppets that spawn from levers
PROC
Proc_ARX_DivineTomb_DeathRoom_AD_PuppetRespawned(0,(CHARACTERGUID)_Player)
THEN
Proc_StartDialog(1,"ARX_DivineTomb_DeathRoom_AD_PuppetRespawned",_Player);

//END_REGION


//REGION Puppet use lever / clear lever

IF
CharacterUsedItem(_Puppet,_Lever)
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
AND
DB_ARX_DT_DeathRoom_Lever(_Lever,_Flag,_)
THEN
//CharacterAddActionPoints(_Puppet,1);
Proc_ARX_DT_DeathRoom_ClearLeverFromPuppet(_Puppet,_Lever);

PROC
Proc_ARX_DT_DeathRoom_ClearLeverFromPuppet((CHARACTERGUID)_Puppet,(ITEMGUID)_Lever)
THEN
NOT DB_ARX_DT_DeathRoom_PuppetLever(_Puppet,_Lever);

PROC
Proc_ARX_DT_DeathRoom_ClearLeverFromPuppet((CHARACTERGUID)_Puppet,(ITEMGUID)_Lever)
AND
NOT DB_Dead(_Puppet)
AND
DB_ARX_DT_DeathRoom_Lever(_Lever,_Flag,_)
THEN
CharacterItemSetEvent(_Puppet,_Lever,"ARX_DivineTomb_DeathRoom_ClearLever");
ObjectClearFlag(_Puppet,_Flag);

PROC
Proc_ARX_DT_DeathRoom_ClearLeverFromPuppet((CHARACTERGUID)_,(ITEMGUID)_Lever)
THEN
Proc_ARX_DT_DeathRoom_IncrementLeverUsed(_Lever);


// Puppet AD
PROC
Proc_ARX_DT_DeathRoom_PuppetLeverAD((STRING)_TrapType,(CHARACTERGUID)_Puppet)
AND
NOT DB_IsPlayer(_Puppet)
THEN
ObjectSetFlag(_Puppet,_TrapType);

PROC
Proc_ARX_DT_DeathRoom_PuppetLeverAD((STRING)_TrapType,(CHARACTERGUID)_Puppet)
AND
NOT DB_IsPlayer(_Puppet)
AND
DB_ARX_DT_DeathRoom_TrapTurn(_Turn,_TrapType)
AND
_Turn != 0
THEN
ObjectSetFlag(_Puppet,"ARX_DT_DeathRoom_TrapAlreadyActivated");

PROC
Proc_ARX_DT_DeathRoom_PuppetLeverAD((STRING)_TrapType,(CHARACTERGUID)_Puppet)
AND
NOT DB_IsPlayer(_Puppet)
THEN
Proc_StartDialog(1,"ARX_AD_DivineTomb_DeathRoom_PulledLever",_Puppet); //flags cleared in the dialog

//END_REGION


//REGION combat tracking

IF
ObjectSwitchedCombat((CHARACTERGUID)_Puppet,_OldCombat,_NewCombat)
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
AND
DB_ARX_DT_PuppetCombatID(_OldCombat)
THEN
ProcARX_DT_SetPuppetCombat(_NewCombat);

//for savegames
IF
ObjectTurnStarted((CHARACTERGUID)_Puppet)
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
AND
CombatGetIDForCharacter(_Puppet,_Combat)
THEN
ProcARX_DT_SetPuppetCombat(_Combat);

IF
ObjectEnteredCombat((CHARACTERGUID)_Puppet,_Combat)
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
THEN
ProcARX_DT_SetPuppetCombat(_Combat);

PROC
ProcARX_DT_SetPuppetCombat((INTEGER)_)
AND
DB_ARX_DT_PuppetCombatID(_Combat)
THEN
NOT DB_ARX_DT_PuppetCombatID(_Combat);

PROC
ProcARX_DT_SetPuppetCombat((INTEGER)_Combat)
THEN
DB_ARX_DT_PuppetCombatID(_Combat);

//END_REGION


//REGION Puppet dies

IF
CharacterDied(_Puppet)
AND
DB_ARX_DT_DeathRoom_PuppetLever(_Puppet,_Lever)
THEN
Proc_ARX_DT_DeathRoom_ClearLeverFromPuppet(_Puppet,_Lever);

IF
ObjectLeftCombat((CHARACTERGUID)_Puppet,_ID)
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_Trigger,_Serie)
AND
DB_Dead(_Puppet)
THEN
NOT DB_ARX_DT_DeathRoom_Puppet(_Puppet,_Trigger,_Serie);
Proc_ARX_DT_DeathRoom_CheckSpawnNewPuppet(_Serie);


PROC
Proc_ARX_DT_DeathRoom_CheckSpawnNewPuppet(0)
AND
DB_ARX_DT_DeathRoom_ActualPuppets(_Num)
AND
IntegerSubtract(_Num,1,_Sub)
THEN
NOT DB_ARX_DT_DeathRoom_ActualPuppets(_Num);
DB_ARX_DT_DeathRoom_ActualPuppets(_Sub);


PROC
Proc_ARX_DT_DeathRoom_CheckSpawnNewPuppet(0)
THEN
Proc_ARX_DT_DeathRoom_SpawnNewPuppet(0);

//END_REGION


//REGION Used levers

IF
DB_ARX_DT_DeathRoom_PuppetLever(_Puppet,_Lever)
THEN
DB_ARX_DT_DeathRoom_UsedLever(_Lever);


PROC
Proc_ARX_DT_DeathRoom_IncrementLeverUsed((ITEMGUID)_Lever)
AND
DB_ARX_DT_DeathRoom_UsedLever(_Lever)
AND
DB_ARX_DT_DeathRoom_NumLeversUsed(_Num)
AND
IntegerSum(_Num,1,_Sum)
THEN
NOT DB_ARX_DT_DeathRoom_NumLeversUsed(_Num);
DB_ARX_DT_DeathRoom_NumLeversUsed(_Sum);


// Puppets that don't have a lever assigned get a new one so they don't endlessly fight
PROC
Proc_ARX_DT_DeathRoom_IncrementLeverUsed((ITEMGUID)_)
AND
DB_ARX_DT_DeathRoom_NumLeversUsed(_Actual)
AND
DB_ARX_DT_DeathRoom_RequestNewAt(_MAX)
AND
_Actual == _MAX
THEN
Proc_ARX_DT_DeathRoom_RequestNewLevers();


// previously used levers can get assigned again
PROC
Proc_ARX_DT_DeathRoom_IncrementLeverUsed((ITEMGUID)_)
AND
DB_ARX_DT_DeathRoom_NumLeversUsed(_Actual)
AND
DB_ARX_DT_DeathRoom_MAXLeversUsed(_MAX)
AND
_Actual == _MAX
THEN
Proc_ARX_DT_DeathRoom_CleanLeverUsed();


PROC
Proc_ARX_DT_DeathRoom_CleanLeverUsed()
AND
DB_ARX_DT_DeathRoom_NumLeversUsed(_Actual)
THEN
NOT DB_ARX_DT_DeathRoom_NumLeversUsed(_Actual);
DB_ARX_DT_DeathRoom_NumLeversUsed(0);

PROC
Proc_ARX_DT_DeathRoom_CleanLeverUsed()
AND
DB_ARX_DT_DeathRoom_UsedLever(_Lever)
THEN
NOT DB_ARX_DT_DeathRoom_UsedLever(_Lever);
Proc_ARX_DT_DeathRoom_AddLeverToList(_Lever);


PROC
Proc_ARX_DT_DeathRoom_CleanLeverUsed()
THEN
Proc_ARX_DT_DeathRoom_RequestNewLevers();


PROC
Proc_ARX_DT_DeathRoom_RequestNewLevers()
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
AND
NOT DB_ARX_DT_DeathRoom_PuppetLever(_Puppet,_)
THEN
SetStoryEvent(_Puppet,"ARX_DivineTomb_DeathRoom_RequestLever");

//END_REGION


//REGION Puppet template random selection

//--- Select a random position
PROC
Proc_ARX_DT_DeathRoom_SelectRandomPuppetTemplate((TRIGGERGUID)_Trigger,(INTEGER)_Serie)
AND
Random(4,_Rand)
THEN
DB_ARX_DT_DeathRoom_SelectedPuppetTemplate(_Trigger,_Rand);

PROC
Proc_ARX_DT_DeathRoom_SelectRandomPuppetTemplate((TRIGGERGUID)_Trigger,(INTEGER)_Serie)
THEN
DB_ARX_DT_DeathRoom_RandomPuppetTemplateCounter(_Trigger,0);

PROC
Proc_ARX_DT_DeathRoom_SelectRandomPuppetTemplate((TRIGGERGUID)_Trigger,(INTEGER)_Serie)
AND
DB_ARX_DT_DeathRoom_SelectedPuppetTemplate(_Trigger,_Rand)
AND
DB_ARX_DT_DeathRoom_PuppetTemplates(_Template)
AND
DB_ARX_DT_DeathRoom_RandomPuppetTemplateCounter(_Trigger,_Ctr)
THEN
Proc_ARX_DT_DeathRoom_TrySpawnRandomPuppetTemplate(_Ctr,_Rand,_Trigger,_Template,_Serie);


//--- Reach that position
PROC
Proc_ARX_DT_DeathRoom_TrySpawnRandomPuppetTemplate((INTEGER)_Ctr,(INTEGER)_Desired,(TRIGGERGUID)_Trigger,(STRING)_Template,(INTEGER)_Serie)
AND
_Ctr == _Desired
THEN
Proc_ARX_DT_DeathRoom_SpawnSelectedPuppet(_Trigger,_Template,_Serie);

PROC
Proc_ARX_DT_DeathRoom_TrySpawnRandomPuppetTemplate((INTEGER)_Ctr,(INTEGER)_Desired,(TRIGGERGUID)_Trigger,(STRING)_Template,(INTEGER)_Serie)
AND
IntegerSum(1,_Ctr,_New)
AND
DB_ARX_DT_DeathRoom_RandomPuppetTemplateCounter(_Trigger,_Old)
THEN
NOT DB_ARX_DT_DeathRoom_RandomPuppetTemplateCounter(_Trigger,_Old);
DB_ARX_DT_DeathRoom_RandomPuppetTemplateCounter(_Trigger,_New);


PROC
Proc_ARX_DT_DeathRoom_SelectRandomPuppetTemplate((TRIGGERGUID)_Trigger,(INTEGER)_Serie)
AND
DB_ARX_DT_DeathRoom_RandomPuppetTemplateCounter(_Trigger,_Ctr)
THEN
NOT DB_ARX_DT_DeathRoom_RandomPuppetTemplateCounter(_Trigger,_Ctr);

PROC
Proc_ARX_DT_DeathRoom_SelectRandomPuppetTemplate((TRIGGERGUID)_Trigger,(INTEGER)_Serie)
AND
DB_ARX_DT_DeathRoom_SelectedPuppetTemplate(_Trigger,_Rand)
THEN
NOT DB_ARX_DT_DeathRoom_SelectedPuppetTemplate(_Trigger,_Rand);

//END_REGION


//REGION Challenge completed - pulling good lever AD

IF
CharacterUsedItem(_Player,_Lever)
AND
DB_IsPlayer(_Player)
AND
DB_ARX_DT_DeathRoom_GoodLever(_Lever,_Flag,_State)
THEN
NOT DB_ARX_DT_DeathRoom_GoodLever(_Lever,_Flag,_State);
DB_ARX_DT_DeathRoom_GoodLever(_Lever,_Flag,1);
Proc_ARX_DT_DeathRoom_CheckGoodLeverPulled(_Player,_Flag,_State);


//--- All levers pulled + player AD
PROC
Proc_ARX_DT_DeathRoom_CheckGoodLeverPulled((CHARACTERGUID)_Player,(STRING)_Flag,0)
THEN
ObjectSetFlag(_Player,_Flag);

PROC
Proc_ARX_DT_DeathRoom_CheckGoodLeverPulled((CHARACTERGUID)_Player,(STRING)_,(INTEGER)_)
AND
NOT QRY_ARX_DT_DeathRoom_HasUntriggeredLever()
THEN
GlobalSetFlag("ARX_DT_DeathRoom_ChallengeCompleted");
Proc_ARX_DT_DeathRoom_RemoveMagicWalls();
Proc_ARX_DT_DeathRoom_UnassignRemainingPuppets();
Proc_ARX_DT_DeathRoom_KillRemainingPuppets();
PartySetFlag(_Player,"QuestUpdate_ARX_HuntingForDallis_DeathRoomCompleted");

PROC
Proc_ARX_DT_DeathRoom_RemoveMagicWalls()
AND
DB_ARX_DT_DeathRoom_MagicWalls(_Wall)
THEN
SetOnStage(_Wall,0);


PROC
Proc_ARX_DT_DeathRoom_CheckGoodLeverPulled((CHARACTERGUID)_Player,(STRING)_,0)
THEN
Proc_StartDialog(1,"ARX_AD_DivineTomb_DeathRoom_PulledGoodLever",_Player);


QRY
QRY_ARX_DT_DeathRoom_HasUntriggeredLever()
AND
DB_ARX_DT_DeathRoom_GoodLever(_Any,_,0)
THEN
DB_NOOP(1);


PROC
Proc_ARX_DT_DeathRoom_UnassignRemainingPuppets()
AND
DB_ARX_DT_DeathRoom_PuppetLever(_Puppet,_Lever)
THEN
Proc_ARX_DT_DeathRoom_ClearLeverFromPuppet((CHARACTERGUID)_Puppet,(ITEMGUID)_Lever);

PROC
Proc_ARX_DT_DeathRoom_KillRemainingPuppets()
AND
DB_ARX_DT_CreatePuppetAt(_Trigger,_Template,_Serie)
THEN
NOT DB_ARX_DT_CreatePuppetAt(_Trigger,_Template,_Serie);

PROC
Proc_ARX_DT_DeathRoom_KillRemainingPuppets()
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_Trigger,_Serie)
THEN
NOT DB_ARX_DT_DeathRoom_Puppet(_Puppet,_Trigger,_Serie);
SetStoryEvent(_Puppet,"ARX_DivineTomb_DeathRoom_KillPuppet");


//--- Block lever use when the bridge is raised
PROC
ProcBlockUseOfItem(_Char,_Lever)
AND
DB_ARX_DT_DeathRoom_Lever(_Lever,_,_)
AND
DB_GlobalFlag("ARX_DT_DeathRoom_ChallengeCompleted")
THEN
DB_CustomUseItemResponse(_Char,_Lever,0);

PROC
ProcBlockUseOfItem(_Char,_Lever)
AND
DB_ARX_DT_DeathRoom_GoodLever(_Lever,_,_)
AND
DB_GlobalFlag("ARX_DT_DeathRoom_ChallengeCompleted")
THEN
DB_CustomUseItemResponse(_Char,_Lever,0);


//--- Wrong lever
IF
CharacterUsedItem(_Player,_Lever)
AND
DB_IsPlayer(_Player)
AND
DB_ARX_DT_DeathRoom_Lever(_Lever,_,_)
AND
NOT DB_GlobalFlag("ARX_DT_DeathRoom_ChallengeCompleted")
THEN
Proc_StartDialog(1,"ARX_AD_DivineTomb_DeathRoom_PulledWrongLever",_Player);

//END_REGION


//REGION Traps events

//--- Traps that stays active for X turns
IF
CharacterItemEvent(_Char,_,_Event)
AND
DB_ARX_DT_DeathRoom_Events(_Event,_,_,_)
THEN
Proc_ARX_DT_DeathRoom_CheckSetUpTrap(_Event,_Char);


//--- Swap puppet and player
IF
CharacterItemEvent(_Char,_Lever,"ARX_DT_DeathRoom_Trap_SwapPuppetPlayer")
THEN
Proc_ARX_DT_DeathRoom_SwapPos(_Char);

IF
CharacterItemEvent(_Puppet,_Lever,"ARX_DT_DeathRoom_Trap_SwapPuppetPlayer")
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
THEN
Proc_ARX_DT_DeathRoom_PuppetLeverAD("ARX_DT_DeathRoom_Trap_SwapPuppetPlayer",_Puppet);


//--- Polymorph
IF
CharacterItemEvent(_Puppet,_Lever,"ARX_DT_DeathRoom_Trap_Polymorph")
AND
DB_IsPlayer(_Player)
AND
QRY_ARX_DT_DeathRoom_InDeathRoomFight((CHARACTERGUID)_Player)
THEN
CharacterItemSetEvent(_Player,NULL_00000000-0000-0000-0000-000000000000,"ARX_DT_DeathRoom_Trap_PolymorphPlayer");

IF
CharacterItemEvent(_Puppet,_Lever,"ARX_DT_DeathRoom_Trap_Polymorph")
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
THEN
Proc_ARX_DT_DeathRoom_PuppetLeverAD("ARX_DT_DeathRoom_Trap_Polymorph",_Puppet);


//--- Barrels
IF
CharacterItemEvent(_Puppet,_Lever,"ARX_DT_DeathRoom_Trap_Barrels_A")
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
THEN
Proc_ARX_DT_DeathRoom_PuppetLeverAD("ARX_DT_DeathRoom_Trap_Barrels",_Puppet);

IF
CharacterItemEvent(_Puppet,_Lever,"ARX_DT_DeathRoom_Trap_Barrels_B")
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
THEN
Proc_ARX_DT_DeathRoom_PuppetLeverAD("ARX_DT_DeathRoom_Trap_Barrels",_Puppet);

IF
CharacterItemEvent(_Puppet,_Lever,"ARX_DT_DeathRoom_Trap_Barrels_C")
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
THEN
Proc_ARX_DT_DeathRoom_PuppetLeverAD("ARX_DT_DeathRoom_Trap_Barrels",_Puppet);


//--- New puppets
IF
CharacterItemEvent(_Puppet,_,_Event)
AND
DB_ARX_DT_DeathRoom_PuppetSpawnerExcess(_Event,_Trigger,_Serie)
AND
QRY_ARX_DT_DeathRoom_AvailableRoomForExcessPuppet()
THEN
Proc_ARX_DT_DeathRoom_SelectRandomPuppetTemplate(_Trigger,_Serie);
Proc_ARX_DT_DeathRoom_PuppetLeverAD("ARX_DT_DeathRoom_Trap_MorePuppets",_Puppet);

IF
CharacterItemEvent(_Puppet,_,_Event)
AND
DB_ARX_DT_DeathRoom_PuppetSpawnerExcess(_Event,_Trigger,_Serie)
AND
NOT QRY_ARX_DT_DeathRoom_AvailableRoomForExcessPuppet()
THEN
ObjectSetFlag(_Puppet,"ARX_DT_DeathRoom_TrapAlreadyActivated");
Proc_ARX_DT_DeathRoom_PuppetLeverAD("ARX_DT_DeathRoom_Trap_MorePuppets",_Puppet);


QRY
QRY_ARX_DT_DeathRoom_AvailableRoomForExcessPuppet()
AND
DB_ARX_DT_DeathRoom_ActualPuppets(_NumPuppets)
AND
DB_ARX_DT_DeathRoom_MAXPuppets(_MAX)
AND
DB_ARX_DT_DeathRoom_MAXLeversUsed(_MaxNormal)
AND
IntegerSubtract(_MAX,_MaxNormal,_ExcessLimit)
AND
_NumPuppets < _ExcessLimit
THEN
DB_NOOP(1);

//END_REGION


//REGION Traps logic


//--- Setup

// edge case: player(s) in the room, but not in combat (the room is quite large, it happens sometimes)
PROC
Proc_ARX_DT_DeathRoom_CheckSetUpTrap((STRING)_TrapType,(CHARACTERGUID)_)
AND
QRY_ARX_DT_DeathRoom_PlayerInRoom()
AND
NOT QRY_ARX_DT_DeathRoom_AnyPlayerInDeathRoomFight()
THEN
Proc_ARX_DT_DeathRoom_DeactivateTrap(_TrapType);

//normal flow
PROC
Proc_ARX_DT_DeathRoom_CheckSetUpTrap((STRING)_TrapType,(CHARACTERGUID)_Puppet)
AND
QRY_ARX_DT_DeathRoom_PlayerInRoom()
AND
QRY_ARX_DT_DeathRoom_AnyPlayerInDeathRoomFight()
THEN
Proc_ARX_DT_DeathRoom_SetUpTrap(_TrapType,_Puppet);


PROC
Proc_ARX_DT_DeathRoom_SetUpTrap((STRING)_TrapType,(CHARACTERGUID)_)
AND
NOT DB_ARX_DT_DeathRoom_TrapTurn(_,_TrapType)
THEN
DB_ARX_DT_DeathRoom_TrapTurn(0,_TrapType);


PROC
Proc_ARX_DT_DeathRoom_SetUpTrap((STRING)_TrapType,(CHARACTERGUID)_)
AND
NOT DB_ARX_DT_DeathRoom_RefPlayer(_,_TrapType)
AND
DB_IsPlayer(_Player)
AND
QRY_ARX_DT_DeathRoom_InDeathRoomFight(_Player)
THEN
Proc_ARX_DT_DeathRoom_AssignPlayer(_player,_TrapType);

PROC
Proc_ARX_DT_DeathRoom_AssignPlayer((CHARACTERGUID)_Player,(STRING)_TrapType)
AND
NOT DB_ARX_DT_DeathRoom_RefPlayer(_,_TrapType)
THEN
DB_ARX_DT_DeathRoom_RefPlayer(_Player,_TrapType);

PROC
Proc_ARX_DT_DeathRoom_SetUpTrap((STRING)_TrapType,(CHARACTERGUID)_)
AND
DB_ARX_DT_DeathRoom_TrapTurn(0,_TrapType)
AND
DB_ARX_DT_DeathRoom_RefPlayer(_Player,_TrapType)
AND
DB_ARX_DT_DeathRoom_Events(_TrapType,_,_OnEvent,_)
THEN
CharacterItemSetEvent(NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,_OnEvent);

PROC
Proc_ARX_DT_DeathRoom_SetUpTrap((STRING)_TrapType,(CHARACTERGUID)_Puppet)
AND
NOT DB_IsPlayer(_Puppet)
AND
_Puppet != NULL_00000000-0000-0000-0000-000000000000
THEN
Proc_ARX_DT_DeathRoom_PuppetLeverAD(_TrapType,_Puppet);


QRY
QRY_ARX_DT_DeathRoom_InDeathRoomFight((CHARACTERGUID)_Player)
AND
DB_CombatCharacters(_Player,_PlayerInst)
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
AND
DB_CombatCharacters(_Puppet,_PuppetInst)
AND
_PlayerInst == _PuppetInst
THEN
DB_NOOP(1);

QRY
QRY_ARX_DT_DeathRoom_AnyPlayerInDeathRoomFight()
AND
DB_IsPlayer(_Player)
AND
DB_CombatCharacters(_Player,_PlayerInst)
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
AND
DB_CombatCharacters(_Puppet,_PuppetInst)
AND
_PlayerInst == _PuppetInst
THEN
DB_NOOP(1);



//--- Counting how many turns a trap's been on
IF
ObjectTurnStarted((CHARACTERGUID)_Player)
AND
DB_ARX_DT_DeathRoom_RefPlayer(_Player,_TrapType)
AND
DB_ARX_DT_DeathRoom_TrapTurn(_Num,_TrapType)
AND
IntegerSum(_Num,1,_Sum)
THEN
NOT DB_ARX_DT_DeathRoom_TrapTurn(_Num,_TrapType);
DB_ARX_DT_DeathRoom_TrapTurn(_Sum,_TrapType);
Proc_ARX_DT_DeathRoom_CheckDeactivateTrap(_TrapType);


//--- Deactivate
PROC
Proc_ARX_DT_DeathRoom_CheckDeactivateTrap((STRING)_TrapType)
AND
DB_ARX_DT_DeathRoom_TrapTurn(_Num,_TrapType)
AND
DB_ARX_DT_DeathRoom_Events(_TrapType,_Max,_,_)
AND
_Num >= _Max
THEN
Proc_ARX_DT_DeathRoom_DeactivateTrap(_TrapType);

PROC
Proc_ARX_DT_DeathRoom_DeactivateTrap((STRING)_TrapType)
AND
DB_ARX_DT_DeathRoom_TrapTurn(_Num,_TrapType)
THEN
NOT DB_ARX_DT_DeathRoom_TrapTurn(_Num,_TrapType);

PROC
Proc_ARX_DT_DeathRoom_DeactivateTrap((STRING)_TrapType)
AND
DB_ARX_DT_DeathRoom_Events(_TrapType,_,_,_OffEvent)
THEN
CharacterItemSetEvent(NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,_OffEvent);



//--- Handling ref player leaving combat
IF
CharacterDied(_Player)
AND
DB_ARX_DT_DeathRoom_RefPlayer(_Player,_TrapType)
THEN
NOT DB_ARX_DT_DeathRoom_RefPlayer(_Player,_TrapType);
Proc_ARX_DT_DeathRoom_CheckSetUpTrap(_TrapType,NULL_00000000-0000-0000-0000-000000000000);

IF
ObjectLeftCombat((CHARACTERGUID)_Player,_)
AND
DB_ARX_DT_DeathRoom_RefPlayer(_Player,_TrapType)
THEN
NOT DB_ARX_DT_DeathRoom_RefPlayer(_Player,_TrapType);
Proc_ARX_DT_DeathRoom_CheckSetUpTrap(_TrapType,NULL_00000000-0000-0000-0000-000000000000);


//--- Clear for a reset of the fight
PROC
Proc_ARX_DT_DeathRoom_ClearTrapLogic()
AND
DB_ARX_DT_DeathRoom_RefPlayer(_Player,_TrapType)
AND
DB_ARX_DT_DeathRoom_Events(_TrapType,_,_,_OffEvent)
THEN
NOT DB_ARX_DT_DeathRoom_RefPlayer(_Player,_TrapType);
CharacterItemSetEvent(NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,_OffEvent);

PROC
Proc_ARX_DT_DeathRoom_ClearTrapLogic()
AND
DB_ARX_DT_DeathRoom_TrapTurn(_Turn,_TrapType)
THEN
NOT DB_ARX_DT_DeathRoom_TrapTurn(_Turn,_TrapType);

//END_REGION


//REGION Swap pos trap logic

PROC
Proc_ARX_DT_DeathRoom_SwapPos((CHARACTERGUID)_Char)
AND
GetPosition(_Char,_X,_Y,_Z)
THEN
DB_ARX_DT_DeathRoom_CharPos(_Char,_X,_Y,_Z);


PROC //--- PLAYER PULLED LEVER
Proc_ARX_DT_DeathRoom_SwapPos((CHARACTERGUID)_Player)
AND
DB_IsPlayer(_Player)
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
THEN
Proc_ARX_DT_DeathRoom_GetDist(_Player,_Puppet);


PROC //--- PUPPET PULLED LEVER
Proc_ARX_DT_DeathRoom_SwapPos((CHARACTERGUID)_Puppet)
AND
DB_ARX_DT_DeathRoom_Puppet(_Puppet,_,_)
AND
DB_IsPlayer(_Player)
AND
QRY_ARX_DT_DeathRoom_InDeathRoomFight((CHARACTERGUID)_Player)
THEN
Proc_ARX_DT_DeathRoom_GetDist(_Puppet,_Player);


PROC
Proc_ARX_DT_DeathRoom_GetDist((CHARACTERGUID)_Char,(CHARACTERGUID)_Target)
AND
GetDistanceTo((CHARACTERGUID)_Char,(CHARACTERGUID)_Target,_Dist)
THEN
DB_ARX_DT_DeathRoom_FartestTarget(_Char,_Target,_Dist);
Proc_ARX_DT_DeathRoom_TakeGreatest(_Char,_Target,_Dist);


PROC
Proc_ARX_DT_DeathRoom_TakeGreatest((CHARACTERGUID)_Char,(CHARACTERGUID)_Target,(REAL)_Dist)
AND
DB_ARX_DT_DeathRoom_FartestTarget(_Char,_OtherTarget,_OtherDist)
AND
_Target != _OtherTarget
AND
_Dist > _OtherDist
THEN
NOT DB_ARX_DT_DeathRoom_FartestTarget(_Char,_OtherTarget,_OtherDist);


PROC
Proc_ARX_DT_DeathRoom_TakeGreatest((CHARACTERGUID)_Char,(CHARACTERGUID)_Target,(REAL)_Dist)
AND
DB_ARX_DT_DeathRoom_FartestTarget(_Char,_OtherTarget,_OtherDist)
AND
_Target != _OtherTarget
AND
_Dist < _OtherDist
THEN
NOT DB_ARX_DT_DeathRoom_FartestTarget(_Char,_Target,_Dist);


PROC
Proc_ARX_DT_DeathRoom_SwapPos((CHARACTERGUID)_Char)
AND
DB_ARX_DT_DeathRoom_FartestTarget(_Char,_Target,_Dist)
AND
GetPosition(_Target,_pX,_pY,_pZ)
AND
DB_ARX_DT_DeathRoom_CharPos(_Char,_X,_Y,_Z)
THEN
TeleportToPosition(_Char,_pX,_pY,_pZ,"",0);
TeleportToPosition(_Target,_X,_Y,_Z,"",0);
PlayEffectAtPosition("RS3_FX_GP_ScriptedEvent_Teleport_GenericSmoke_01",_pX,_pY,_pZ);
PlayEffectAtPosition("RS3_FX_GP_ScriptedEvent_Teleport_GenericSmoke_01",_X,_Y,_Z);
Proc_ARX_DT_DeathRoom_SwapPosPlayAD(_Char);
Proc_ARX_DT_DeathRoom_SwapPosPlayAD(_Target);


PROC
Proc_ARX_DT_DeathRoom_SwapPosPlayAD((CHARACTERGUID)_Char)
AND
DB_IsPlayer(_Char)
THEN
Proc_StartDialog(1,"ARX_AD_DivineTomb_DeathRoom_Teleported",_Char);


PROC
Proc_ARX_DT_DeathRoom_SwapPos((CHARACTERGUID)_Char)
AND
DB_ARX_DT_DeathRoom_FartestTarget(_Char,_Target,_Dist)
THEN
NOT DB_ARX_DT_DeathRoom_FartestTarget(_Char,_Target,_Dist);


PROC
Proc_ARX_DT_DeathRoom_SwapPos((CHARACTERGUID)_Char)
AND
DB_ARX_DT_DeathRoom_CharPos(_Char,_X,_Y,_Z)
THEN
NOT DB_ARX_DT_DeathRoom_CharPos(_Char,_X,_Y,_Z);

//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "ARX"
