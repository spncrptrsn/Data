Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_PolymorphStatuses("Dwarf","SHAPESHIFT_DWARF");
DB_PolymorphStatuses("Human","SHAPESHIFT_HUMAN");
DB_PolymorphStatuses("Elf","SHAPESHIFT_ELF");
DB_PolymorphStatuses("Lizard","SHAPESHIFT_LIZARD");

DB_Shapeshifting_OriginalRaces("Dwarf", "REALLY_DWARF");
DB_Shapeshifting_OriginalRaces("Human", "REALLY_HUMAN");
DB_Shapeshifting_OriginalRaces("Elf", "REALLY_ELF");
DB_Shapeshifting_OriginalRaces("Lizard", "REALLY_LIZARD");

DB_Shapeshifting_FaceRipper_TagToFaceType("DWARF","QUEST_Undead_Ripped_Face_Dwarves_A_bd054a14-1d53-45e8-9030-52e67e3f092c");
DB_Shapeshifting_FaceRipper_TagToFaceType("ELF","QUEST_Undead_Ripped_Face_Elves_A_01cbe976-0ab7-4c7a-bfd4-33273158b37e");
DB_Shapeshifting_FaceRipper_TagToFaceType("HUMAN","QUEST_Undead_Ripped_Face_Humans_A_defbdd34-9ff2-49bd-8b76-d026ba0fd4dc");
DB_Shapeshifting_FaceRipper_TagToFaceType("LIZARD","ITEMGUID_QUEST_Undead_Ripped_Face_Lizards_A_c567a4f0-568d-4a3e-8312-238d0e8bf8c7");

DB_UndeadRacePresets(0,"Undead_Dwarf");
DB_UndeadRacePresets(1,"Undead_Elf");
DB_UndeadRacePresets(2,"Undead_Human");
DB_UndeadRacePresets(3,"Undead_Lizard");

DB_GLOBAL_Shapeshifting_MaskTemplates("EQ_Shapeshifter_Mask_A_01cdf746-dbb0-4db6-9232-7dbb68b81e52");
DB_GLOBAL_Shapeshifting_MaskTemplates("EQ_Shapeshifter_Lizard_Mask_B_d06c9a71-439a-4a49-b796-0d4932fe9412");
DB_GLOBAL_Shapeshifting_MaskTemplates("EQ_Shapeshifter_Human_Mask_B_7bb0eb59-ee99-4bf7-a9f9-51b5ba157718");
DB_GLOBAL_Shapeshifting_MaskTemplates("EQ_Shapeshifter_Elf_Mask_B_6ce170c1-aa4c-4274-9199-849794f1728f");
DB_GLOBAL_Shapeshifting_MaskTemplates("EQ_Shapeshifter_Dwarf_Mask_B_3f50792e-e18b-4fb8-a838-19ec37cf3465");

KBSECTION
//REGION Mask of the shapeshifter
IF
CharacterStatusApplied(_Player,_Status,_Player)
AND
DB_PolymorphStatuses(_,_Status)
AND
DB_IsPlayer(_Player)
AND
CharacterGetReservedUserID(_Player,_UserID)
AND
GetUserProfileID(_UserID,_UserProfileID)
AND
NOT DB_GLOBAL_Shapeshifting_UsedMask(_UserProfileID)
THEN
DB_GLOBAL_Shapeshifting_UsedMask(_UserProfileID);
Proc_StartDialog(0,"GLO_FirstUseShapeshiftingMask",_Player);

IF
ItemTemplateUnEquipped(_Template,_Char)
AND
DB_GLOBAL_Shapeshifting_MaskTemplates(_Template)
AND
DB_CharacterPolymorphedInto(_Char,_)
THEN
CharacterUseSkill(_Char,"Shout_CancelPolymorphism",_Char,1,1,1);

//END_REGION

//REGION Face ripper
IF
CharacterUsedSkillOnTarget(_Player,_Target,"Target_FaceRipper",_,_)
AND
DB_Shapeshifting_FaceRipper_TagToFaceType(_Tag,_FaceType)
AND
IsTagged(_Target,_Tag,1)
THEN
ItemTemplateAddTo(_FaceType,_Player,1);
//END_REGION

//REGION Undead origins
PROC
ProcMarkUndeadOrigin((CHARACTERGUID)_Player)
AND
DB_UndeadCharacter(_Player)
AND
DB_CurrentLevel(_NewRegion)
AND
IsGameLevel(_NewRegion,1)
THEN
DB_RestartUndeadCrime(_Player);

IF
RegionStarted(_)
AND
DB_UndeadCharacter((CHARACTERGUID)_Player)
THEN
DB_RestartUndeadCrime(_Player);

PROC
PROC_GLO_PartyMembers_MakeNPCHook((CHARACTERGUID)_PartyMember)
AND
DB_UndeadCharacter(_PartyMember)
THEN
NOT DB_UndeadCharacter(_PartyMember);
NOT DB_RestartUndeadCrime(_PartyMember);
CharacterStopCrime(_PartyMember,"ActiveUndead",NULL_00000000-0000-0000-0000-000000000000);

IF
RegionEnded(_)
AND
DB_UndeadCharacter((CHARACTERGUID)_Player)
THEN
NOT DB_RestartUndeadCrime(_Player);
CharacterStopCrime(_Player,"ActiveUndead",NULL_00000000-0000-0000-0000-000000000000);

IF
DB_UndeadCharacter(_Char)
THEN
DB_PolymorphTags(_Char,"MASKED_UNDEAD");

IF
DB_CharacterPolymorphedInto(_Char,_)
AND
DB_UndeadCharacter(_Char)
THEN
DB_RestartUndeadCrime(_Char);
SetTag(_Char,"UNDEAD");
ClearTag(_Char,"VEILED_UNDEAD");
CharacterStopCrime(_Char,"ActiveUndead",NULL_00000000-0000-0000-0000-000000000000);

IF
DB_RestartUndeadCrime(_Char)
AND
NOT DB_CharacterPolymorphedInto(_Char,_)
AND
QRY_HasOpenArmourSlot(_Char)
AND
NOT QryIsPolymorphing(_Char)
THEN
CharacterRegisterCrime(_Char,"ActiveUndead",NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,0);

IF
DB_RestartUndeadCrime(_Char)
AND
NOT DB_CharacterPolymorphedInto(_Char,_)
AND
NOT QRY_HasOpenArmourSlot(_Char)
AND
NOT QryIsPolymorphing(_Char)
THEN
SetTag(_Char,"VEILED_UNDEAD");

IF
ItemTemplateEquipped(_,_Char)
AND
DB_UndeadCharacter(_Char)
AND
NOT DB_InCharacterCreation(1)
AND
DB_CurrentLevel(_)
AND
DB_UndeadCharacter(_Char)
AND
NOT DB_CharacterPolymorphedInto(_Char,_)
AND
NOT QRY_HasOpenArmourSlot(_Char)
THEN
SetTag(_Char,"VEILED_UNDEAD");
CharacterStopCrime(_Char,"ActiveUndead",NULL_00000000-0000-0000-0000-000000000000);

IF
ItemTemplateEquipped(_,_)
AND
DB_OpenArmourSlot(_Slot)
THEN
NOT DB_OpenArmourSlot(_Slot);

IF
ItemTemplateUnEquipped(_,_Char)
AND
DB_UndeadCharacter(_Char)
AND
NOT DB_InCharacterCreation(1)
AND
DB_CurrentLevel(_)
AND
NOT DB_CharacterPolymorphedInto(_Char,_)
AND
QRY_HasOpenArmourSlot(_Char)
AND
IsTagged(_Char,"VEILED_UNDEAD",1)
THEN
ClearTag(_Char,"VEILED_UNDEAD");
CharacterRegisterCrime(_Char,"ActiveUndead",NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,0);

PROC
PROC_GLOBAL_DialogCustomOverride((GUIDSTRING)_Npc,(GUIDSTRING)_Player) 
AND 
NOT DB_FoundDialog(_Npc,_Player) 
AND
DB_UndeadCharacter((CHARACTERGUID)_Player)
AND
ObjectIsCharacter(_Npc,1)
AND
IsTagged(_Player,"VEILED_UNDEAD",0)
AND
IsTagged(_Player,"MASKED_UNDEAD",0)
AND
CharacterIsCrimeEnabled((CHARACTERGUID)_Npc,"ActiveUndead",1)
AND
NOT QRY_NPCIgnoresUndeadCrime(_Npc)
THEN
DB_FoundDialog(_Npc,_Player);
ProcStartUndeadAttackDialog(_Npc,_Player);

PROC
ProcStartUndeadAttackDialog((CHARACTERGUID)_Npc,(CHARACTERGUID)_Player)
AND
CharacterCanFight(_Npc,1)
THEN
CharacterDisableCrime(_Npc,"ActiveUndead");
DB_ReactingToUndead(_Npc);
Proc_StartDialog(0, "GEB_Attack_Undead", _Npc, _Player);

IF
DialogEnded("GEB_Attack_Undead",_Inst)
AND
DB_DialogNPCs(_Inst,_NPC,1)
AND
DB_ReactingToUndead((CHARACTERGUID)_NPC)
THEN
NOT DB_ReactingToUndead(_NPC);
CharacterEnableCrime(_Npc,"ActiveUndead");

QRY
QRY_NPCIgnoresUndeadCrime((CHARACTERGUID)_Npc)
AND
CharacterCanReactToCrime(_NPC,"ActiveUndead",0)
THEN
DB_NOOP(1);

IF
ItemTemplateUnEquipped(_,_)
AND
DB_OpenArmourSlot(_Slot)
THEN
NOT DB_OpenArmourSlot(_Slot);

QRY
QRY_HasOpenArmourSlot((CHARACTERGUID)_Char)
AND
NOT CharacterGetEquippedItem(_Char,"Helmet",_)
THEN
DB_OpenArmourSlot("Helmet");

QRY
QRY_HasOpenArmourSlot((CHARACTERGUID)_Char)
AND
NOT CharacterGetEquippedItem(_Char,"Breast",_)
THEN
DB_OpenArmourSlot("Breast");

QRY
QRY_HasOpenArmourSlot((CHARACTERGUID)_Char)
AND
NOT CharacterGetEquippedItem(_Char,"Leggings",_)
THEN
DB_OpenArmourSlot("Leggings");

QRY
QryIsPolymorphing((CHARACTERGUID)_Character)
AND
DB_PolymorphStatuses(_,_Status)
AND
HasAppliedStatus(_Character,_Status,1)
THEN
DB_Noop(1);
//END_REGION

//REGION Veiled Undead status

IF
ObjectWasTagged((CHARACTERGUID)_Player,"VEILED_UNDEAD")
AND
DB_IsPlayer(_Player)
THEN
ApplyStatus(_Player,"VEILED_UNDEAD",-1.0,1);

IF
ObjectLostTag((CHARACTERGUID)_Player,"VEILED_UNDEAD")
AND
DB_IsPlayer(_Player)
THEN
RemoveStatus(_Player,"VEILED_UNDEAD");

IF
CharacterResurrected((CHARACTERGUID)_Player)
AND
DB_IsPlayer(_Player)
AND
IsTagged(_Player, "VEILED_UNDEAD", 1)
THEN
ApplyStatus(_Player,"VEILED_UNDEAD",-1.0,1);

//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "__Shared_Campaign"
