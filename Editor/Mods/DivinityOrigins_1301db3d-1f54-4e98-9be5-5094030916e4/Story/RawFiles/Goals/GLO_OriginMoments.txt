Version 1
SubGoalCombiner SGC_AND
INITSECTION
// The friend zone permeates shapeshifting forms
DB_SharedObjectFlags("GLO_FriendZone_Beast");
DB_SharedObjectFlags("GLO_FriendZone_Fane");
DB_SharedObjectFlags("GLO_FriendZone_Ifan");
DB_SharedObjectFlags("GLO_FriendZone_Lohse");
DB_SharedObjectFlags("GLO_FriendZone_RedPrince");
DB_SharedObjectFlags("GLO_FriendZone_Sebille");

DB_ShapeshiftTag("IFAN","SHAPESHIFT_IFAN");
DB_ShapeshiftTag("SEBILLE","SHAPESHIFT_SEBILLE");
DB_ShapeshiftTag("LOHSE","SHAPESHIFT_LOHSE");
DB_ShapeshiftTag("RED PRINCE","SHAPESHIFT_RED PRINCE");
DB_ShapeshiftTag("FANE","SHAPESHIFT_FANE");
DB_ShapeshiftTag("BEAST","SHAPESHIFT_BEAST");
KBSECTION
IF
DB_OriginMomentTag_HighPriority((STRING)_Dialog,(STRING)_Tag,(STRING)_COMDialog)
THEN
DB_OriginMomentTag(_Dialog,_Tag,_COMDialog);

//REGION Two-speaker dialog
//Character initiates conversation while companion with HIGH PRIORITY matching origin-tag is near.
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC,(GUIDSTRING)_OrigSpeaker)
AND
DB_OriginMomentTag_HighPriority(_Dialog,_Tag,_COMDialog)
AND
DB_OriginMomentTag(_Dialog,_Tag,_COMDialog)
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Companion,_Tag,1)
AND
QRY_SameUser(_Avatar,_Companion)
AND
QRY_SameUser(_Avatar,(CHARACTERGUID)_OrigSpeaker)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger((CHARACTERGUID)_Companion, _Dialog)
AND
QRY_OriginMoments_SpeakerIsAvailableAndInDialogRange(_Companion,_OrigSpeaker,_COMDialog)
AND
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC)
AND
QRY_OriginMomentPolymorphDrop(_Companion,_Dialog,_Tag,_COMDialog)
AND
QRY_StartCOMDialog(_COMDialog,_NPC,_Companion,_Avatar)
THEN
PROC_OM_MaybePlayCOMTut(_Avatar,_Companion);
DB_OriginMomentStarted(_Dialog);
DB_OriginDialog(_Companion,_Dialog);

//Avatar with matching origin-tag initiates conversation.
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC,(GUIDSTRING)_Avatar)
AND
NOT DB_OriginMomentStarted(_Dialog)
AND
DB_OriginMomentTag(_Dialog,_Tag,_COMDialog)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Avatar,_Tag,1)
AND
IsTagged(_Avatar,"AVATAR",1)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger(_Avatar, _Dialog)
AND
QRY_OriginMomentPolymorphDrop((CHARACTERGUID)_Avatar,_Dialog,_Tag,_COMDialog)
AND
QRY_StartDialog(0,_Dialog,_NPC,_Avatar)
THEN
DB_OriginMomentStarted(_Dialog);
PROC_OM_ClearCOM(_COMDialog);

//Companion with matching origin-tag initiates conversation.
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC,(GUIDSTRING)_Companion)
AND
DB_OriginMomentTag(_Dialog,_Tag,_COMDialog)
AND
NOT DB_OriginMomentStarted(_Dialog)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Companion,_Tag,1)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger((CHARACTERGUID)_Companion, _Dialog)
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC)
AND
QRY_SameUser(_Avatar,_Companion)
AND
QRY_OriginMomentPolymorphDrop((CHARACTERGUID)_Companion,_Dialog,_Tag,_COMDialog)
AND
QRY_StartCOMDialog(_COMDialog,_NPC,_Companion,_Avatar)
THEN
PROC_OM_MaybePlayCOMTut(_Avatar,_Companion);
DB_OriginMomentStarted(_Dialog);
DB_OriginDialog(_Companion,_Dialog);

//Character without matching origin-tag initiates conversation while avatar with matching origin-tag is near.
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC,(GUIDSTRING)_OrigSpeaker)
AND
NOT DB_OriginMomentStarted(_Dialog)
AND
DB_OriginMomentTag(_Dialog,_Tag,_COMDialog)
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Avatar,_Tag,1)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger((CHARACTERGUID)_Avatar, _Dialog)
AND
QRY_SameUser(_Avatar,(CHARACTERGUID)_OrigSpeaker)
AND
QRY_OriginMoments_SpeakerIsAvailableAndInDialogRange(_Avatar,_OrigSpeaker,_COMDialog)
AND
QRY_OriginMomentPolymorphDrop(_Avatar,_Dialog,_Tag,_COMDialog)
AND
QRY_StartDialog(0,_Dialog,_NPC,_Avatar)
THEN
PROC_CheckPlayTut(_Avatar,"TUT_AOM_Switch");
DB_OriginMomentStarted(_Dialog);
PROC_OM_ClearCOM(_COMDialog);

//Character without matching origin-tag initiates conversation while companion with matching origin-tag is near.
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC,(GUIDSTRING)_OrigSpeaker)
AND
NOT DB_OriginMomentStarted(_Dialog)
AND
DB_OriginMomentTag(_Dialog,_Tag,_COMDialog)
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Companion,_Tag,1)
AND
QRY_SameUser(_Avatar,_Companion)
AND
QRY_SameUser(_Avatar,(CHARACTERGUID)_OrigSpeaker)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger((CHARACTERGUID)_Companion, _Dialog)
AND
QRY_OriginMoments_SpeakerIsAvailableAndInDialogRange(_Companion,_OrigSpeaker,_COMDialog)
AND
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC)
AND
QRY_OriginMomentPolymorphDrop(_Companion,_Dialog,_Tag,_COMDialog)
AND
QRY_StartCOMDialog(_COMDialog,_NPC,_Companion,_Avatar)
THEN
PROC_OM_MaybePlayCOMTut(_Avatar,_Companion);
DB_OriginMomentStarted(_Dialog);
DB_OriginDialog(_Companion,_Dialog);

//If none of the previous rules triggered this is either a regular dialog or an AOM. Both require starting the original dialog.
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC,(GUIDSTRING)_Player)
AND
DB_OriginMomentTag(_Dialog,_Tag,_COMDialog)
AND
NOT DB_OriginMomentStarted(_Dialog)
AND
QRY_StartDialog(0,_Dialog,_NPC,_Player)
THEN
DB_NOOP(1);

//After certain COMs, let another COM queue.
IF
DialogEnded(_COMDialog,_Inst)
AND
DB_QueueFriendlyCOM(_COMDialog)
AND
DB_DialogNPCs(_Inst,_NPC,1)
AND
DB_DialogPlayers(_Inst,_OrigSpeaker,1)
AND
DB_OriginMomentTag((STRING)_Dialog,(STRING)_Tag2,(STRING)_COMDialog)
AND
DB_OriginMomentTag((STRING)_Dialog,(STRING)_Tag,(STRING)_COMDialog2)
AND
_COMDialog != _COMDialog2
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Companion,_Tag,1)
AND
QRY_SameUser(_Avatar,_Companion)
AND
QRY_SameUser(_Avatar,(CHARACTERGUID)_OrigSpeaker)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger(_Companion, _Dialog)
AND
QRY_OriginMoments_SpeakerIsAvailableAndInDialogRange(_Companion,_OrigSpeaker,_COMDialog2)
AND
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC)
AND
QRY_OriginMomentPolymorphDrop(_Companion,_Dialog,_Tag,_COMDialog2)
AND
QRY_StartCOMDialog(_COMDialog2,_NPC,_Companion,_Avatar)
THEN
PROC_OM_MaybePlayCOMTut(_Avatar,_Companion);
ObjectSetFlag(_Companion,"COMREQ_Request",0);
DB_OriginDialog(_Companion,_COMDialog2);

IF
DialogEnded(_COMDialog,_Inst)
AND
DB_QueueFriendlyCOM(_COMDialog)
AND
DB_DialogNPCs(_Inst,_NPC,1)
AND
DB_DialogPlayers(_Inst,_OrigSpeaker,1)
AND
DB_OriginMomentTag((STRING)_Dialog,(STRING)_Tag2,(STRING)_COMDialog)
AND
DB_OriginMomentTag((STRING)_Dialog,(STRING)_Tag,(STRING)_COMDialog2)
AND
_COMDialog != _COMDialog2
AND
DB_Avatars(_Avatar)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Avatar,_Tag,1)
AND
QRY_SameUser(_Avatar,(CHARACTERGUID)_OrigSpeaker)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger(_Avatar, _Dialog)
AND
QRY_OriginMoments_SpeakerIsAvailableAndInDialogRange(_Avatar,_OrigSpeaker,_COMDialog2)
AND
QRY_OriginMomentPolymorphDrop(_Avatar,_Dialog,_Tag,_COMDialog2)
AND
QRY_StartDialog(0,_Dialog,_NPC,_Avatar)
THEN
PROC_OM_ClearCOM(_COMDialog2);

//COMREQ Result
IF
DialogEnded(_COM_Dialog,_Inst)
AND
DB_OriginMomentTag(_Dialog,_Tag,_COM_Dialog)
AND
DB_DialogPlayers(_Inst,_Companion,1)
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,_Avatar)
AND
ObjectGetFlag(_Companion,"COMREQ_Denied",0)
THEN
PROC_OM_ClearCOM(_COM_Dialog);
Proc_COMFinishedOnce(_COM_Dialog,(CHARACTERGUID)_Avatar);

PROC
Proc_COMFinishedOnce((STRING)_COM_Dialog,(CHARACTERGUID)_Avatar)
AND
NOT DB_DialogRequestFailed(_COM_Dialog,_)
AND
StringConcatenate(_COM_Dialog,"_FinishedOnce",_FinishedQuery)
AND
QueryOnlyOnce(_FinishedQuery)
THEN
Proc_COMFinished(_COM_Dialog,(CHARACTERGUID)_Avatar);

IF
DialogEnded(_COM_Dialog,_Inst)
AND
DB_OriginMomentTag(_Dialog,_Tag,_COM_Dialog)
AND
DB_DialogNPCs(_Inst,_NPC,1)
AND
DB_DialogPlayers(_Inst,_Companion,1)
AND
ObjectGetFlag(_Companion,"COMREQ_Denied",1)
THEN
DB_OriginMoment_COMREQ_Denied((CHARACTERGUID)_Companion,_NPC);
PROC_OM_ClearCOM(_COM_Dialog);
ObjectClearFlag(_Companion,"COMREQ_Denied",_Inst);

//Cleanup
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC,(GUIDSTRING)_Player)
AND
DB_OriginMomentStarted(_Dialog)
THEN
NOT DB_OriginMomentStarted(_Dialog);

//After a dialog, nearby party-companions with a matching origin-tag, will ask permission to talk to the NPC
IF
DialogEnded(_Dialog,_Inst)
AND
DB_DialogNPCs(_Inst,_NPC,1)
AND
DB_DialogPlayers(_Inst,_OrigSpeaker,1)
AND
DB_OriginMomentTag((STRING)_Dialog,(STRING)_Tag,(STRING)_COMDialog)
AND
NOT DB_OriginMoment_COMNeverAfterDialog(_COMDialog)
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Companion,_Tag,1)
AND
QRY_SameUser(_Avatar,_Companion)
AND
QRY_SameUser(_Avatar,(CHARACTERGUID)_OrigSpeaker)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger(_Companion, _Dialog)
AND
QRY_OriginMoments_SpeakerIsAvailableAndInDialogRange(_Companion,_OrigSpeaker,_COMDialog)
AND
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC)
AND
QRY_OriginMomentPolymorphDrop(_Companion,_Dialog,_Tag,_COMDialog)
AND
QRY_StartCOMDialog(_COMDialog,_NPC,_Companion,_Avatar)
THEN
PROC_OM_MaybePlayCOMTut(_Avatar,_Companion);
ObjectSetFlag(_Companion,"COMREQ_Request",0);
DB_OriginDialog(_Companion,_COMDialog);
//END_REGION
 
//REGION Three-speaker dialog
IF
DB_OriginMomentTag_3SP_HighPriority((STRING)_Dialog,(STRING)_Tag,(STRING)_COMDialog)
THEN
DB_OriginMomentTag_3SP(_Dialog,_Tag,_COMDialog);

//Avatar initiates conversation while companion with HIGH PRIORITY matching origin-tag is near.
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC, (GUIDSTRING)_NPC2,(GUIDSTRING)_OrigSpeaker)
AND
DB_OriginMomentTag_3SP_HighPriority((STRING)_Dialog, (STRING)_Tag, (STRING)_COMDialog)
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Companion,_Tag,1)
AND
QRY_SameUser(_Avatar,_Companion)
AND
QRY_SameUser(_Avatar,(CHARACTERGUID)_OrigSpeaker)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger((CHARACTERGUID)_Companion, _Dialog)
AND
QRY_OriginMoments_SpeakerIsAvailableAndInDialogRange(_Companion,_OrigSpeaker,_COMDialog)
AND
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC)
AND
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC2)
AND
QRY_OriginMomentPolymorphDrop(_Companion,_Dialog,_Tag,_COMDialog)
AND
QRY_StartCOMDialog(_COMDialog,_NPC, _NPC2, _Companion,_Avatar)
THEN
PROC_OM_MaybePlayCOMTut(_Avatar,_Companion);
DB_OriginMomentStarted(_Dialog);
DB_OriginDialog(_Companion,_COMDialog);

//Avatar with matching origin-tag initiates conversation.
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC, (GUIDSTRING)_NPC2, (GUIDSTRING)_Avatar)
AND
NOT DB_OriginMomentStarted(_Dialog)
AND
DB_OriginMomentTag_3SP(_Dialog,_Tag,_COMDialog)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Avatar,_Tag,1)
AND
IsTagged(_Avatar,"AVATAR",1)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger((CHARACTERGUID)_Avatar, _Dialog)
AND
QRY_OriginMomentPolymorphDrop((CHARACTERGUID)_Avatar,_Dialog,_Tag,_COMDialog)
AND
QRY_StartDialog(0,_Dialog,_NPC, _NPC2, _Avatar)
THEN
DB_OriginMomentStarted(_Dialog);
PROC_OM_Clear3SPCOM(_COMDialog);

//Companion with matching origin-tag initiates conversation.
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC, (GUIDSTRING)_NPC2, (GUIDSTRING)_Companion)
AND
DB_OriginMomentTag_3SP(_Dialog,_Tag,_COMDialog)
AND
NOT DB_OriginMomentStarted(_Dialog)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Companion,_Tag,1)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger((CHARACTERGUID)_Companion, _Dialog)
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC)
AND
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC2)
AND
QRY_SameUser(_Avatar,_Companion)
AND
QRY_OriginMomentPolymorphDrop((CHARACTERGUID)_Companion,_Dialog,_Tag,_COMDialog)
AND
QRY_StartCOMDialog(_COMDialog,_NPC, _NPC2,_Companion,_Avatar)
THEN
PROC_OM_MaybePlayCOMTut(_Avatar,_Companion);
DB_OriginMomentStarted(_Dialog);
DB_OriginDialog(_Companion,_COMDialog);

//Character without matching origin-tag initiates conversation while avatar with matching origin-tag is near.
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC, (GUIDSTRING)_NPC2, (GUIDSTRING)_OrigSpeaker)
AND
NOT DB_OriginMomentStarted(_Dialog)
AND
DB_OriginMomentTag_3SP(_Dialog,_Tag,_COMDialog)
AND
DB_Avatars(_Avatar)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Avatar,_Tag,1)
AND
QRY_SameUser(_Avatar,(CHARACTERGUID)_OrigSpeaker)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger((CHARACTERGUID)_Avatar, _Dialog)
AND
QRY_OriginMoments_SpeakerIsAvailableAndInDialogRange(_Avatar,_OrigSpeaker,_COMDialog)
AND
QRY_OriginMomentPolymorphDrop(_Avatar,_Dialog,_Tag,_COMDialog)
AND
QRY_StartDialog(0,_Dialog,_NPC, _NPC2,_Avatar)
THEN
PROC_CheckPlayTut(_Avatar,"TUT_AOM_Switch");
DB_OriginMomentStarted(_Dialog);
PROC_OM_Clear3SPCOM(_COMDialog);

//Character without matching origin-tag initiates conversation while companion with matching origin-tag is near.
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC, (GUIDSTRING)_NPC2,(GUIDSTRING)_OrigSpeaker)
AND
NOT DB_OriginMomentStarted(_Dialog)
AND
DB_OriginMomentTag_3SP(_Dialog,_Tag,_COMDialog)
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Companion,_Tag,1)
AND
QRY_SameUser(_Avatar,_Companion)
AND
QRY_SameUser(_Avatar,(CHARACTERGUID)_OrigSpeaker)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger(_Companion, _Dialog)
AND
QRY_OriginMoments_SpeakerIsAvailableAndInDialogRange(_Companion,_OrigSpeaker,_COMDialog)
AND
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC)
AND
QRY_OriginMomentPolymorphDrop(_Companion,_Dialog,_Tag,_COMDialog)
AND
QRY_StartCOMDialog(_COMDialog,_NPC, _NPC2, _Companion,_Avatar)
THEN
PROC_OM_MaybePlayCOMTut(_Avatar,_Companion);
DB_OriginMomentStarted(_Dialog);
DB_OriginDialog(_Companion,_COMDialog);

PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC, (GUIDSTRING)_NPC2,(GUIDSTRING)_OrigSpeaker)
AND
NOT DB_OriginMomentStarted(_Dialog)
AND
DB_OriginMomentTag_3SP(_Dialog,_Tag,_COMDialog)
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Companion,_Tag,1)
AND
QRY_SameUser(_Avatar,_Companion)
AND
QRY_SameUser(_Avatar,(CHARACTERGUID)_OrigSpeaker)
AND
NOT QRY_OriginMoment_OutsideCOMTrigger(_Companion, _Dialog)
AND
QRY_OriginMoments_SpeakerIsAvailableAndInDialogRange(_Companion,(CHARACTERGUID)_NPC2,_COMDialog)
AND
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC)
AND
QRY_OriginMomentPolymorphDrop(_Companion,_Dialog,_Tag,_COMDialog)
AND
QRY_StartCOMDialog(_COMDialog,_NPC, _NPC2, _Companion,_Avatar)
THEN
PROC_OM_MaybePlayCOMTut(_Avatar,_Companion);
DB_OriginMomentStarted(_Dialog);
DB_OriginDialog(_Companion,_COMDialog);

//If none of the previous rules triggered this is either a regular dialog or an AOM. Both require starting the original dialog.
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC, (GUIDSTRING)_NPC2, (GUIDSTRING)_Player)
AND
DB_OriginMomentTag_3SP(_Dialog,_Tag,_COMDialog)
AND
NOT DB_OriginMomentStarted(_Dialog)
AND
QRY_StartDialog(0,_Dialog,_NPC, _NPC2, _Player)
THEN
DB_NOOP(1);

//COMREQ Result
IF
DialogEnded(_COM_Dialog,_Inst)
AND
DB_OriginMomentTag_3SP(_Dialog,_Tag,_COM_Dialog)
AND
DB_DialogPlayers(_Inst,_Companion,1)
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,_Avatar)
AND
ObjectGetFlag(_Companion,"COMREQ_Denied",0)
THEN
PROC_OM_Clear3SPCOM(_COM_Dialog);
Proc_COMFinishedOnce(_COM_Dialog,(CHARACTERGUID)_Avatar);

IF
DialogEnded(_COM_Dialog,_Inst)
AND
DB_OriginMomentTag_3SP(_Dialog,_Tag,_COM_Dialog)
AND
DB_DialogPlayers(_Inst,_Companion,1)
AND
ObjectGetFlag(_Companion,"COMREQ_Denied",1)
AND
DB_DialogNPCs(_Inst,_NPC,1)
AND
DB_DialogNPCs(_Inst,_NPC2,2)
THEN
PROC_OM_Clear3SPCOM(_COM_Dialog);
DB_OriginMoment_COMREQ_Denied((CHARACTERGUID)_Companion,_NPC);
DB_OriginMoment_COMREQ_Denied((CHARACTERGUID)_Companion,_NPC2);
ObjectClearFlag(_Companion,"COMREQ_Denied",_Inst);

//Cleanup
PROC
Proc_StartDialog(0,(STRING)_Dialog,(GUIDSTRING)_NPC, (GUIDSTRING)_NPC2,(GUIDSTRING)_Player)
AND
DB_OriginMomentStarted(_Dialog)
THEN
NOT DB_OriginMomentStarted(_Dialog);

//After a dialog, companions with a matching origin-tag, will ask permission to talk to the NPC
IF
DialogEnded(_Dialog,_Inst)
AND
DB_OriginMomentTag_3SP((STRING)_Dialog,(STRING)_Tag,(STRING)_COMDialog)
AND
NOT DB_OriginMoment_COMNeverAfterDialog(_COMDialog)
AND
DB_DialogNPCs(_Inst,_NPC,1)
AND
DB_DialogNPCs(_Inst,_NPC2,2)
AND
DB_DialogPlayers(_Inst,_OrigSpeaker,1)
AND
DB_CompanionAvatarBond((CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
QRY_IsTaggedForOM((CHARACTERGUID)_Companion,_Tag,1)
AND
QRY_SameUser(_Avatar,_Companion)
AND
QRY_SameUser(_Avatar,(CHARACTERGUID)_OrigSpeaker)
AND
QRY_OriginMoments_SpeakerIsAvailableAndInDialogRange(_Companion,_OrigSpeaker,_COMDialog)
AND
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC)
AND
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC2)
AND
QRY_OriginMomentPolymorphDrop(_Companion,_Dialog,_Tag,_COMDialog)
AND
QRY_StartCOMDialog(_COMDialog,_NPC,_NPC2,_Companion,_Avatar)
THEN
PROC_OM_MaybePlayCOMTut(_Avatar,_Companion);
ObjectSetFlag(_Companion,"COMREQ_Request",0);
DB_OriginDialog(_Companion,_COMDialog);
//END_REGION

//REGION Disable Trading and cleanup oneshot COMs
//Trade Disabling currently doesn't support queuing well (first COM blocks trade but second COM can trade.)
//Couldn't find a safe clean solution for these very limited harmless edgecases. Maybe later.
PROC
Proc_DialogFlagSetup((STRING)_COMDialog,(GUIDSTRING)_NPC,_,_)
AND
DB_OriginMomentTag(_Dialog,_Tag,_COMDialog)
AND
CharacterCanTrade((CHARACTERGUID)_NPC,1)
THEN
CharacterSetCanTrade(_NPC,0);
DB_OriginMomentTradeTempDisabled(_NPC);

PROC
PROC_OM_ClearCOM((STRING)_COM)
AND
NOT DB_DialogRequestFailed(_COM,_)
AND
DB_OriginMomentTag(_Dialog,_Tag,_COM)
THEN
NOT DB_OriginMomentTag(_Dialog,_Tag,_COM);

PROC
PROC_OM_ClearCOM((STRING)_COM)
AND
NOT DB_DialogRequestFailed(_COM,_)
AND
DB_OriginMomentTag_HighPriority(_Dialog,_Tag,_COM)
THEN
NOT DB_OriginMomentTag_HighPriority(_Dialog,_Tag,_COM);

PROC
PROC_OM_ClearCOM((STRING)_COM)
AND
DB_OriginMomentTradeTempDisabled(_NPC)
THEN
NOT DB_OriginMomentTradeTempDisabled(_NPC);
CharacterSetCanTrade((CHARACTERGUID)_NPC,1);

PROC
Proc_DialogFlagSetup((STRING)_COMDialog,(GUIDSTRING)_NPC,_,_,_)
AND
DB_OriginMomentTag_3SP(_Dialog,_Tag,_COMDialog)
AND
CharacterCanTrade((CHARACTERGUID)_NPC,1)
THEN
CharacterSetCanTrade(_NPC,0);
DB_OriginMomentTradeTempDisabled(_NPC);

PROC
PROC_OM_Clear3SPCOM((STRING)_COM)
AND
NOT DB_DialogRequestFailed(_COM,_)
AND
DB_OriginMomentTag_3SP(_Dialog,_Tag,_COM)
THEN
NOT DB_OriginMomentTag_3SP(_Dialog,_Tag,_COM);

PROC
PROC_OM_Clear3SPCOM((STRING)_COM)
AND
NOT DB_DialogRequestFailed(_COM,_)
AND
DB_OriginMomentTag_3SP_HighPriority(_Dialog,_Tag,_COM)
THEN
NOT DB_OriginMomentTag_3SP_HighPriority(_Dialog,_Tag,_COM);

PROC
PROC_OM_Clear3SPCOM((STRING)_COM)
AND
DB_OriginMomentTradeTempDisabled(_NPC)
THEN
NOT DB_OriginMomentTradeTempDisabled(_NPC);
CharacterSetCanTrade((CHARACTERGUID)_NPC,1);
//END_REGION

//REGION Helperfunctions
QRY
QRY_OriginMoments_GetMaxDistance((STRING)_COMDialog)
AND
DB_OriginMoments_MaxDistance(_Distance)
THEN
NOT DB_OriginMoments_MaxDistance(_Distance);

QRY
QRY_OriginMoments_GetMaxDistance((STRING)_COMDialog)
AND
NOT DB_OriginMoment_MaxDistance(_COMDialog,_)
THEN
DB_OriginMoments_MaxDistance(10.0);

QRY
QRY_OriginMoments_GetMaxDistance((STRING)_COMDialog)
AND
DB_OriginMoment_MaxDistance(_COMDialog,_Distance)
THEN
DB_OriginMoments_MaxDistance(_Distance);

QRY
QRY_OriginMoments_SpeakerIsAvailableAndInDialogRange((CHARACTERGUID)_Origin,(CHARACTERGUID)_NPC,(STRING)_COMDialog)
AND
QRY_SpeakerIsAvailable(_Origin)
AND
QRY_OriginMoments_GetMaxDistance(_COMDialog)
AND
DB_OriginMoments_MaxDistance(_MaxDistance)
AND
GetDistanceTo(_Origin,_NPC,_Dist)
AND
_Dist < _MaxDistance
THEN
DB_NOOP(1);

QRY
QRY_OriginMoment_OutsideCOMTrigger((CHARACTERGUID)_Character, (STRING)_Dialog)
AND
DB_OriginDialogTrigger(_Dialog, (TRIGGERGUID)_Trigger)
AND
ObjectIsInTrigger(_Character, _Trigger, 0)
THEN
DB_NOOP(0);

PROC
PROC_OM_MaybePlayCOMTut((CHARACTERGUID)_Avatar,(CHARACTERGUID)_Companion)
AND
GetDistanceTo(_Avatar,_Companion,_Dist)
AND
_Dist < 10.0
THEN
PROC_CheckPlayTut(_Avatar,"TUT_COM");

QRY
QRY_SameUser((CHARACTERGUID)_Avatar,(CHARACTERGUID)_Companion)
AND
CharacterGetReservedUserID(_Avatar,_ID)
AND
CharacterGetReservedUserID(_Companion,_ID)
THEN
DB_NOOP(1);

QRY
QRY_IsTaggedForOM((CHARACTERGUID)_Player,(STRING)_Tag,(INTEGER)_Value)
AND
IsTagged(_Player,_Tag,_Value)
THEN
DB_NOOP(1);

QRY
QRY_IsTaggedForOM((CHARACTERGUID)_Player,(STRING)_Tag,(INTEGER)_Value)
AND
DB_ShapeshiftTag(_Tag,_ShapeshiftTag)
AND
IsTagged(_Player,_ShapeshiftTag,_Value)
THEN
DB_NOOP(1);


//1) If the companion has the tag, they aren't polymorphed. -> Do nothing, Return true
//2) If there's a polymorph version of the OM. -> Do nothing, Return true
//3) If there isn't -> drop polymorph
QRY //1
QRY_OriginMomentPolymorphDrop((CHARACTERGUID)_Player,(STRING)_Dialog,(STRING)_Tag,(STRING)_COMDialog)
AND
IsTagged(_Player,_Tag,1)
THEN
DB_NOOP(1);

QRY //2a
QRY_OriginMomentPolymorphDrop((CHARACTERGUID)_Player,(STRING)_Dialog,(STRING)_Tag,(STRING)_COMDialog)
AND
DB_ShapeshiftTag(_Tag,_ShapeshiftTag)
AND
IsTagged(_Player,_ShapeshiftTag,1)
AND
DB_OriginMomentTag(_Dialog,_ShapeshiftTag,_COMDialog)
THEN
DB_NOOP(1);

QRY //2b
QRY_OriginMomentPolymorphDrop((CHARACTERGUID)_Player,(STRING)_Dialog,(STRING)_Tag,(STRING)_COMDialog)
AND
DB_ShapeshiftTag(_Tag,_ShapeshiftTag)
AND
IsTagged(_Player,_ShapeshiftTag,1)
AND
DB_OriginMomentTag_3SP(_Dialog,_ShapeshiftTag,_COMDialog)
THEN
DB_NOOP(1);

QRY //3
QRY_OriginMomentPolymorphDrop((CHARACTERGUID)_Player,(STRING)_Dialog,(STRING)_Tag,(STRING)_COMDialog)
AND
DB_ShapeshiftTag(_Tag,_ShapeshiftTag)
AND
IsTagged(_Player,_ShapeshiftTag,1)
AND
NOT DB_OriginMomentTag(_Dialog,_ShapeshiftTag,_COMDialog)
AND
NOT DB_OriginMomentTag_3SP(_Dialog,_ShapeshiftTag,_COMDialog)
THEN
ProcRemovePolymorphs(_Player);
PROC_CheckPlayTut(_Player,"TUT_PolymorphDrop");
//END_REGION

//REGION COM/OOM decider (2SP)
QRY
QRY_StartCOMDialog((STRING)_COMDialog,(CHARACTERGUID)_NPC,(CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
NOT QRY_SpeakerIsAvailable(_Avatar)
AND
QRY_StartDialog(0,_COMDialog,_NPC,_Companion,NULL_00000000-0000-0000-0000-000000000000)
THEN
ObjectSetFlag(_Companion,"AvatarNotPresent");

QRY
QRY_StartCOMDialog((STRING)_COMDialog,(CHARACTERGUID)_NPC,(CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
QRY_SpeakerIsAvailable(_Avatar)
AND
QRY_OriginMoments_GetMaxDistance(_COMDialog)
AND
DB_OriginMoments_MaxDistance(_MaxDistance)
AND
GetDistanceTo(_Companion,_Avatar,_Dist)
AND
_Dist > _MaxDistance
AND
QRY_StartDialog(0,_COMDialog,_NPC,_Companion,NULL_00000000-0000-0000-0000-000000000000)
THEN
ObjectSetFlag(_Companion,"AvatarNotPresent");

QRY
QRY_StartCOMDialog((STRING)_COMDialog,(CHARACTERGUID)_NPC,(CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
QRY_SpeakerIsAvailable(_Avatar)
AND
QRY_OriginMoments_GetMaxDistance(_COMDialog)
AND
DB_OriginMoments_MaxDistance(_MaxDistance)
AND
GetDistanceTo(_Companion,_Avatar,_Dist)
AND
_Dist <= _MaxDistance
AND
QRY_StartDialog(0,_COMDialog,_NPC,_Companion,_Avatar)
THEN
ObjectClearFlag(_Companion,"AvatarNotPresent");
MakePlayerActive((CHARACTERGUID)_Avatar);
//END_REGION 

//REGION COM/OOM decider (3SP)
QRY
QRY_StartCOMDialog((STRING)_COMDialog,(CHARACTERGUID)_NPC,(CHARACTERGUID)_NPC2,(CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
NOT QRY_SpeakerIsAvailable(_Avatar)
AND
QRY_StartDialog(0,_COMDialog,_NPC,_NPC2,_Companion,NULL_00000000-0000-0000-0000-000000000000)
THEN
ObjectSetFlag(_Companion,"AvatarNotPresent");

QRY
QRY_StartCOMDialog((STRING)_COMDialog,(CHARACTERGUID)_NPC,(CHARACTERGUID)_NPC2,(CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
QRY_SpeakerIsAvailable(_Avatar)
AND
QRY_OriginMoments_GetMaxDistance(_COMDialog)
AND
DB_OriginMoments_MaxDistance(_MaxDistance)
AND
GetDistanceTo(_Companion,_Avatar,_Dist)
AND
_Dist > _MaxDistance
AND
QRY_StartDialog(0,_COMDialog,_NPC,_NPC2,_Companion,NULL_00000000-0000-0000-0000-000000000000)
THEN
ObjectSetFlag(_Companion,"AvatarNotPresent");

QRY
QRY_StartCOMDialog((STRING)_COMDialog,(CHARACTERGUID)_NPC,(CHARACTERGUID)_NPC2,(CHARACTERGUID)_Companion,(CHARACTERGUID)_Avatar)
AND
QRY_SpeakerIsAvailable(_Avatar)
AND
QRY_OriginMoments_GetMaxDistance(_COMDialog)
AND
DB_OriginMoments_MaxDistance(_MaxDistance)
AND
GetDistanceTo(_Companion,_Avatar,_Dist)
AND
_Dist <= _MaxDistance
AND
QRY_StartDialog(0,_COMDialog,_NPC,_NPC2,_Companion,_Avatar)
THEN
ObjectClearFlag(_Companion,"AvatarNotPresent");
MakePlayerActive((CHARACTERGUID)_Avatar);
//END_REGION

//REGION With all these level travellers, reset COM_Denied on region ended
PROC
ProcRegionEnded((STRING)_Region)
AND
DB_OriginMoment_COMREQ_Denied(_Companion,_NPC)
THEN
NOT DB_OriginMoment_COMREQ_Denied(_Companion,_NPC);
DB_OriginMoment_COMREQ_WasDeniedOnce(_Companion,_NPC,_Region);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "DOS2ModWrapper"
