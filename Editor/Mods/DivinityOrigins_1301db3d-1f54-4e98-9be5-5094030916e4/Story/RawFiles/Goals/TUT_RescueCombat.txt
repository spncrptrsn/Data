Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_TUT_LowerDeck_RescueCombatVoidling((ITEMGUID)S_TUT_LowerDeck_Starboard_Helper_Invisible_A_001_a5528d7b-b26c-4141-8b07-c9e2a9205177,(ITEMGUID)ITEMGUID_S_TUT_LowerDeck_RescueCombat_VoidlingSpawn_000_b0286eaa-e03b-42a8-bb4d-53f3e52b5715);
DB_TUT_LowerDeck_RescueCombatVoidling(S_TUT_LowerDeck_Starboard_Helper_Invisible_A_002_e45a068b-70bb-4e91-973d-3d6c616aa072,ITEMGUID_S_TUT_LowerDeck_RescueCombat_VoidlingSpawn_001_79647956-ffc5-4488-a754-d57f63a61402);
DB_TUT_LowerDeck_RescueCombatVoidling(S_TUT_LowerDeck_Port_Helper_Invisible_A_001_df020bc5-7887-418e-a1ba-cf9c467d0ba9,ITEMGUID_S_TUT_LowerDeck_RescueCombat_VoidlingSpawn_002_1e1ae820-d4ab-4299-b07e-190441ea6a70);
//DB_TUT_LowerDeck_RescueCombatVoidling(S_TUT_LowerDeck_Port_Helper_Invisible_A_003_e63fe1a1-0834-4436-821c-f47f42c5d7ac,ITEMGUID_S_TUT_LowerDeck_RescueCombat_VoidlingSpawn_003_676b038a-b7e8-40dc-a215-bf8978e65fcf);
DB_TUT_LowerDeck_RescueCombatVoidling(S_TUT_LowerDeck_Port_Helper_Invisible_A_004_b5d5c52e-544c-445f-b0cf-ddcaf4cc4405,ITEMGUID_S_TUT_LowerDeck_RescueCombat_VoidlingSpawn_004_4ef9f67c-29c1-4a88-ab78-150155661c3a);
//DB_TUT_LowerDeck_RescueCombatVoidling(S_TUT_LowerDeck_Starboard_Helper_Invisible_A_004_cac5c6c1-7181-469b-9d11-b1a474994d08,ITEMGUID_S_TUT_LowerDeck_RescueCombat_VoidlingSpawn_005_1de485df-d13b-4498-bc2c-781fd401d322);

DB_KillCounter("TUT_RescueCombat",0);
KBSECTION
IF
TextEventSet("tut_hatchlinginthehole")
THEN
PROC_TUT_LowerDeck_LaunchVoidLings();

PROC
PROC_TUT_LowerDeck_LaunchVoidLings()
AND
DB_TUT_OriginsToRescue(_Origin)
AND
NOT DB_IsPlayer(_Origin)
THEN
SetRelationIndivFactionToPlayers(_Origin,100);

PROC
PROC_TUT_LowerDeck_LaunchVoidLings()
AND
DB_TUT_LowerDeck_RescueCombatVoidling(_LaunchPoint,_)
AND
Random(1000,_Delay)
THEN
ProcObjectTimer(_LaunchPoint,"TUT_LowerDeck_LaunchVoidling",_Delay);

PROC
ProcObjectTimerFinished(_LaunchPoint,"TUT_LowerDeck_LaunchVoidling")
AND
DB_TUT_LowerDeck_RescueCombatVoidling((ITEMGUID)_LaunchPoint,_LaunchDest)
AND
GetVarString(_LaunchPoint,"TurretShootEvent",_ShootEvent)
THEN
SetVarObject(_LaunchPoint,"TargetItem",_LaunchDest);
SetVarInteger(_LaunchPoint,"TurretCasterLevel",1);
SetStoryEvent(_LaunchPoint,_ShootEvent);

IF
StoryEvent(_Turret,"fire")
AND
DB_TUT_LowerDeck_RescueCombatVoidling((ITEMGUID)_Turret,_Destination)
AND
GetDistanceTo(_Turret,_Destination,_Dist)
AND
RealProduct(_Dist,100.0,_Time)
AND
Integer(_Time,_TimeInt)
THEN
ProcObjectTimer(_Turret,"TUT_LowerDeck_AddVoidwoken",_TimeInt);

PROC
ProcObjectTimerFinished(_Turret,"TUT_LowerDeck_AddVoidwoken")
AND
DB_TUT_LowerDeck_RescueCombatVoidling((ITEMGUID)_Turret,_Destination)
AND
GetPosition(_Destination,_X,_Y,_Z)
AND
CharacterCreateAtPosition(_X,_Y,_Z,"TUT_Creatures_Voidwoken_Hatchling_d3d153ae-4f4c-4d15-9082-2a8208831626",0,_Voidling)
THEN
PROC_TUT_AddRescueCombat(_Voidling);

PROC
PROC_TUT_AddRescueCombat((CHARACTERGUID)_Voidling)
AND
DB_KillCounter("TUT_RescueCombat",_PreviousNum)
AND
IntegerSum(_PreviousNum, 1, _NewNum)
THEN
NOT DB_KillCounter("TUT_RescueCombat",_PreviousNum);
DB_KillCounter("TUT_RescueCombat",_NewNum);

PROC
PROC_TUT_AddRescueCombat((CHARACTERGUID)_Voidling)
THEN
DB_KillCounter_Internal(_Voidling,"TUT_RescueCombat");

IF
GlobalFlagSet("TUT_LowerDeck_OriginsFleeingToTop")
THEN
PROC_TUT_LowerDeck_LaunchVoidLings();

//REGION A player (any player) should get the first turn in this combat
IF
CombatStarted(_CombatID)
AND
DB_KillCounter_Internal(_Voidling,"TUT_RescueCombat")
THEN
DB_NOOP(1);

IF
CombatStarted(_CombatID)
AND
DB_CombatCharacters(_Voidling,_CombatID)
AND
DB_KillCounter_Internal(_Voidling,"TUT_RescueCombat")
AND
QueryOnlyOnce("TUT_RescueCombat_GotCombatID")
THEN
DB_TUT_RescueCombat(_CombatID);

IF
CombatStarted(_CombatID)
AND
DB_TUT_RescueCombat(_CombatID)
THEN
DB_TUT_RescueCombatStarted(_CombatID);

IF
DB_TUT_RescueCombatStarted(_CombatID)
AND
DB_IsPlayer(_Player)
AND
DB_CombatCharacters(_Player,_CombatID)
AND
GlobalGetFlag("TUT_RescueCombat_JumpedToTurn",0)
THEN
JumpToTurn(_Player);
// Needed so the ADs on the first turns of the origins do not start
// before the VB of the player has finished
GlobalSetFlag("TUT_RescueCombat_JumpedToTurn");

// In case the CombatStarted event triggers before a player entered it
IF
ObjectEnteredCombat((CHARACTERGUID)_Player,_CombatID)
AND
DB_TUT_RescueCombatStarted(_CombatID)
AND
DB_IsPlayer(_Player)
AND
GlobalGetFlag("TUT_RescueCombat_JumpedToTurn",0)
THEN
JumpToTurn(_Player);

//END_REGION //A player should get the first turn in this combat

//REGION All players that participated in the rescue combat get a flag (to influence recruitment dialogs in FTJ)
IF
CombatStarted(_CombatID)
AND
DB_TUT_RescueCombat(_CombatID)
AND
DB_CombatCharacters(_Player,_CombatID)
AND
DB_IsPlayer(_Player)
THEN
ObjectSetFlag(_Player,"TUT_FoughtInRescueCombat");

// Players that join while the combat is ongoing
IF
ObjectEnteredCombat((CHARACTERGUID)_Player,_CombatID)
AND
DB_TUT_RescueCombat(_CombatID)
AND
DB_IsPlayer(_Player)
THEN
ObjectSetFlag(_Player,"TUT_FoughtInRescueCombat");

IF
ObjectFlagSet("TUT_FoughtInRescueCombat",_Player,_)
THEN
ObjectSetFlag(_Player,"GLO_SetTag_HERO");
//END_REGION

//REGION AD on first attack by origin
IF
ObjectTurnStarted((CHARACTERGUID)_Origin)
AND
DB_TUT_OriginsToRescue(_Origin)
AND
DB_GlobalFlag("TUT_LowerDeck_OriginsFleeingToTop")
AND
DB_GlobalFlag("TUT_RescueCombat_JumpedToTurn")
AND
NOT DB_IsPlayer(_Origin)
AND
CharacterIsDead(_Origin, 0)
AND
NOT DB_TUT_RescueCombat_FirstTurnAD(_Origin)
THEN
DB_TUT_RescueCombat_FirstTurnAD(_Origin);
SetStoryEvent(_Origin,"GEN_PauseCombatComments");
Proc_StartDialog(1,"TUT_AD_RescueCombat_FirstTurn",_Origin);
//END_REGION

//REGION Doing staggered AD after combat is over
PROC
ReactOnKillCounter("TUT_RescueCombat")
THEN
GlobalSetFlag("TUT_RescueCombatFinished");
PROC_TUT_RescueCombat_FinishAD();

IF
ObjectLeftCombat((CHARACTERGUID)_Origin, _)
AND
DB_TUT_OriginsToRescue(_Origin)
AND
GlobalGetFlag("TUT_LowerDeck_OriginsFleeingToTop", 1)
AND
NOT DB_IsPlayer(_Origin)
AND
CharacterIsDead(_Origin, 0)
THEN
DB_TUT_RescueCombat_FinishAD(_Origin);

PROC
PROC_TUT_RescueCombat_FinishAD()
AND
DB_TUT_RescueCombat_FinishAD(_Origin)
AND
QueryOnlyOnce("TUT_RescueCombat_FinishAD")
THEN
NOT DB_TUT_RescueCombat_FinishAD(_Origin);
Proc_StartDialog(1, "TUT_AD_RescueCombat_Finished", _Origin);

PROC
PROC_TUT_RescueCombat_FinishAD()
THEN
NOT DB_OnlyOnce("TUT_RescueCombat_FinishAD");

IF
AutomatedDialogEnded("TUT_AD_RescueCombat_Finished", _)
THEN
PROC_TUT_RescueCombat_FinishAD();

//END_REGION

//REGION Clean up
PROC
PROC_TUT_LowerDeck_RescueCombatVoidlingCleanUp()
AND
DB_TUT_LowerDeck_RescueCombatVoidling(_LaunchPoint,_LaunchDest)
THEN
NOT DB_TUT_LowerDeck_RescueCombatVoidling(_LaunchPoint,_LaunchDest);

PROC
ProcRegionEnded("TUT_Tutorial_A")
AND
DB_TUT_RescueCombat_FinishAD(_Origin)
THEN
NOT DB_TUT_RescueCombat_FinishAD(_Origin);

PROC
ProcRegionEnded("TUT_Tutorial_A")
AND
DB_KillCounter_Internal(_Voidling,"TUT_RescueCombat")
THEN
NOT DB_KillCounter_Internal(_Voidling,"TUT_RescueCombat");

PROC
ProcRegionEnded("TUT_Tutorial_A")
AND
DB_KillCounter("TUT_RescueCombat",_Num)
THEN
NOT DB_KillCounter("TUT_RescueCombat",_Num);

PROC
ProcRegionEnded("TUT_Tutorial_A")
THEN
PROC_TUT_LowerDeck_RescueCombatVoidlingCleanUp();

PROC
ProcRegionEnded("TUT_Tutorial_A")
AND
DB_OriginRecruitmentLocation_Region("TUT_Tutorial_A",_Origin,_,_)
AND
NOT DB_IsPlayer(_Origin)
THEN
// Make Origin NPCs neutral again to players
SetRelationIndivFactionToPlayers(_Origin,50);

PROC
ProcRegionEnded("TUT_Tutorial_A")
AND
DB_TUT_RescueCombat_FirstTurnAD(_Origin)
THEN
NOT DB_TUT_RescueCombat_FirstTurnAD(_Origin);

PROC
ProcRegionEnded("TUT_Tutorial_A")
THEN
GoalCompleted;
//END_REGION //Clean up
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "TUT_Rescue"
