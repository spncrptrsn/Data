Version 1
SubGoalCombiner SGC_AND
INITSECTION
/***********************
* Flags field: a bit field
* 0	: no checks
* 1 : no combat : don't show the tutorial if the character is active in combat
* 2 : no UI : don't show the tutorial if the character has a UI open 
* 4 : cancel on condition fail : the tutorial is removed from the queue if the conditions don't match, it can be sent again after that
* 8 : force enqueue (wait at least one frame)
* 16 : newfeature : this tutorial is specific for DOS2
***********************/
DB_TutorialInfo("TUT_Book","TUT_CAT_Inventory","TUT_Book_Title",0,0,-1,1,3,0);
DB_TutorialInfo("TUT_Camera","TUT_CAT_Exploring","TUT_Camera_Title",0,0,-1,1,2,0);
DB_TutorialInfo("TUT_Combat","TUT_CAT_Combat","TUT_Combat_Title",0,3,-1,1,0,0);
DB_TutorialInfo("TUT_Combat_Examine","TUT_CAT_Combat","TUT_Combat_Examine_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_Combat_Guard","TUT_CAT_Combat","TUT_Combat_Guard_Title",0,2,-1,2,0,0);
DB_TutorialInfo("TUT_Combat_TacticalView","TUT_CAT_Combat","TUT_Combat_TacticalView_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_Combat_TargetCycle","TUT_CAT_Combat","TUT_Combat_TargetCycle_Controller_Title",2,0,-1,1,0,0);
DB_TutorialInfo("TUT_Combat_TurnOrder","TUT_CAT_Combat","TUT_Combat_TurnOrder_Title",0,3,-1,1,0,0);
DB_TutorialInfo("TUT_Died","TUT_CAT_Combat","TUT_Died_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_Disarm","TUT_CAT_Exploring","TUT_Disarm_Title",0,0,-1,3,0,0);
DB_TutorialInfo("TUT_DragIcon","TUT_CAT_Exploring","TUT_DragIcon_Title",1,0,-1,1,0,0);
DB_TutorialInfo("TUT_Equipment","TUT_CAT_Inventory","TUT_Equipment_Title",0,0,-1,1,2,0);
DB_TutorialInfo("TUT_Flee","TUT_CAT_Combat","TUT_Flee_Title",0,3,-1,3,4,0);
DB_TutorialInfo("TUT_GasPit","TUT_CAT_Exploring","TUT_GasPit_Title",0,1,-1,3,0,0);
DB_TutorialInfo("TUT_GenericBehaviors","TUT_CAT_Exploring","TUT_GenericBehaviors_Title",0,0,-1,3,0,0);
DB_TutorialInfo("TUT_Hammer","TUT_CAT_Inventory","TUT_Hammer_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_HotbarAssignment","TUT_CAT_Inventory","TUT_HotbarAssignment_Title",0,3,-1,2,6,0);
DB_TutorialInfo("TUT_IdentifyingGlass","TUT_CAT_Inventory","TUT_IdentifyingGlass_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_Inventory","TUT_CAT_Inventory","TUT_Inventory_Title",0,1,-1,1,2,0);
DB_TutorialInfo("TUT_LevelUp","TUT_CAT_Inventory","TUT_LevelUp_Title",0,1,-1,2,3,0);
DB_TutorialInfo("TUT_Locked","TUT_CAT_Exploring","TUT_Locked_Title",0,0,-1,3,0,0);
DB_TutorialInfo("TUT_WoodenDoor","TUT_CAT_Exploring","TUT_WoodenDoor_Title",0,0,-1,3,0,0);
DB_TutorialInfo("TUT_Lockpick","TUT_CAT_Inventory","TUT_Lockpick_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_Mound","TUT_CAT_Exploring","TUT_Mound_Title",0,0,-1,3,0,0);
DB_TutorialInfo("TUT_Movement","TUT_CAT_Exploring","TUT_Movement_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_NoPetPal","TUT_CAT_Social","TUT_PetPal_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_Perception","TUT_CAT_Inventory","TUT_Perception_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_PetPal","TUT_CAT_Social","TUT_PetPal_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_PolymorphDrop","TUT_CAT_Social","TUT_PolymorphDrop_Title",0,0,-1,1,16,0);
DB_TutorialInfo("TUT_Potion","TUT_CAT_Combat","TUT_Potion_Title",0,1,-1,2,0,0);
DB_TutorialInfo("TUT_Pyramid","TUT_CAT_Exploring","TUT_Pyramid_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_Pyramid_2","TUT_CAT_Exploring","TUT_Pyramid_2_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_PyramidsPickup","TUT_CAT_Exploring","TUT_PyramidsPickup_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_ReflectionDialog","TUT_CAT_Social","TUT_ReflectionDialog_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_SaveLoad","TUT_CAT_General","TUT_SaveLoad_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_Scroll","TUT_CAT_Combat","TUT_Scroll_Title",0,0,-1,2,2,0);
DB_TutorialInfo("TUT_SpecialArrow","TUT_CAT_Combat","TUT_SpecialArrow_Title",0,0,-1,2,2,0);
DB_TutorialInfo("TUT_Shovel","TUT_CAT_Exploring","TUT_Shovel_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_Skill","TUT_CAT_Inventory","TUT_Skill_Title",0,0,-1,2,2,0);
DB_TutorialInfo("TUT_SkillUnlock","TUT_CAT_Combat","TUT_SkillUnlock_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_Stealing","TUT_CAT_Exploring","TUT_Stealing_Title",0,0,-1,3,0,0);
DB_TutorialInfo("TUT_Waypoint","TUT_CAT_Exploring","TUT_Waypoint_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_BondedAvatar","TUT_CAT_Social","TUT_BondedAvatar_Title",0,0,-1,1,16,0);
DB_TutorialInfo("TUT_HotbarLocked","TUT_CAT_Combat","TUT_HotbarLocked_Title",0,3,-1,1,0,10);
DB_TutorialInfo("TUT_Tooltips","TUT_CAT_Exploring","TUT_Tooltips_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_TagVillain","TUT_CAT_Social","TUT_TagVillain_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_TagHero","TUT_CAT_Social","TUT_TagHero_Title",0,0,-1,2,0,0);
DB_TutorialInfo("TUT_Waypoint","TUT_CAT_Exploring","TUT_Waypoint_Title",0,2,-1,1,0,0);
DB_TutorialInfo("TUT_Homestead","TUT_CAT_Exploring","TUT_Homestead_Title",0,1,-1,1,2,0);
DB_TutorialInfo("TUT_PolymorphAttribute","TUT_CAT_General","TUT_PolymorphAttribute_Title",2,1,-1,1,16,0);
KBSECTION
//REGION Tutorial Message
PROC
ProcPlayTut((CHARACTERGUID)_Char,(STRING)_Message)
AND 
DB_TutorialInfo(_Message,(STRING)_Cat,(STRING)_Title,(INTEGER)_ControllerType,(INTEGER)_ModalType,(INTEGER)_Duration,(INTEGER)_Priority,(INTEGER)_Flags,(INTEGER)_MinimumPlaytime)
THEN
ShowTutorial(_Char,_Message,_Cat,_Title,_ControllerType,_ModalType,_Duration,_Priority,_Flags,_MinimumPlaytime);
 
PROC
ProcPlayTut((CHARACTERGUID)_Char,(STRING)_Message)
AND 
DB_TutorialInfo_MsgBox(_Message,(STRING)_Cat,(STRING)_Title,(INTEGER)_ControllerType,(INTEGER)_ModalType,(INTEGER)_Duration,(INTEGER)_Priority,(INTEGER)_Flags,(INTEGER)_MinimumPlaytime)
THEN
OpenMessageBox(_Char,_Message);
 
PROC
ProcPlayTut((CHARACTERGUID)_Char,(STRING)_Message)
AND
NOT DB_TutorialInfo(_Message,_,_,_,_,_,_,_,_)
AND
NOT DB_TutorialInfo_MsgBox(_Message,_,_,_,_,_,_,_,_)
AND
StringConcatenate("Tutorial Message without info: ",_Message,_ErrorMessage)
THEN
DebugBreak(_ErrorMessage);
ShowTutorial(_Char,_Message,"","",0,0,-1,3,0,0);
//END_REGION

//REGION Tutorial From ProximityTutorial.itemscript
IF
CharacterItemEvent(_Character,_Item,"LaunchTutorialMessage")
AND
GetVarString(_Item,"TutorialMessage",_TutorialName)
THEN
PROC_CheckPlayTut(_Character,_TutorialName);
//END_REGION

//REGION Movement Popup

// See also _GLOBAL_TutorialMessages_MovementDetection
IF
DB_GLO_Tutorial_StartMovementTutorial(1)
THEN
TimerLaunch("TUT_Movement",5000);

IF
TimerFinished("TUT_Movement")
AND
DB_IsPlayer(_Player)
AND
GetPosition(_Player,_MoveX,_MoveY,_MoveZ)
AND
DB_GLO_Tutorial_Movement_LocationTracking(_Player,_MoveX,_MoveZ)
AND
NOT DB_GLOBAL_TutorialMessages_MovementTutFinishedFor(_Player)
THEN
PROC_CheckPlayTut(_Player,"TUT_Movement");

IF
TimerFinished("TUT_Camera")
THEN
PROC_CheckPlayTut("TUT_Camera");
DB_InitialTutorialsShown(1);
//END_REGION 

//REGION Inventory Popup
IF
ItemTemplateAddedToCharacter(_,_,_Player)
AND
_Player.DB_IsPlayer()
AND
DB_InitialTutorialsShown(1)
THEN
ProcCheckInventoryTutorial(_Player);

PROC
ProcCheckInventoryTutorial((GUIDSTRING)_Player)
AND
IsSpeakerReserved(_Player,0)
THEN
PROC_CheckPlayTut((CHARACTERGUID)_Player,"TUT_Inventory");

PROC
ProcCheckInventoryTutorial((GUIDSTRING)_Player)
AND
IsSpeakerReserved(_Player,1)
THEN
DB_InventoryMessageQueued(_Player);

IF
DialogEnded(_,_ID)
AND
DB_DialogPlayers(_ID,_Player,_)
AND
DB_InventoryMessageQueued(_Player)
THEN
NOT DB_InventoryMessageQueued(_Player);
//force a frame delay to give Osiris a chance to run other logic, in case this dialog causes combat or another dialog
SetStoryEvent(_Player,"GLO_CheckInventoryTutorial");

IF
StoryEvent(_Player,"GLO_CheckInventoryTutorial")
AND
QRY_SpeakerIsAvailable(_Player)
THEN
PROC_CheckPlayTut((CHARACTERGUID)_Player,"TUT_Inventory");


//END_REGION 

//REGION Combat Popup
IF				
ObjectTurnStarted((CHARACTERGUID)_Player)
AND
_Player.DB_IsPlayer()
AND
CharacterGetAbility(_Player, "Loremaster", _Val)
AND
_Val > 0
AND
DB_CharCountHelper(_Player,"CombatTurnCounter",_Turn)
AND
_Turn >= 6
THEN
PROC_CheckPlayTut(_Player,"TUT_Combat_Examine");
//END_REGION 

//REGION Tool Popups
IF
ItemTemplateAddedToCharacter(TOOL_LockPick_A_06d0eecb-4271-42a7-bd8c-4cbf24927197,_,_Player)
AND
_Player.DB_IsPlayer()
THEN
PROC_CheckPlayTut(_Player, "TUT_Lockpick");

IF
ItemTemplateAddedToCharacter(TOOL_Hammer_Repair_A_be7226da-7211-4250-be95-ca780bcdb3df,_,_Player)
AND
_Player.DB_IsPlayer()
THEN
PROC_CheckPlayTut(_Player, "TUT_Hammer");

IF
ItemTemplateAddedToCharacter(TOOL_IdentifyingGlass_A_32288ce4-3d8d-46b3-a655-598350a96201,_,_Player)
AND
_Player.DB_IsPlayer()
THEN
PROC_CheckPlayTut(_Player, "TUT_IdentifyingGlass");

IF
ItemTemplateAddedToCharacter(TOOL_Trap_DisarmToolkit_9fda335e-2220-4ae9-a4c2-2424d5ef5165,_,_Player)
AND
_Player.DB_IsPlayer()
THEN
PROC_CheckPlayTut(_Player, "TUT_Disarm");

IF
ItemTemplateAddedToCharacter(TOOL_Shovel_A_41486dd2-3fd5-464e-870e-844120cf0517,_,_Player)
AND
_Player.DB_IsPlayer()
THEN
PROC_CheckPlayTut(_Player,"TUT_Shovel");
//END_REGION

IF
ObjectTurnStarted((CHARACTERGUID)_Player)
AND
_Player.DB_IsPlayer()
AND
CharacterGetHitpointsPercentage(_Player,_Percentage)
AND
_Percentage < 25.0
AND
_Percentage > 0.0
AND
DB_PotionDone(1)
THEN
PROC_CheckPlayTut(_Player,"TUT_Flee");

IF
ObjectTurnStarted((CHARACTERGUID)_Player)
AND
_Player.DB_IsPlayer()
AND
CharacterGetHitpointsPercentage(_Player,_Percentage)
AND
_Percentage < 25.0
AND
_Percentage > 0.0
THEN
PROC_CheckPlayTut(_Player,"TUT_Potion");
DB_PotionDone(1);

IF
CharacterItemEvent(_, _Item, "WaypointDiscovered")
AND
DB_WaypointInfo((ITEMGUID)_Item,(TRIGGERGUID)_,(STRING)_)
THEN
DB_WaypointTuto(1);

IF
CharacterDied(_Player)
AND
_Player.DB_IsPlayer()
THEN
PROC_CheckPlayTutWithDelay(_Player,"TUT_Died",2000);

IF
StoryEvent((CHARACTERGUID)_Player,_Event)
AND
DB_Event2DisplayText(_Event,_Text) //See the goal TrapReactions for context about that DB
AND
_Player.DB_IsPlayer()
THEN
PROC_CheckPlayTutWithDelay(_Player,"TUT_Perception",2000);

IF
CharacterUsedItem(_Player,_Mound)
AND
DB_ShovelArea(_,_,_Mound)
THEN
PROC_CheckPlayTut(_Player,"TUT_Mound");

IF
TextEventSet("axeltuto")
THEN
DB_StartTutMessages(1);

IF
CharacterLeveledUp(_Player)
AND
_Player.DB_IsPlayer()
THEN
PROC_CheckPlayTut(_Player, "TUT_LevelUp");

IF
ItemAddedToCharacter(_Item, _Player)
AND
DB_InitialTutorialsShown(1)
AND
DB_IsPlayer(_Player)
AND
ItemHasOnUse(_Item,"skillbook",1)
THEN
PROC_CheckPlayTut(_Player,"TUT_Skill");

IF
ItemAddedToCharacter(_Item, _Player)
AND
DB_InitialTutorialsShown(1)
AND
DB_IsPlayer(_Player)
AND
ObjectIsItem(ITEMGUID_Scroll_Skill_Water_LightningBolt_000_aabc538c-b76f-4395-9634-f08cff2a1017,0)
AND
ItemHasOnUse(_Item,"scrollarrow",1)
AND
IsTagged(_Item,"GRENADES",0)
AND
IsTagged(_Item,"ARROWS",0)
THEN
PROC_CheckPlayTut(_Player, "TUT_Scroll");

IF
ItemAddedToCharacter(_Item, _Player)
AND
DB_InitialTutorialsShown(1)
AND
DB_IsPlayer(_Player)
AND
ItemHasOnUse(_Item,"scrollarrow",1)
AND
IsTagged(_Item,"GRENADES",0)
AND
IsTagged(_Item,"ARROWS",1)
THEN
PROC_CheckPlayTut(_Player, "TUT_SpecialArrow");

IF
ItemAddedToCharacter(_Item, _Player)
AND
DB_InitialTutorialsShown(1)
AND
DB_IsPlayer(_Player)
AND
ItemHasOnUse(_Item,"book",1)
THEN
PROC_CheckPlayTut(_Player, "TUT_Book");

/*
0 -> Story
1 -> Casual
2 -> Normal
3 -> Hardcore
4 -> Honour
*/
IF
DifficultyChanged(_Difficulty)
AND
_Difficulty <= 1
THEN
DB_TUT_PlayOnEasy(1);

IF
DifficultyChanged(_Difficulty)
AND
_Difficulty > 1
THEN
NOT DB_TUT_PlayOnEasy(1);

IF
SkillAdded(_Player,_,1) 
AND
DB_IsPlayer(_Player)
AND
CharacterIsControlled(_Player,1)
AND
DB_InitialTutorialsShown(1)
AND
NOT DB_TutorialMessages_SkillUnlockDone(_Player)
THEN
ProcObjectTimer(_Player,"TUT_SkillUnlock",500);

PROC
ProcObjectTimerFinished(_Player,"TUT_SkillUnlock")
THEN
PROC_TutorialMessage_SkillUnlockAfterDialog((CHARACTERGUID)_Player);

PROC
PROC_TutorialMessage_SkillUnlockAfterDialog((CHARACTERGUID)_Player)
AND
NOT DB_DialogPlayers(_,_Player,_)
THEN
DB_TutorialMessages_SkillUnlockDone(_Player);
PROC_CheckPlayTut(_Player, "TUT_SkillUnlock");

PROC
PROC_TutorialMessage_SkillUnlockAfterDialog((CHARACTERGUID)_Player)
AND
NOT DB_TutorialMessages_SkillUnlockDone(_Player)
AND
DB_DialogPlayers(_Inst,_Player,_)
AND
NOT DB_AutomatedDialog(_Inst)
THEN
DB_TutorialMessage_CheckEndDialog_SkillTut(_Inst,_Player);

PROC
PROC_TutorialMessage_SkillUnlockAfterDialog((CHARACTERGUID)_Player)
AND
NOT DB_TutorialMessages_SkillUnlockDone(_Player)
AND
DB_DialogPlayers(_Inst,_Player,_)
AND
DB_AutomatedDialog(_Inst)
THEN
DB_TutorialMessage_CheckEndAutomatedDialog_SkillTut(_Inst,_Player);

IF
DialogEnded(_,_Inst)
AND
DB_TutorialMessage_CheckEndDialog_SkillTut(_Inst,_Player)
THEN
NOT DB_TutorialMessage_CheckEndDialog_SkillTut(_Inst,_Player);
DB_TutorialMessages_SkillUnlockDone(_Player);
PROC_CheckPlayTut(_Player, "TUT_SkillUnlock");

IF
AutomatedDialogEnded(_,_Inst)
AND
DB_TutorialMessage_CheckEndAutomatedDialog_SkillTut(_Inst,_Player)
THEN
NOT DB_TutorialMessage_CheckEndAutomatedDialog_SkillTut(_Inst,_Player);
DB_TutorialMessages_SkillUnlockDone(_Player);
PROC_CheckPlayTut(_Player, "TUT_SkillUnlock");


//REGION TUT_DragIcon

//REGION Makes a DB_ItemOpened entry for player profile if lacking one
QRY
QRY_TUT_DragIcon_ProfileDB((STRING)_Profile)
AND
NOT DB_ItemOpened(_, _Profile)
THEN
DB_ItemOpened(0, _Profile);

QRY
QRY_TUT_DragIcon_ProfileDB((STRING)_Profile)
THEN
DB_NOOP(1);
//END_REGION

IF
ItemTemplateOpening(_,_Item, _Player)
AND
DB_IsPlayer(_Player)
AND
ItemIsContainer(_Item, 1)
AND
CharacterGetReservedUserID(_Player, _UserID)
AND
GetUserProfileID(_UserID, _Profile)
AND
QRY_TUT_DragIcon_ProfileDB((STRING)_Profile)
AND
DB_ItemOpened(_Nb, _Profile)
AND
IntegerSum(_Nb,1,_NewNb)
THEN
NOT DB_ItemOpened(_Nb, _Profile);
DB_ItemOpened(_NewNb, _Profile);
PROC_TUT_DragIcon((CHARACTERGUID)_Player, (INTEGER)_NewNb);

PROC
PROC_TUT_DragIcon((CHARACTERGUID)_Player, (INTEGER)_Nb)
AND
_Nb == 10
THEN
PROC_CheckPlayTut(_Player, "TUT_DragIcon");

//END_REGION

IF
DialogStarted(_,_Instance)
AND
DB_DialogNPCs(_Instance,_Animal,1)
AND
DB_DialogPlayers(_Instance,_Player,1)
AND
CharacterHasTalent((CHARACTERGUID)_Player,"AnimalEmpathy",0)
AND
IsTagged(_Animal,"ANIMAL",1)
THEN
PROC_CheckPlayTut(_Player,"TUT_NoPetPal");

IF
DialogStarted(_,_Instance)
AND
DB_DialogNPCs(_Instance,_Animal,1)
AND
DB_DialogPlayers(_Instance,_Player,1)
AND
CharacterHasTalent((CHARACTERGUID)_Player,"AnimalEmpathy",1)
AND
IsTagged(_Animal,"ANIMAL",1)
THEN
PROC_CheckPlayTut(_Player,"TUT_PetPal");

IF
ItemAddedToCharacter(_Item,_Player)
AND
DB_IsPlayer(_Player)
AND
DB_CharCountHelper(_Player,"CombatTurnCounter",_Turn)
AND
_Turn >= 3
AND
ItemHasOnUse(_Item,"scrollarrow",1)
AND
ItemIsEquipable(_Item,0)
THEN
PROC_CheckPlayTut(_Player,"TUT_HotbarAssignment");

IF
ItemAddedToCharacter(_Item,_Player)
AND
DB_InitialTutorialsShown(1)
AND
DB_IsPlayer(_Player)
AND
ItemIsEquipable(_Item,1)
THEN
PROC_CheckPlayTut(_Player,"TUT_Equipment");

IF
CharacterUsedItem(_Player,_Item)
AND
DB_IsPlayer(_Player)
AND
ObjectIsItem(_Item,1)
AND
ObjectIsItem(ITEMGUID_S_TUT_CargoDeck_AnimalPen_DoorToSecurity_b4a7964b-e773-4de2-a340-b157e1a8f89a,0)
AND
ItemIsLocked(_Item,1)
THEN
PROC_CheckPlayTut(_Player,"TUT_Locked");

IF
CharacterItemEvent(_Character, _,"WaypointDiscovered")
THEN
PROC_CheckPlayTut(_Character, "TUT_Waypoint");

//REGION Free attribute point when gaining level in summoning
IF
CharacterBaseAbilityChanged(_Character, "Polymorph", _Old, _New)
AND
DB_IsPlayer(_Character)
THEN
PROC_CheckPlayTut(_Character, "TUT_PolymorphAttribute");
//END_REGION

//REGION //Save game Patching

IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 5, 1, 0)
THEN
NOT DB_TutorialInfo("TUT_Tooltips","TUT_CAT_Exploring","TUT_Tooltips_Title",1,0,-1,2,0,0);
NOT DB_TutorialInfo("TUT_Tooltips_Controller","TUT_CAT_Exploring","TUT_Tooltips_Title",2,0,-1,2,0,0);
DB_TutorialInfo("TUT_Tooltips","TUT_CAT_Exploring","TUT_Tooltips_Title",0,0,-1,2,0,0);
NOT DB_TutorialInfo("TUT_Combat","TUT_CAT_Combat","TUT_Combat_Title",0,0,-1,1,0,0);
DB_TutorialInfo("TUT_Combat","TUT_CAT_Combat","TUT_Combat_Title",0,3,-1,1,0,0);
NOT DB_TutorialInfo("TUT_Flee","TUT_CAT_Combat","TUT_Flee_Title",0,0,-1,3,4,0);
DB_TutorialInfo("TUT_Flee","TUT_CAT_Combat","TUT_Flee_Title",0,3,-1,3,4,0);
NOT DB_TutorialInfo("TUT_HotbarAssignment","TUT_CAT_Inventory","TUT_HotbarAssignment_Title",0,0,-1,2,6,0);
DB_TutorialInfo("TUT_HotbarAssignment","TUT_CAT_Inventory","TUT_HotbarAssignment_Title",0,3,-1,2,6,0);
NOT DB_TutorialInfo("TUT_LevelUp","TUT_CAT_Inventory","TUT_LevelUp_Title",0,2,-1,2,3,0);
DB_TutorialInfo("TUT_LevelUp","TUT_CAT_Inventory","TUT_LevelUp_Title",0,1,-1,2,3,0);
NOT DB_TutorialInfo("TUT_Inventory","TUT_CAT_Inventory","TUT_Inventory_Title",0,2,-1,1,2,0);
DB_TutorialInfo("TUT_Inventory","TUT_CAT_Inventory","TUT_Inventory_Title",0,1,-1,1,2,0);
DB_TutorialInfo("TUT_Homestead","TUT_CAT_Exploring","TUT_Homestead_Title",0,1,-1,1,2,0);

IF
SavegameLoaded(_Major,_Minor,_Rev,_Build)
AND
QRY_VersionIsOlderThan(_Major,_Minor,_Rev,_Build, 3, 6, 0, 1)
THEN
DB_TutorialInfo("TUT_PolymorphAttribute","TUT_CAT_General","TUT_PolymorphAttribute_Title",2,1,-1,1,16,0);
//END_REGION
EXITSECTION

ENDEXITSECTION
