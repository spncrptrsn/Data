Version 1
SubGoalCombiner SGC_AND
INITSECTION
// Configuration: define the following in a top-level goal of your mod (or variants)

// * Information on how to transition from character creation to the first level: Identifier, Start trigger (make global!), name of movie to play (can be empty string)
//     Example: DB_CharacterCreationTransitionInfo("TUT_Tutorial_A",(TRIGGERGUID)TRIGGERGUID_StartPoint_000__000_fe2995bf-aa16-8ce7-33a2-8cb8cf228152,"CS_Intro");
// * Default:
//     None

// * Identifier used to look up entry in DB_CharacterCreationTransitionInfo above (does not actually have to be a level name)
//     Example: DB_GLO_FirstLevelAfterCharacterCreation("TUT_Tutorial_A");
// * Default:
//     None

// * Dummy characters assigned to players while they are in the character creation level (normally no need to define/change)
//     Example: DB_CharacterCreationDummy((CHARACTERGUID)S_GLO_CharacterCreationDummy_001_da072fe7-fdd5-42ae-9139-8bd4b9fca406);
// * Default if not defined when this goal initialises (these characters are from SYS_Character_Creation_A):
//     DB_CharacterCreationDummy((CHARACTERGUID)S_GLO_CharacterCreationDummy_001_da072fe7-fdd5-42ae-9139-8bd4b9fca406);
//     DB_CharacterCreationDummy((CHARACTERGUID)S_GLO_CharacterCreationDummy_002_361dacdc-4135-4d3f-a9a2-3cad46ca246a);
//     DB_CharacterCreationDummy((CHARACTERGUID)S_GLO_CharacterCreationDummy_003_dded8c22-b28e-45c1-a074-eb0954602c8a);
//     DB_CharacterCreationDummy((CHARACTERGUID)S_GLO_CharacterCreationDummy_004_5f93cae7-6c10-4da1-b9a5-0efafc168c8e);

// * Generic origin characters assigned to players when they create a custom character (DB needs exactly 4 elements) (normally no need to define/change)
//     Example: DB_GenericOrigins((CHARACTERGUID)S_Player_GenericOrigin_7b6c1f26-fe4e-40bd-a5d0-e6ff58cef4fe);
// * Default if none defined when this goal initialises:
//     DB_GenericOrigins((CHARACTERGUID)S_Player_GenericOrigin_7b6c1f26-fe4e-40bd-a5d0-e6ff58cef4fe);
//     DB_GenericOrigins((CHARACTERGUID)S_Player_GenericOrigin2_c451954c-73bf-46ce-a1d1-caa9bbdc3cfd);
//     DB_GenericOrigins((CHARACTERGUID)S_Player_GenericOrigin3_41a06985-7851-4c29-8a78-398ccb313f39);
//     DB_GenericOrigins((CHARACTERGUID)S_Player_GenericOrigin4_41a594ed-b768-4289-9f17-59f701cc6910);

// * Alignments used for the generic "origin" characters defined above while these characters are NPCs (without these, PROC_GLO_PartyMembers_Add() won't work)
//     Example: DB_OriginNPCAlignment((CHARACTERGUID)S_Player_GenericOrigin_7b6c1f26-fe4e-40bd-a5d0-e6ff58cef4fe, "Generic_Companions_1");
// * Default if *DB_GenericOrigins* not defined when this goal initialises:
//     DB_OriginNPCAlignment((CHARACTERGUID)S_Player_GenericOrigin_7b6c1f26-fe4e-40bd-a5d0-e6ff58cef4fe, "Generic_Companions_1");
//     DB_OriginNPCAlignment((CHARACTERGUID)S_Player_GenericOrigin2_c451954c-73bf-46ce-a1d1-caa9bbdc3cfd, "Generic_Companions_2");
//     DB_OriginNPCAlignment((CHARACTERGUID)S_Player_GenericOrigin3_41a06985-7851-4c29-8a78-398ccb313f39, "Generic_Companions_3");
//     DB_OriginNPCAlignment((CHARACTERGUID)S_Player_GenericOrigin4_41a594ed-b768-4289-9f17-59f701cc6910, "Generic_Companions_4");

// * Origins, i.e., predefined characters that a player can choose from during character creation
//     DB_Origins((CHARACTERGUID)CHARACTERGUID_S_Player_Fane_8d93bf2c-94f5-4d61-9aa3-19aa24fc3540);
//   Default:
//     None. Note: if you nor any mod you depend on defines any, then you must overload PROC_SelectRandomStartOrigin
//       and make it assign a character to a player to enable testing in the editor (unless you define a character
//       with the IsPlayer flag set to true in the sidebar).

PROC_Shared_CharacterCreation_Init();
KBSECTION
//REGION Init defaults
PROC
PROC_Shared_CharacterCreation_Init()
AND
NOT DB_CharacterCreationDummy(_)
THEN
DB_CharacterCreationDummy((CHARACTERGUID)S_GLO_CharacterCreationDummy_001_da072fe7-fdd5-42ae-9139-8bd4b9fca406);
DB_CharacterCreationDummy((CHARACTERGUID)S_GLO_CharacterCreationDummy_002_361dacdc-4135-4d3f-a9a2-3cad46ca246a);
DB_CharacterCreationDummy((CHARACTERGUID)S_GLO_CharacterCreationDummy_003_dded8c22-b28e-45c1-a074-eb0954602c8a);
DB_CharacterCreationDummy((CHARACTERGUID)S_GLO_CharacterCreationDummy_004_5f93cae7-6c10-4da1-b9a5-0efafc168c8e);

PROC
PROC_Shared_CharacterCreation_Init()
AND
NOT DB_GenericOrigins(_)
THEN
DB_GenericOrigins((CHARACTERGUID)S_Player_GenericOrigin_7b6c1f26-fe4e-40bd-a5d0-e6ff58cef4fe);
DB_GenericOrigins((CHARACTERGUID)S_Player_GenericOrigin2_c451954c-73bf-46ce-a1d1-caa9bbdc3cfd);
DB_GenericOrigins((CHARACTERGUID)S_Player_GenericOrigin3_41a06985-7851-4c29-8a78-398ccb313f39);
DB_GenericOrigins((CHARACTERGUID)S_Player_GenericOrigin4_41a594ed-b768-4289-9f17-59f701cc6910);
DB_OriginNPCAlignment((CHARACTERGUID)S_Player_GenericOrigin_7b6c1f26-fe4e-40bd-a5d0-e6ff58cef4fe, "Generic_Companions_1");
DB_OriginNPCAlignment((CHARACTERGUID)S_Player_GenericOrigin2_c451954c-73bf-46ce-a1d1-caa9bbdc3cfd, "Generic_Companions_2");
DB_OriginNPCAlignment((CHARACTERGUID)S_Player_GenericOrigin3_41a06985-7851-4c29-8a78-398ccb313f39, "Generic_Companions_3");
DB_OriginNPCAlignment((CHARACTERGUID)S_Player_GenericOrigin4_41a594ed-b768-4289-9f17-59f701cc6910, "Generic_Companions_4");

PROC
PROC_Shared_CharacterCreation_Init()
AND
DB_GenericOrigins(_Orig)
THEN
SetTag(_Orig,"GENERIC");

//END_REGION

//REGION Make all non-selected characters NPCs again after CC
PROC
PROC_CheckRemoveOtherOrigins()
AND
NOT DB_InCharacterCreation(1)
AND
QueryOnlyOnce("SetupNonSelectedOrigins")
THEN
ProcRemoveOtherOrigins();

PROC
ProcRemoveOtherOrigins()
AND
DB_Origins((CHARACTERGUID)_Origin)
AND
IsTagged(_Origin,"AVATAR",0)
THEN
PROC_GLO_PartyMembers_Remove(_Origin,1);

PROC
ProcRemoveOtherOrigins()
AND
DB_GenericOrigins(_GenericOrigin)
AND
IsTagged(_GenericOrigin,"AVATAR",0)
THEN
CharacterMakeNPC(_GenericOrigin);
SetOnStage(_GenericOrigin,0);
//END_REGION

//REGION Lobby level support
// The lobby takes place in a level that is neither character creation nor
// a game level, and all players in the lobby need to have a (dummy)
// character available
IF
RegionStarted(_Level)
AND
IsGameLevel(_Level,0)
AND
IsCharacterCreationLevel(_Level,0)
AND
DB_CharacterCreationDummy(_Dummy)
AND
// Automatically teleported to lobby by code because it's a global player character
_Dummy != CHARACTERGUID_S_GLO_CharacterCreationDummy_001_da072fe7-fdd5-42ae-9139-8bd4b9fca406
THEN
TeleportTo(_Dummy,CHARACTERGUID_S_GLO_CharacterCreationDummy_001_da072fe7-fdd5-42ae-9139-8bd4b9fca406);
CharacterMakePlayer(_Dummy);
//END_REGION

//REGION CC: Start
IF
CharacterCreationStarted(_)
THEN
PROC_Shared_CharacterCreationStarted();

PROC
PROC_Shared_CharacterCreationStarted()
AND
CharacterGetHostCharacter(_Char)
AND
CharacterGetReservedUserID(_Char, _UserID)
AND
GetUserProfileID(_UserID, _Profile)
THEN
ProcAssignDummyToUser(CHARACTERGUID_S_GLO_CharacterCreationDummy_001_da072fe7-fdd5-42ae-9139-8bd4b9fca406, _Profile);

PROC
PROC_Shared_CharacterCreationStarted()
AND
DB_AssignedDummyForUser(_, CHARACTERGUID_S_GLO_CharacterCreationDummy_001_da072fe7-fdd5-42ae-9139-8bd4b9fca406)
THEN
DB_InCharacterCreation(1);

PROC
PROC_Shared_CharacterCreationStarted()
AND
NOT DB_InCharacterCreation(1)
THEN
DB_InCharacterCreation(0);

//END_REGION

//REGION CC: Make all selectable characters players and move them to the CC level
IF
DB_InCharacterCreation(1)
THEN
// This dummy is special because it has IsPlayer set to true, and code will automatically teleport
// all global IsPlayer characters to the character creation level -> use this one as an anchor
// to teleport all other characters to
PROC_SetupOriginCharacters(CHARACTERGUID_S_GLO_CharacterCreationDummy_001_da072fe7-fdd5-42ae-9139-8bd4b9fca406);

// Make all generic origins players and move them to the CC level
PROC
PROC_SetupOriginCharacters((GUIDSTRING)_Dest)
AND
DB_GenericOrigins((CHARACTERGUID)_Org)
THEN
SetOnStage(_Org,1);
TeleportTo(_Org,_Dest);
CharacterMakePlayer(_Org, NULL_00000000-0000-0000-0000-000000000000);

// Same for the origins
PROC
PROC_SetupOriginCharacters((GUIDSTRING)_Dest)
AND
DB_Origins(_Orgs)
THEN
TeleportTo(_Orgs,_Dest);
CharacterMakePlayer(_Orgs, NULL_00000000-0000-0000-0000-000000000000);

// and the dummies (in case this is a custom CC level)
PROC
PROC_SetupOriginCharacters((GUIDSTRING)_Dest)
AND
DB_CharacterCreationDummy(_Dummy)
AND
_Dummy != CHARACTERGUID_S_GLO_CharacterCreationDummy_001_da072fe7-fdd5-42ae-9139-8bd4b9fca406
THEN
TeleportTo(_Dummy, CHARACTERGUID_S_GLO_CharacterCreationDummy_001_da072fe7-fdd5-42ae-9139-8bd4b9fca406);

//END_REGION

//REGION CC: Assign dummies to all connected players
IF
DB_InCharacterCreation(1)
THEN
IterateUsers("_CCUserSetup");

IF
UserEvent(_User,"_CCUserSetup")
AND
GetUserProfileID(_User,_UserName)
AND
DB_CharacterCreationDummy(_Dummy)
AND
NOT DB_AssignedDummyForUser(_,_Dummy)
AND
NOT DB_AssignedDummyForUser(_UserName,_)
THEN
ProcAssignDummyToUser(_Dummy,_UserName);

IF
UserEvent(_User,"_CCUserSetup")
AND
GetUserProfileID(_User,_UserName)
AND
DB_AssignedDummyForUser(_UserName,_Dummy)
THEN
PROC_CheckModSwitchInLobby(_Dummy);
CharacterAssignToUser(_User,_Dummy);
MakePlayerActive(_Dummy);

//added in case you switch mod from the lobby, which will cause the dummies to revert back to NPCs
PROC
PROC_CheckModSwitchInLobby((CHARACTERGUID)_Dummy)
AND
CharacterIsPlayer(_Dummy,0)
THEN
CharacterMakePlayer(_Dummy);
PROC_AddDummyToCC(_Dummy);

PROC
PROC_AddDummyToCC((CHARACTERGUID)_Dummy)
AND
CharacterAddToCharacterCreation(_Dummy,0,_)
THEN
DB_Noop(1);
//END_REGION

//REGION CC: Selecting/deselecting characters
PROC
ProcRemovePreviousSelectedCharacter((STRING)_UserProfile)
AND
DB_SelectedCC((CHARACTERGUID)_Char,(STRING)_UserProfile)
THEN
ClearTag(_Char,"AVATAR");
NOT DB_IsPlayer(_Char);
ProcUnRegisterPlayerTriggers(_Char);
NOT DB_SelectedCC(_Char,_UserProfile);

PROC
ProcSetSelectedCharCreationPlayer((CHARACTERGUID)_Char,(STRING)_UserProfile)
THEN
ProcRemovePreviousSelectedCharacter(_UserProfile);
SetTag(_Char,"AVATAR");
DB_IsPlayer(_Char);
ProcRegisterPlayerTriggers(_Char);
DB_SelectedCC(_Char,_UserProfile);

PROC
ProcRemovePreviousDummy((STRING)_UserProfile)
AND
DB_AssignedDummyForUser(_UserProfile,_Dummy)
THEN
NOT DB_AssignedDummyForUser(_UserProfile,_Dummy);
DB_AvailableDummy(_Dummy);

PROC
ProcAssignDummyToUser((CHARACTERGUID)_Dummy,(STRING)_UserName)
AND
NOT DB_AvailableDummy(_Dummy)
THEN
CharacterMakePlayer(_Dummy, NULL_00000000-0000-0000-0000-000000000000);

PROC
ProcAssignDummyToUser((CHARACTERGUID)_Dummy,(STRING)_UserName)
AND
NOT DB_AvailableDummy(_Dummy)
AND
CharacterAddToCharacterCreation(_Dummy,0,1)
THEN
DB_AssignedDummyForUser(_UserName,_Dummy);

PROC
ProcAssignDummyToUser((CHARACTERGUID)_Dummy,(STRING)_UserName)
AND
DB_AvailableDummy(_Dummy)
THEN
DB_AssignedDummyForUser(_UserName,_Dummy);

PROC
ProcAssignDummyToUser((CHARACTERGUID)_Dummy,(STRING)_UserName)
THEN
NOT DB_AvailableDummy(_Dummy);

IF
CharacterSelectedInCharCreation(_Char,_UserID)
AND
GetUserProfileID(_UserID,_UserProfile)
THEN
ProcSetSelectedCharCreationPlayer(_Char,_UserProfile);

IF
CharacterCreationFinished((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000)
AND
DB_CharacterCreationDummy(_Npc)
THEN
PROC_RemoveCCDummy(_Npc);

PROC
PROC_RemoveCCDummy((CHARACTERGUID)_Dummy)
THEN
CharacterMakeNPC(_Dummy);
SetOnStage(_Dummy,0);
NOT DB_IsPlayer(_Dummy);
//END_REGION

//REGION CC: connecting/disconnecting
IF
UserDisconnected(_UserID,_,_UserProfile)
AND
DB_InCharacterCreation(1)
THEN
ProcRemovePreviousSelectedCharacter(_UserProfile);
ProcRemovePreviousDummy(_UserProfile);

IF
UserConnected(_,_,_UserName)
AND
DB_InCharacterCreation(1)
AND
DB_CharacterCreationDummy(_Dummy)
AND
NOT DB_AssignedDummyForUser(_,_Dummy)
AND
NOT DB_AssignedDummyForUser(_UserName,_)
THEN
ProcAssignDummyToUser(_Dummy,_UserName);

IF
UserConnected(_UserID,_,_UserName)
AND
DB_InCharacterCreation(1)
AND
DB_AssignedDummyForUser(_UserName,_Dummy)
THEN
CharacterAssignToUser(_UserID,_Dummy);
MakePlayerActive(_Dummy);

//END_REGION

//REGION CC: Finished
// CharacterCreationFinished(NULL) means that everyone is ready 
IF
CharacterCreationFinished((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000)
AND
DB_InCharacterCreation(1)
AND
DB_GLO_FirstLevelAfterCharacterCreation((STRING)_FirstLevel)
AND
DB_CharacterCreationTransitionInfo(_FirstLevel,(TRIGGERGUID)_StartTrigger,(STRING)_Movie)
AND
DB_IsPlayer(_Char)
AND
IsTagged(_Char,"AVATAR",1)
THEN
NOT DB_DoNotFace(_Char);
ProcMovePartyToStart(_Char,_StartTrigger,_Movie);

// Sony event realtime multiplayer blocked
IF
CharacterCreationFinished((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000)
AND
DB_InCharacterCreation(1)
AND
DB_IsPlayer(_Player)
THEN
SonyRealtimeMultiplayerEvent(_Player,"BLOCK");

IF
CharacterCreationFinished((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000)
AND
DB_InCharacterCreation(1)
THEN
//force remove this
NOT DB_InCharacterCreation(1);
PROC_CheckRemoveOtherOrigins();

PROC
ProcMovePartyToStart((CHARACTERGUID)_NewChar,(TRIGGERGUID)_StartTrigger,(STRING)_Movie)
THEN
NOT DB_AlreadyTeleported(1);

PROC
ProcMovePartyToStart((CHARACTERGUID)_NewChar,(TRIGGERGUID)_StartTrigger,(STRING)_Movie)
AND
DB_TeleportedToStartCharacters(_Char)
AND
CharacterIsInPartyWith(_Char,_NewChar,1)
THEN
DB_AlreadyTeleported(1);

PROC
ProcMovePartyToStart((CHARACTERGUID)_NewChar,(TRIGGERGUID)_StartTrigger,(STRING)_Movie)
AND
NOT DB_AlreadyTeleported(1)
THEN
DB_TeleportedToStartCharacters(_NewChar);
PROC_GLO_CharacterCreationTeleportWithOptionalMovie(_NewChar,_StartTrigger,_Movie);

PROC
PROC_GLO_CharacterCreationTeleportWithOptionalMovie((CHARACTERGUID)_NewChar,(TRIGGERGUID)_StartTrigger,(STRING)_Movie)
AND
_Movie != ""
THEN
CharacterTeleportPartiesToTriggerWithMovie(_StartTrigger,"",_Movie);

PROC
PROC_GLO_CharacterCreationTeleportWithOptionalMovie((CHARACTERGUID)_NewChar,(TRIGGERGUID)_StartTrigger,(STRING)_Movie)
AND
_Movie == ""
THEN
CharacterTeleportPartiesToTrigger(_StartTrigger,"");

PROC
PROC_Shared_CharacterCreationFinished()
THEN
DB_NOOP(1);

IF
CharacterCreationFinished(_)
THEN
PROC_Shared_CharacterCreationFinished();
GoalCompleted;
//END_REGION

//REGION Skipping CC: select a random start origin
PROC
PROC_SelectRandomStartOrigin()
AND
SysCount("DB_Origins", 1, _Count)
AND
_Count > 0
AND
Random(_Count,_Rand)
THEN
DB_SelectedStartOrigin(_Rand);

PROC
PROC_SelectRandomStartOrigin()
THEN
DB_RandomOriginCounter(0);

PROC
PROC_SelectRandomStartOrigin()
AND
DB_Origins(_Org)
THEN
CharacterPurgeQueue(_Org);

PROC
PROC_SelectRandomStartOrigin()
AND
DB_SelectedStartOrigin(_Rand)
AND
DB_Origins(_Org)
AND
DB_RandomOriginCounter(_Ctr)
THEN
PROC_TrySelectRandomStartOrigin(_Ctr,_Rand,_Org);

PROC
PROC_TrySelectRandomStartOrigin((INTEGER)_Ctr,(INTEGER)_Desired,(CHARACTERGUID)_Org)
AND
_Ctr == _Desired
THEN
SetOnStage(_Org,1);
CharacterMakePlayer(_Org, NULL_00000000-0000-0000-0000-000000000000);
DB_IsPlayer(_Org);
SetTag(_Org, "AVATAR");
CharacterPurgeQueue(_Org);
TeleportTo(_Org,CHARACTERGUID_S_GLO_CharacterCreationDummy_001_da072fe7-fdd5-42ae-9139-8bd4b9fca406,"ChosenPlayerTeleported",1);
DB_ChosenOriginWaitingForTeleport(_Org);
MakePlayerActive(_Org);
ProcSetupGenericOrigin(_Org);

PROC
ProcSetupGenericOrigin((CHARACTERGUID)_Org)
THEN
DB_NOOP(1);

IF
StoryEvent((CHARACTERGUID)_Player,"ChosenPlayerTeleported")
AND
DB_ChosenOriginWaitingForTeleport(_Player)
THEN
NOT DB_ChosenOriginWaitingForTeleport(_Player);

PROC
PROC_TrySelectRandomStartOrigin((INTEGER)_Ctr,(INTEGER)_Desired,(CHARACTERGUID)_Org)
AND
IntegerSum(1,_Ctr,_New)
AND
DB_RandomOriginCounter(_Old)
THEN
NOT DB_RandomOriginCounter(_Old);
DB_RandomOriginCounter(_New);

PROC
PROC_SelectRandomStartOrigin()
AND
DB_RandomOriginCounter(_Ctr)
THEN
NOT DB_RandomOriginCounter(_Ctr);
//END_REGION

//REGION Skipping CC: detect & set up
// Started game mode in a level inside the editor
// (second parameter == 1 means "In Editor")
PROC
PROC_Z_Shared_GameModeStarted("Campaign", 1)
THEN
DB_InCharacterCreation(0);

// Direct teleport to a level from the main menu from the game
IF
RegionStarted(_Lvl)
AND
IsGameLevel(_Lvl,1)
THEN
DB_InCharacterCreation(0);

// Skipping character creation -> turn all dummies into NPCs
// (at least one dummy has the IsPlayer flag statically
//  turned on in its properties)
IF
DB_InCharacterCreation(0)
AND
DB_CharacterCreationDummy(_Npc)
AND
DB_CurrentLevel(_)
THEN
PROC_RemoveCCDummy(_Npc);

// Skipping character creation ->
// select a random starting origin and remove the others
IF
DB_InCharacterCreation(0)
AND
DB_CurrentLevel(_)
THEN
PROC_SelectRandomStartOrigin();
PROC_CheckRemoveOtherOrigins();

// All done!
IF
DB_InCharacterCreation(0)
AND
DB_CurrentLevel(_)
THEN
GoalCompleted;
PROC_Shared_CharacterCreationFinished();
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Z_Shared_Campaign_At_End"
