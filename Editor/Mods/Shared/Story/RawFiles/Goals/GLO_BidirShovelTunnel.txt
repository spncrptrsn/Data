Version 1
SubGoalCombiner SGC_AND
INITSECTION
// Support for a bidirectional tunnel that can be opened up from either side by shovelling
// Usage:
//  DB_BidirShovelPileTunnel(IDString,Side1ShovelTrigger,Side1ShovelPileObject,Side1TunnelEntranceObject,Side2ShovelTrigger,Side2ShovelPileObject,Side2TunnelEntranceObject);
//
// As soon as one side is opened up, so is the other side. Can't easily use simply two shovel
// piles with the same ID, because then the dirt pile on the other side won't be removed. Also
// avoids conflicts in case people shovel on both sides at the same time.
//
// When the tunnel is opened on side 1/2, ProcBidirShovelTunnelOpenedOnSide(1/2) is called
// (only one of these will be called per tunnel)
KBSECTION
//REGION Convert tunnel into two shovel areas
IF
DB_BidirShovelPileTunnel((STRING)_IDString,(TRIGGERGUID)_Side1ShovelTrigger,(ITEMGUID)_Side1ShovelPileObject,(ITEMGUID)_Side1TunnelEntranceObject,(TRIGGERGUID)_Side2ShovelTrigger,(ITEMGUID)_Side2ShovelPileObject,(ITEMGUID)_Side2TunnelEntranceObject)
AND
StringConcatenate(_IDString,"___side1",_Side1IDString)
AND
StringConcatenate(_IDString,"___side2",_Side2IDString)
THEN
DB_BidirShovelTunnelExit(_IDString,_Side1IDString);
DB_BidirShovelTunnelExit(_IDString,_Side2IDString);
DB_ShovelArea((TRIGGERGUID)_Side1ShovelTrigger,(STRING)_Side1IDString,(ITEMGUID)_Side1ShovelPileObject);
DB_ShovelArea((TRIGGERGUID)_Side2ShovelTrigger,(STRING)_Side2IDString,(ITEMGUID)_Side2ShovelPileObject);
DB_ShovelRewardItemSpawn((STRING)_Side1IDString,(ITEMGUID)_Side1TunnelEntranceObject);
DB_ShovelRewardItemSpawn((STRING)_Side2IDString,(ITEMGUID)_Side2TunnelEntranceObject);
//END_REGION

//REGION User hooks
PROC
ProcBidirShovelTunnelOpenedOnSide((CHARACTERGUID)_,(STRING)_,(INTEGER)_)
THEN
DB_NOOP(1);

PROC
ProcShovelRewards(_Player,_ThisSideIDString)
AND
DB_BidirShovelTunnelExit(_IDString,_ThisSideIDString)
AND
StringContains(_ThisSideIDString,"__side1",1)
THEN
ProcBidirShovelTunnelOpenedOnSide(_Player,_IDString,1);

PROC
ProcShovelRewards(_Player,_ThisSideIDString)
AND
DB_BidirShovelTunnelExit(_IDString,_ThisSideIDString)
AND
StringContains(_ThisSideIDString,"__side2",1)
THEN
ProcBidirShovelTunnelOpenedOnSide(_Player,_IDString,2);
//END_REGION

//REGION If one side is opened up, open the other one too
PROC
PROC_ShovelTunnelOpenUpOtherSide((CHARACTERGUID)_Player, (STRING)_IDString)
AND
DB_BidirShovelTunnelExit(_IDString,_OtherSideIDString)
AND
DB_ShovelArea(_OtherTrigger,_OtherSideIDString,_OtherPileObject)
AND
// avoid issues if someone is digging up the other side at the same time
NOT DB_Shovelling_Mound(_,_OtherPileObject)
THEN
NOT DB_BidirShovelTunnelExit(_IDString,_OtherSideIDString);
SetOnStage(_OtherPileObject,0);
NOT DB_ShovelArea(_OtherTrigger,_OtherSideIDString,_OtherPileObject);
// Won't trigger code below again, because all DB_BidirShovelTunnelExit() for this _IDString have been cleared
ProcShovelRewards(_Player,_OtherSideIDString);

PROC
ProcShovelRewards(_Player,_ThisSideIDString)
AND
DB_BidirShovelTunnelExit(_IDString,_ThisSideIDString)
AND
DB_BidirShovelPileTunnel(_IDString,_Side1ShovelTrigger,_Side1ShovelPileObject,_Side1TunnelEntranceObject,_Side2ShovelTrigger,_Side2ShovelPileObject,_Side2TunnelEntranceObject)
THEN
NOT DB_BidirShovelTunnelExit(_IDString,_ThisSideIDString);
// Only DB_BidirShovelTunnelExit(_IDString,_) definition left now is for the other side
PROC_ShovelTunnelOpenUpOtherSide(_Player,_IDString);
NOT DB_BidirShovelPileTunnel(_IDString,_Side1ShovelTrigger,_Side1ShovelPileObject,_Side1TunnelEntranceObject,_Side2ShovelTrigger,_Side2ShovelPileObject,_Side2TunnelEntranceObject);

//END_REGION
EXITSECTION

ENDEXITSECTION
