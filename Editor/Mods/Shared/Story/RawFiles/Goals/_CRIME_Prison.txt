Version 1
SubGoalCombiner SGC_AND
INITSECTION
//Setting up Flags for the Arrest Dialogs
DB_ArrestDialogFlags("Assault","GEB_Arrest_Assault");
DB_ArrestDialogFlags("SpiritTalk","GEB_Arrest_Source");
DB_ArrestDialogFlags("SourceMagic","GEB_Arrest_Source");
DB_ArrestDialogFlags("Steal","GEB_Arrest_Theft");
DB_ArrestDialogFlags("PickPocketFailed","GEB_Arrest_Theft");
DB_ArrestDialogFlags("PickPocket","GEB_Arrest_Theft");
DB_ArrestDialogFlags("ItemDestroy","GEB_Arrest_Vandalise");
DB_ArrestDialogFlags("Vandalise","GEB_Arrest_Vandalise");
DB_ArrestDialogFlags("VandaliseNoOwner","GEB_Arrest_Vandalise");
DB_ArrestDialogFlags("Trespassing","GEB_Arrest_Trespassing");
DB_ArrestDialogFlags("UseForbiddenItem","GEB_Arrest_UseForbiddenItem");
DB_ArrestDialogFlags("SneakUseForbiddenItem","GEB_Arrest_UseForbiddenItem");

DB_ReactOutOfRegion("RED PRINCE");
DB_ReactOutOfRegion("IFAN");
DB_ReactOutOfRegion("LOHSE");
DB_ReactOutOfRegion("SEBILLE");
DB_ReactOutOfRegion("BEAST");
DB_ReactOutOfRegion("FANE");
DB_ReactOutOfRegion("AGGRESSIVEANIMAL");
KBSECTION
IF
DB_RegionPrison(_RegionName,(TRIGGERGUID)_PrisonTrigger)
THEN
ProcTriggerRegisterForPlayers(_PrisonTrigger);

QRY
QryNPCIsGuard((GUIDSTRING)_NPC)
AND
IsTagged(_Npc,"GUARD",1)
THEN
DB_Noop(1);

QRY
QryNPCIsGuard((GUIDSTRING)_NPC)
AND
IsTagged(_Npc,"PALADIN",1)
THEN
DB_Noop(1);

QRY
QryNPCIsGuard((GUIDSTRING)_NPC)
AND
IsTagged(_Npc,"MAGISTER",1)
THEN
DB_Noop(1);

//REGION Start Arrest 
//Wait for dialog to end to arrest Player // Needs to be removed
IF
ObjectFlagSet("Start_Arrest_AfterDialog",(CHARACTERGUID)_Character,_ID)
THEN
ObjectClearFlag(_Character,"Start_Arrest_AfterDialog",0);
DB_ArrestAfterDialog(_Character,_ID);


///////// Handle Evidence ////////////
IF
ObjectFlagSet("Allow_Arrest",(CHARACTERGUID)_Player,_ID)
THEN
DB_ArrestDialog(_Player,_ID);

IF
DialogEnded(_,_ID)
AND
DB_ArrestDialog(_Player,_ID)
AND
DB_DialogNPCs(_ID,_NPC,1)
AND
ObjectGetFlag((CHARACTERGUID)_NPC,"CRIME_FoundEvidenceCurrentCrime",1)
AND
DB_Interrogation(_NPC,_CrimeID)
THEN
ProcCrimeHandleEvidence(_Player,_NPC,_CrimeID);

PROC
ProcCrimeHandleEvidence((CHARACTERGUID)_Player,(CHARACTERGUID)_Arrester,(INTEGER)_CrimeID)
AND
CharacterGetCrimeRegion(_Player,_CrimeRegionID)
AND
DB_RegionPrison(_CrimeRegionID,_PrisonTrigger)
AND
DB_PrisonEvidenceChest((TRIGGERGUID)_PrisonTrigger,(ITEMGUID)_EvidenceChest)
THEN
CrimeTransferEvidenceTo(_CrimeID,_EvidenceChest);

PROC
ProcCrimeHandleEvidence((CHARACTERGUID)_Player,(CHARACTERGUID)_Arrester,(INTEGER)_CrimeID)
AND
CharacterGetCrimeRegion(_Player,_CrimeRegionID)
AND
DB_RegionPrison(_CrimeRegionID,_PrisonTrigger)
AND
NOT DB_PrisonEvidenceChest((TRIGGERGUID)_PrisonTrigger,_)
THEN
CrimeTransferEvidenceTo(_CrimeID,_Arrester);


///////// Start Arrest ////////////
IF
DialogEnded(_,_ID)
AND
DB_ArrestAfterDialog(_Character,_ID)
THEN
NOT DB_ArrestAfterDialog(_Character,_ID);
ProcCrimeStartArrest((CHARACTERGUID)_Character,_ID);

PROC
ProcCrimeStartArrest((CHARACTERGUID)_Character,(INTEGER)_ID)
AND
CharacterGetCrimeRegion(_Character,_CrimeRegion)
THEN
ProcCrimeDoPerformArrest(_ID,_CrimeRegion);

PROC
ProcCrimeDoPerformArrest((INTEGER)_Inst,(STRING)_Region)
AND
DB_DialogNPCs(_Inst,_Player,_)
AND
CharacterIsPlayer((CHARACTERGUID)_Player,1)
THEN
ProcCrimePerformArrest(_Player,_Region);

PROC
ProcCrimeDoPerformArrest((INTEGER)_Inst,(STRING)_Region)
AND
DB_DialogPlayers(_Inst,_Player,_)
AND
CharacterIsPlayer((CHARACTERGUID)_Player,1)
THEN
ProcCrimePerformArrest(_Player,_Region);

PROC
ProcCrimePerformArrest((CHARACTERGUID)_Character,(STRING)_CrimeRegionID)
AND
DB_RegionPrison(_CrimeRegionID,_PrisonTrigger)
THEN
ProcCrimeTeleportCharacterToPrison(_Character,_PrisonTrigger);

PROC //--- can be used outside of the Crime System
ProcCrimeTeleportCharacterToPrison((CHARACTERGUID)_Character,(TRIGGERGUID)_PrisonTrigger)
THEN
ObjectSetFlag(_Character,"IsInPrison");
RemoveStatus(_Character,"FUGITIVE");
CharacterDetachFromGroup(_Character);
Proc_TeleportSmoke(_Character);
TeleportTo(_Character,_PrisonTrigger,"",0);
Proc_TeleportSmoke(_Character);
DB_IsArrested(_Character);
CharacterFlushQueue(_Character);
LeaveCombat(_Character);
CharacterRemoveTension(_Character);

PROC
ProcCrimeTeleportCharacterToPrison((CHARACTERGUID)_Character,(TRIGGERGUID)_PrisonTrigger)
AND
DB_PrisonChest((TRIGGERGUID)_PrisonTrigger,(ITEMGUID)_PrisonChest)
THEN
MoveAllItemsTo(_Character,_PrisonChest,0,1,1);

//END_REGION

//REGION Arrest dialog starting 

IF
CharacterOnCrimeSensibleActionNotification(_Arrester,_,_CrimeID,"CRIME_Arrest",_,_,_,_,_,_)
AND
CrimeGetType(_CrimeID,_CrimeName)
AND
NOT DB_CrimeReaction_CustomSensibleAction(_Arrester,_CrimeName)
THEN
Proc_StartArrestDialog(_Arrester);

IF
StoryEvent(_Arrester,"ArrestOnRequest")
AND
GetVarInteger(_Arrester,"CrimeID",_CrimeID)
THEN
SetVarString(_Arrester,"ArrestDialog","GEB_Arrest");
ProcStartArrest((CHARACTERGUID)_Arrester,(INTEGER)_CrimeID);

IF
StoryEvent((CHARACTERGUID)_Arrester,"ArrestOnRequest")
AND
DB_Arresting(_Arrester,_CrimeID,(CHARACTERGUID)_Criminal1,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4,_ArrestDialog)
THEN
CharacterMoveToAndTalk(_Arrester,_Criminal1,"",0,"GEB_ArrestMove",1,10.0);

IF
StoryEvent((CHARACTERGUID)_Arrester, "CRIME_Perform_Arrest")
AND
GetVarInteger(_Arrester,"CrimeID",_CrimeID)
THEN
ProcStartArrest(_Arrester,_CrimeID);

PROC
ProcStartArrest((CHARACTERGUID)_Arrester,(INTEGER)_CrimeID)
AND
GetVarObject(_Arrester,"Criminal1",_Criminal1)
AND
GetVarObject(_Arrester,"Criminal2",_Criminal2)
AND
GetVarObject(_Arrester,"Criminal3",_Criminal3)
AND
GetVarObject(_Arrester,"Criminal4",_Criminal4)
AND
GetVarString(_Arrester,"ArrestDialog",_ArrestDialog)
THEN
DB_Arresting(_Arrester,_CrimeID,(CHARACTERGUID)_Criminal1,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4,_ArrestDialog);
SetHasDialog(_Arrester,0);
CharacterDisableAllCrimes(_Arrester);
DialogRequestStop(_Arrester);
FireOsirisEvents();

IF
DialogEnded(_,_Instance)
AND
DB_DialogPlayers(_Instance,_Criminal,1)
AND
DB_Arresting(_Arrester,_CrimeID,(CHARACTERGUID)_Criminal,_,_,_,_ArrestDialog)
THEN
CharacterMoveToAndTalk(_Arrester,_Criminal,"",0,"GEB_ArrestMove",1,10.0);

PROC
ProcStartArrest((CHARACTERGUID)_Arrester,(INTEGER)_CrimeID)
AND
NOT DB_Arresting(_Arrester,_CrimeID,_,_,_,_,_)
THEN
CrimeConfrontationDone(_CrimeID,_Arrester);

PROC
ProcCleanupArrest((CHARACTERGUID)_Arrester)
AND
DB_Arresting(_Arrester,_CrimeID,_Criminal1,_Criminal2,_Criminal3,_Criminal4,_ArrestDialog)
THEN
ProcRestoreFightMode(_Arrester);
ProcRestoreGenericBehaviour(_Arrester);
SetHasDialog(_Arrester,1);
NOT DB_Arresting(_Arrester,_CrimeID,_Criminal1,_Criminal2,_Criminal3,_Criminal4,_ArrestDialog);
SetStoryEvent(_Arrester,"CRIME_StartArrest");

IF
CharacterMoveToAndTalkRequestDialog(_Arrester,(CHARACTERGUID)_Criminal,_,_,"GEB_ArrestMove")
AND
DB_Arresting(_Arrester,_CrimeID,_Criminal1,_Criminal2,_Criminal3,_Criminal4,_ArrestDialog)
THEN
SetStoryEvent(_Arrester,"CRIME_StartArrest");
Proc_StartArrestDialog(_Arrester,_CrimeID,_Criminal1,_Criminal2,_Criminal3,_Criminal4,_ArrestDialog);

IF
CharacterMoveToAndTalkFailed(_Arrester,_,"GEB_ArrestMove")
AND
DB_Arresting(_Arrester,_CrimeID,_Criminal1,_Criminal2,_Criminal3,_Criminal4,_ArrestDialog)
THEN
CrimeConfrontationDone(_CrimeID,_Arrester);
ProcCleanupArrest(_Arrester);

IF
CharacterMoveToAndTalkRequestDialogFailedEvent(_Arrester,_,"GEB_ArrestMove")
AND
DB_Arresting(_Arrester,_CrimeID,_Criminal1,_Criminal2,_Criminal3,_Criminal4,_ArrestDialog)
THEN
CrimeConfrontationDone(_CrimeID,_Arrester);
ProcCleanupArrest(_Arrester);

IF
DB_Crime_FailedToInterruptStoryDialogs(_CrimeID,_ArrestDialog,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4)
AND
DB_Arresting(_Arrester,_CrimeID,_Criminal1,_Criminal2,_Criminal3,_Criminal4,_ArrestDialog)
THEN
CharacterMoveToAndTalkRequestDialogFailed(_Arrester,_Criminal,"GEB_ArrestMove");

IF
ObjectFlagSet(_ActiveFlag,(CHARACTERGUID)_Arrester,_)
AND
DB_ArrestDialogFlags(_CrimeName,_ActiveFlag)
AND
DB_Arresting(_Arrester,_CrimeID,_Criminal1,_Criminal2,_Criminal3,_Criminal4,_ArrestDialog)
THEN
ProcCleanupArrest(_Arrester);

IF
ObjectEnteredCombat((CHARACTERGUID)_Arrester,_)
AND
DB_Arresting(_Arrester,_,_,_,_,_,_)
THEN
ProcCleanupArrest(_Arrester);

PROC 
Proc_StartArrestDialog((CHARACTERGUID)_Arrester)
AND
GetVarObject(_Arrester,"Criminal1",(CHARACTERGUID)_Criminal1)
AND
GetVarObject(_Arrester,"Criminal2",(CHARACTERGUID)_Criminal2)
AND
GetVarObject(_Arrester,"Criminal3",(CHARACTERGUID)_Criminal3)
AND
GetVarObject(_Arrester,"Criminal4",(CHARACTERGUID)_Criminal4)
AND
GetVarInteger(_Arrester,"CrimeID",_CrimeID)
AND
GetVarString(_Arrester,"ArrestDialog",_ArrestDialog)
THEN
Proc_StartArrestDialog(_Arrester,_CrimeID,_Criminal1,_Criminal2,_Criminal3,_Criminal4,_ArrestDialog);

PROC 
Proc_StartArrestDialog((CHARACTERGUID)_Arrester,(INTEGER)_CrimeID,(CHARACTERGUID)_Criminal1,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4,(STRING)_ArrestDialog)
THEN
ObjectClearFlag(_Arrester,"GEB_Arrest_HavePrison",0);

PROC
Proc_StartArrestDialog((CHARACTERGUID)_Arrester,(INTEGER)_CrimeID,(CHARACTERGUID)_Criminal1,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4,(STRING)_ArrestDialog)
AND
DB_ArrestDialogFlags(_CrimeName,_ActiveFlag)
AND
ObjectGetFlag(_Arrester,_ActiveFlag,1)
THEN
ObjectClearFlag(_Arrester,_ActiveFlag,0);

PROC 
Proc_StartArrestDialog((CHARACTERGUID)_Arrester,(INTEGER)_CrimeID,(CHARACTERGUID)_Criminal1,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4,(STRING)_ArrestDialog)
AND
CrimeGetType(_CrimeID,_CrimeName)
AND
DB_ArrestDialogFlags(_CrimeName,_ActiveFlag)
THEN
ObjectSetFlag(_Arrester,_ActiveFlag);


//--- Setup the Arrester's script
PROC 
Proc_StartArrestDialog((CHARACTERGUID)_Arrester,(INTEGER)_CrimeID,(CHARACTERGUID)_Criminal1,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4,(STRING)_ArrestDialog)
AND
GetVarFixedString(_Arrester,"RegionID",_RegionID)
AND
CrimeGetType(_CrimeID,_CrimeType)
THEN
ProcCrimeSetupCountFlag(_CrimeID,_Arrester,_Criminal1,_Criminal2,_Criminal3,_Criminal4,_CrimeType,_ArrestDialog);
ProcCrimeStartRegionArrestInterrogation(_RegionID,_CrimeID,_ArrestDialog,_Arrester,_Criminal1,_Criminal2,_Criminal3,_Criminal4);

PROC
ProcCheckStartArrestInterrogation((INTEGER)_CrimeID,(STRING)_ArrestDialog,(CHARACTERGUID)_Arrester,(CHARACTERGUID)_Criminal,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4)
AND
NOT DB_Crime_FailedToInterruptStoryDialogs(_CrimeID,_ArrestDialog,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4)
THEN
ProcCrimeStartArrestInterrogation(_CrimeID,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4,1);

PROC
ProcCheckStartArrestInterrogation((INTEGER)_CrimeID,(STRING)_ArrestDialog,(CHARACTERGUID)_Arrester,(CHARACTERGUID)_Criminal,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4)
AND
DB_Crime_FailedToInterruptStoryDialogs(_CrimeID,_ArrestDialog,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4)
THEN
ProcCrimeStartArrestInterrogation(_CrimeID,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4,0);
NOT DB_Crime_FailedToInterruptStoryDialogs(_CrimeID,_ArrestDialog,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4);

PROC
ProcCrimeStartRegionArrestInterrogation((STRING)_RegionID,(INTEGER)_CrimeID,(STRING)_ArrestDialog,(CHARACTERGUID)_Arrester,(CHARACTERGUID)_Criminal,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4)
AND
DB_RegionPrison(_RegionID,_)
THEN
ObjectSetFlag(_Arrester,"GEB_Arrest_HavePrison");

PROC
ProcCrimeStartRegionArrestInterrogation((STRING)_RegionID,(INTEGER)_CrimeID,(STRING)_ArrestDialog,(CHARACTERGUID)_Arrester,(CHARACTERGUID)_Criminal,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4)
AND
_RegionID != ""
THEN
ProcCrimeInterruptStoryDialogs(_CrimeID,_ArrestDialog,1,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4);
ProcCheckStartArrestInterrogation(_CrimeID,_ArrestDialog,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4);

PROC
ProcCrimeStartRegionArrestInterrogation((STRING)_RegionID,(INTEGER)_CrimeID,(STRING)_ArrestDialog,(CHARACTERGUID)_Arrester,(CHARACTERGUID)_Criminal,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4)
AND
_RegionID == ""
AND
DB_ReactOutOfRegion(_Tag)
AND
IsTagged(_Arrester,_Tag,1)
AND
NOT DB_ReactingCharOutOfRegion(_Arrester,_)
THEN
ProcCrimeInterruptStoryDialogs(_CrimeID,_ArrestDialog,1,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4);
ProcCheckStartArrestInterrogation(_CrimeID,_ArrestDialog,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4);
DB_ReactingCharOutOfRegion(_Arrester,_Tag);


// We change crime dialog in the next section, so replace it in the DB which is used to clean some stuff on crime end
PROC
ProcCrimeStartRegionArrestInterrogation((STRING)_RegionID,(INTEGER)_CrimeID,(STRING)_ArrestDialog,(CHARACTERGUID)_Arrester,(CHARACTERGUID)_Criminal,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4)
AND
_RegionID == ""
AND
NOT DB_ReactingCharOutOfRegion(_Arrester,_)
THEN
ProcCrimeStartRegionArrestInterrogation_SubActions(_RegionID,_CrimeID,_ArrestDialog,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4);

PROC
ProcCrimeStartRegionArrestInterrogation_SubActions((STRING)_RegionID,(INTEGER)_CrimeID,(STRING)_ArrestDialog,(CHARACTERGUID)_Arrester,(CHARACTERGUID)_Criminal,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4)
AND
DB_Crime_RequestedDialogWithTension(_CrimeName,_ArrestDialog,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4)
THEN
NOT DB_Crime_RequestedDialogWithTension(_CrimeName,_ArrestDialog,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4);
DB_Crime_RequestedDialogWithTension(_CrimeName,"GEB_Attack",_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4);

PROC
ProcCrimeStartRegionArrestInterrogation_SubActions((STRING)_RegionID,(INTEGER)_CrimeID,(STRING)_ArrestDialog,(CHARACTERGUID)_Arrester,(CHARACTERGUID)_Criminal,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4)
THEN
ProcCrimeInterruptStoryDialogs(_CrimeID,"GEB_Attack",1,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4);
ProcCheckStartArrestInterrogation(_CrimeID,"GEB_Attack",_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4);

PROC
ProcCrimeStartRegionArrestInterrogation((STRING)_RegionID,(INTEGER)_CrimeID,(STRING)_ArrestDialog,(CHARACTERGUID)_Arrester,(CHARACTERGUID)_Criminal,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4)
AND
DB_ReactingCharOutOfRegion(_Arrester,_Tag)
THEN
NOT DB_ReactingCharOutOfRegion(_Arrester,_Tag);

PROC 
ProcCrimeStartArrestInterrogation((INTEGER)_CrimeID,(CHARACTERGUID)_Arrester,(CHARACTERGUID)_Criminal,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4,_)
AND
DB_EvidenceFound(_CrimeID,_Interrogator)
AND
DB_Crime_CallingGuards(_Interrogator,_Criminal,_ID)
THEN
NOT DB_Crime_CallingGuards(_Interrogator,_Criminal,_ID);
NOT DB_EvidenceFound(_CrimeID,_Interrogator);
DB_EvidenceFound(_CrimeID,_Arrester);

PROC 
ProcCrimeStartArrestInterrogation((INTEGER)_CrimeID,(CHARACTERGUID)_Arrester,(CHARACTERGUID)_Criminal,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4,1)
AND
DB_EvidenceFound(_CrimeID,_Interrogator)
AND
DB_Crime_CallingGuards(_Interrogator,_Criminal,_ID)
THEN
DB_StopInterrogationAfterDialog(_CrimeID,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4);

PROC 
ProcCrimeStartArrestInterrogation((INTEGER)_CrimeID,(CHARACTERGUID)_Arrester,(CHARACTERGUID)_Criminal,(CHARACTERGUID)_Criminal2,(CHARACTERGUID)_Criminal3,(CHARACTERGUID)_Criminal4,0)
AND
DB_Crime_Interrogation(_CrimeID,_,_,_,_,_,_)
THEN
ProcStopInterrogation(_CrimeID,_Arrester,_Criminal,_Criminal2,_Criminal3,_Criminal4);

IF
DialogEnded(_,_Instance)
AND
DB_DialogPlayers(_Instance,_Player,1)
AND
DB_DialogNPCs(_Instance,_NPC,1)
AND
ObjectGetFlag(_Player,"Resist_Arrest",1)
AND
DB_DialogPlayers(_Instance,_Players,_)
THEN
ObjectClearFlag(_Player,"Resist_Arrest",0);
proc_CriminalMakeHostileAfterDialog((CHARACTERGUID)_Players,(CHARACTERGUID)_NPC);

PROC
proc_CriminalMakeHostileAfterDialog((CHARACTERGUID)_Player,(CHARACTERGUID)_NPC)
AND
_Player != NULL_00000000-0000-0000-0000-000000000000
THEN
ProcMakeNPCHostile((CHARACTERGUID)_Player,(CHARACTERGUID)_NPC);

IF
DialogEnded(_,_Instance)
AND
DB_ArrestDialog(_Player,_Instance)
THEN
ObjectClearFlag(_Player,"Allow_Arrest",0);
NOT DB_ArrestDialog(_Player,_Instance);
ProcCrimeStartArrest((CHARACTERGUID)_Player,_Instance);

IF
DialogEnded(_,_Instance)
AND
DB_DialogNPCs(_Instance,_NPC,1)
AND
DB_StopInterrogationAfterDialog(_CrimeID,(CHARACTERGUID)_NPC,_Criminal,_Criminal2,_Criminal3,_Criminal4)
THEN
ProcStopInterrogation(_CrimeID,_NPC,_Criminal,_Criminal2,_Criminal3,_Criminal4);
NOT DB_StopInterrogationAfterDialog(_CrimeID,_NPC,_Criminal,_Criminal2,_Criminal3,_Criminal4);

// TODO Remove the DB_ReactingCharOutOfRegion(_Arrester,_Tag) On Tag Removed
//END_REGION

//REGION Arrest Play As AD 
IF
StoryEvent((CHARACTERGUID)_Arrester,"GLO_PlayArrestAsAD")
AND
GetVarString(_Arrester,"ArrestDialog",_ArrestDialog)
THEN
Proc_StartDialog(1,_ArrestDialog,_Arrester);
//END_REGION

//REGION Escape Prison
IF
CharacterEnteredTrigger(_Player,_PrisonTrigger)
AND
DB_IsArrested(_Player)
AND
DB_IsPlayer(_Player)
AND
DB_PlayerPrison_Door(_PrisonTrigger,(ITEMGUID)_CellDoor,(STRING)_KeyName)
THEN
ItemCloseAndLock(_CellDoor,_KeyName);

IF
CharacterLeftTrigger(_Player,_PrisonTrigger)
AND
DB_IsArrested(_Player)
AND
DB_IsPlayer(_Player)
AND
DB_PlayerPrison((TRIGGERGUID)_PrisonTrigger,(TRIGGERGUID)_CellDoorTrigger,(STRING)_PrisonCrimeName,(STRING)_PrisonCrimeNameAD)
AND
GetPosition(_CellDoorTrigger,_x,_y,_z)
THEN
//ProcRestoreGenericBehaviourAfterScene(_Player);
PROC_CRIME_Prison_Escaped(_Player, _PrisonCrimeName, _PrisonCrimeNameAD);

PROC
PROC_CRIME_Prison_Escaped((CHARACTERGUID)_Player, (STRING)_PrisonCrimeName, (STRING)_PrisonCrimeNameAD)
AND
QRY_AnyRegionActive()
THEN
DB_PlayerEscapedPrison(_Player,_PrisonCrimeName,_PrisonCrimeNameAD);
ApplyStatus(_Player,"FUGITIVE",100.0,1);

PROC
PROC_CRIME_Prison_Escaped((CHARACTERGUID)_Player, (STRING)_PrisonCrimeName, (STRING)_PrisonCrimeNameAD)
THEN
ObjectClearFlag(_Player,"IsInPrison",0);
NOT DB_IsArrested(_Player);

IF
CharacterStatusApplied(_Player,"FUGITIVE",_)
AND
DB_IsPlayer(_Player)
AND
DB_PlayerEscapedPrison(_Player,_PrisonCrimeName,_PrisonCrimeNameAD)
THEN
ObjectSetFlag(_Player,"IsFugitive"); // This is for Arrest_EscapedPrison Dialog
CharacterRegisterCrime(_Player,_PrisonCrimeName,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,0);

IF
CharacterStatusApplied(_Player,"FUGITIVE",_)
AND
DB_IsPlayer(_Player)
AND
DB_PlayerEscapedPrison(_Player,_PrisonCrimeName,_PrisonCrimeNameAD)
AND
_PrisonCrimeNameAD != ""
THEN
CharacterRegisterCrime(_Player,_PrisonCrimeNameAD,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,0);

IF
CharacterStatusRemoved(_Player,"FUGITIVE",_)
AND
DB_IsPlayer(_Player)
AND
DB_PlayerEscapedPrison(_Player,_PrisonCrimeName,_PrisonCrimeNameAD)
THEN
NOT DB_PlayerEscapedPrison(_Player,_PrisonCrimeName,_PrisonCrimeNameAD);
CharacterStopCrime(_Player,_PrisonCrimeName,NULL_00000000-0000-0000-0000-000000000000);
CharacterStopCrime(_Player,_PrisonCrimeNameAD,NULL_00000000-0000-0000-0000-000000000000);
ObjectClearFlag(_Player,"IsFugitive",0);

IF
ObjectFlagSet("GEB_ClearTag_FUGITIVE",_Player,_) //set in GEB_Arrest_EscapedPrison
AND
HasActiveStatus(_Player,"FUGITIVE",1)
THEN
RemoveStatus(_Player,"FUGITIVE");

IF
ObjectFlagSet("GEB_ClearTag_FUGITIVE",_Player,_ID) //set in GEB_Arrest_EscapedPrison
AND
DB_DialogNPCs(_ID,_NPC,1)
THEN
ProcCrimeBribedGuards(_NPC,_Player);

PROC
ProcCrimeBribedGuards((GUIDSTRING)_NPC,(GUIDSTRING)_Player)
THEN
CrimeIgnoreAllCrimesForCriminal(_Player,_NPC,300000);
DB_CrimeBribeSource(_Player);
CharacterLaunchIteratorAroundObject((CHARACTERGUID)_Player,20.0,"GEB_CrimeBribeGuards");
FireOsirisEvents();
NOT DB_CrimeBribeSource(_Player);

IF
StoryEvent((CHARACTERGUID)_NPC,"GEB_CrimeBribeGuards")
AND
NOT DB_CombatCharacters(_NPC,_)
AND
DB_CrimeBribeSource(_Player)
AND
NOT DB_Dead(_NPC)
AND
CharacterIsPlayer(_NPC,0)
AND
QryNPCIsGuard(_NPC)
THEN
CrimeIgnoreAllCrimesForCriminal(_Player,_NPC,300000);

IF
ObjectFlagSet("GEB_ClearTag_FUGITIVE",_Player,_) //set in GEB_Arrest_EscapedPrison
THEN
ObjectClearFlag(_Player,"GEB_ClearTag_FUGITIVE",0);

//END_REGION

//REGION GUARD CALLING
IF
ObjectFlagSet("GEB_Arrest_Player",_NPC,_Inst)
AND
DB_DialogNPCs(_Inst,_OldLead,1)
THEN
DB_CrimeArrestCallingGuards((CHARACTERGUID)_OldLead,_Inst);

IF
ObjectFlagSet("GEB_Arrest_Player",_NPC,_Inst)
AND
DB_DialogNPCs(_Inst,_OldLead,1)
AND
NOT DB_CombatCharacters((CHARACTERGUID)_NPC,_)
AND
NOT DB_PickedLeadToHelp(_,_Inst)
AND
GetVarInteger(_OldLead,"CrimeID",_CrimeID)
AND
CrimeTransferLeadershipTo((CHARACTERGUID)_OldLead,_CrimeID,_NPC,1)
AND
GetVarObject(_OldLead,"Criminal1",_Criminal1)
AND
GetVarObject(_OldLead,"Criminal2",_Criminal2)
AND
GetVarObject(_OldLead,"Criminal3",_Criminal3)
AND
GetVarObject(_OldLead,"Criminal4",_Criminal4)
AND
GetVarFixedString(_OldLead,"RegionID",_RegionID)
THEN
SetHasDialog(_OldLead,0);
CharacterDisableAllCrimes(_OldLead);
CharacterEnableCrime(_OldLead,"Assault");
CharacterEnableCrime(_OldLead,"SummonAssault");
CharacterEnableCrime(_OldLead,"IncapacitatedAssault");
DB_GuardCaller(_CrimeID,_OldLead,_NPC);
CharacterSetReactionPriority(_OldLead,"CRIME_Flee",2800);
DB_PickedLeadToHelp(_NPC,_Inst);
ProcStoreFightMode(_Npc);
CharacterSetFightMode(_NPC,1,0);
SetVarObject(_NPC,"Criminal1",_Criminal1); 
SetVarObject(_NPC,"Criminal2",_Criminal2); 
SetVarObject(_NPC,"Criminal3",_Criminal3); 
SetVarObject(_NPC,"Criminal4",_Criminal4); 
SetVarString(_NPC,"ArrestDialog","GEB_Arrest");
SetVarFixedString(_NPC,"RegionID",_RegionID);
SetVarInteger(_NPC,"CrimeID",_CrimeID);
SetStoryEvent(_NPC,"CRIME_Perform_Arrest");

IF
DialogEnded(_Dialog,_Inst)
AND
DB_CrimeArrestCallingGuards(_OldLead,_Inst)
AND
NOT DB_PickedLeadToHelp(_,_Inst)
AND
DB_DialogPlayers(_Inst,_Player,1)
THEN
NOT DB_CrimeArrestCallingGuards(_OldLead,_Inst);
//failed to transfer leadership, start combat as fallback
Proc_StartDialog(1,"GEB_AD_DealWithCrime",_OldLead);
CharacterSetTemporaryHostileRelation((CHARACTERGUID)_Player,_OldLead);

IF
DialogEnded(_Dialog,_Inst)
AND
DB_PickedLeadToHelp(_NPC,_Inst)
AND
DB_DialogNPCs(_Inst,_OldLead,1)
THEN
NOT DB_PickedLeadToHelp(_NPC,_Inst);
NOT DB_CrimeArrestCallingGuards((CHARACTERGUID)_OldLead,_Inst);

IF
OnCrimeConfrontationDone(_CrimeID,_OldLead,_,_,_,_,_)
AND
DB_GuardCaller(_CrimeID,_OldLead,_NPC)
THEN
SetHasDialog(_OldLead,1);
ProcRestoreGenericBehaviour(_OldLead);
NOT DB_GuardCaller(_CrimeID,_OldLead,_NPC);



//END_REGION


//REGION Debug

IF
TextEventSet("LookatPrison")
THEN
CharacterLookAt(S_FTJ_PrisonGuardTest_0ad9aa6c-c8df-4591-be1a-d4f0a94d89ac,S_FortJoy_PlayerPrisonDoor_2dd80040-28aa-4445-8438-1e2424d7228f);

IF
TextEventSet("Lookatme")
THEN
CharacterLookAt(S_FTJ_PrisonGuardTest_0ad9aa6c-c8df-4591-be1a-d4f0a94d89ac,CHARACTERGUID_Player_Ifan_ad9a3327-4456-42a7-9bf4-7ad60cc9e54f);

//END_REGION
EXITSECTION

ENDEXITSECTION
