Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_Shapeshifting_OriginalRaces("Undead_Dwarf", "REALLY_DWARF");
DB_Shapeshifting_OriginalRaces("Undead_Human", "REALLY_HUMAN");
DB_Shapeshifting_OriginalRaces("Undead_Elf", "REALLY_ELF");
DB_Shapeshifting_OriginalRaces("Undead_Lizard", "REALLY_LIZARD");
KBSECTION
PROC
ProcRemovePolymorphs((CHARACTERGUID)_Char)
THEN
RemoveStatus(_Char,"POLYMORPHED");

PROC
ProcRemovePolymorphs((CHARACTERGUID)_Char)
AND
DB_CharacterPolymorphedInto(_Char,_Race)
AND
DB_PolymorphStatuses(_Race,(STRING)_Status)
THEN
RemoveStatus(_Char,_Status);

IF
CharacterPolymorphedInto(_Char,_Race)
THEN
DB_CharacterPolymorphedInto(_Char,_Race);
ObjectSetFlag(_Char,"GLO_Polymorphed");

IF
CharacterPolymorphedInto(_Char,_)
AND
DB_PolymorphTags(_Char,(STRING)_Tag)
THEN
SetTag(_Char,_Tag);

IF
CharacterPolymorphedInto(_Char,_)
AND
NOT DB_PolymorphTags(_Char,_)
THEN
SetTag(_Char,"SHAPESHIFT_GENERIC");

IF
CharacterPolymorphedInto(_Char,_)
THEN
SetTag(_Char,"GENERIC");

IF 
CharacterStoppedPolymorph(_Char)
AND
DB_PolymorphTags(_Char,_)
THEN
ClearTag(_Char,"GENERIC");

IF 
CharacterStoppedPolymorph(_Char)
AND
DB_PolymorphTags(_Char,_Tag)
THEN
ClearTag(_Char,_Tag);

IF 
CharacterStoppedPolymorph(_Char)
THEN
ClearTag(_Char,"SHAPESHIFT_GENERIC");
ObjectClearFlag(_Char,"GLO_Polymorphed");

IF 
CharacterStoppedPolymorph(_Char)
AND
DB_CharacterPolymorphedInto(_Char,_Race)
THEN
NOT DB_CharacterPolymorphedInto(_Char,_Race);

//REGION Polymorph block in dialogs
PROC
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1)
AND
DB_BlockPolymorphDialog(_Dialog)
THEN
ProcRemovePolymorphsFromPlayer(_Speaker1);

PROC
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2)
AND
DB_BlockPolymorphDialog(_Dialog)
THEN
ProcRemovePolymorphsFromPlayer(_Speaker1);
ProcRemovePolymorphsFromPlayer(_Speaker2);

PROC
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3)
AND
DB_BlockPolymorphDialog(_Dialog)
THEN
ProcRemovePolymorphsFromPlayer(_Speaker1);
ProcRemovePolymorphsFromPlayer(_Speaker2);
ProcRemovePolymorphsFromPlayer(_Speaker3);

PROC
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3,(GUIDSTRING)_Speaker4)
AND
DB_BlockPolymorphDialog(_Dialog)
THEN
ProcRemovePolymorphsFromPlayer(_Speaker1);
ProcRemovePolymorphsFromPlayer(_Speaker2);
ProcRemovePolymorphsFromPlayer(_Speaker3);
ProcRemovePolymorphsFromPlayer(_Speaker4);

PROC
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3,(GUIDSTRING)_Speaker4,(GUIDSTRING)_Speaker5)
AND
DB_BlockPolymorphDialog(_Dialog)
THEN
ProcRemovePolymorphsFromPlayer(_Speaker1);
ProcRemovePolymorphsFromPlayer(_Speaker2);
ProcRemovePolymorphsFromPlayer(_Speaker3);
ProcRemovePolymorphsFromPlayer(_Speaker4);
ProcRemovePolymorphsFromPlayer(_Speaker5);

PROC
Proc_DialogFlagSetup((STRING)_Dialog,(GUIDSTRING)_Speaker1,(GUIDSTRING)_Speaker2,(GUIDSTRING)_Speaker3,(GUIDSTRING)_Speaker4,(GUIDSTRING)_Speaker5,(GUIDSTRING)_Speaker6)
AND
DB_BlockPolymorphDialog(_Dialog)
THEN
ProcRemovePolymorphsFromPlayer(_Speaker1);
ProcRemovePolymorphsFromPlayer(_Speaker2);
ProcRemovePolymorphsFromPlayer(_Speaker3);
ProcRemovePolymorphsFromPlayer(_Speaker4);
ProcRemovePolymorphsFromPlayer(_Speaker5);
ProcRemovePolymorphsFromPlayer(_Speaker6);

PROC
ProcRemovePolymorphsFromPlayer((GUIDSTRING)_Object)
AND
DB_IsPlayer((CHARACTERGUID)_Object)
THEN
ProcRemovePolymorphs(_Object);
//END_REGION

//REGION Remove Poly in Dialog

IF
TextEventSet("addpolyflag")
AND
CharacterGetHostCharacter(_Player)
THEN
ObjectSetFlag(_Player,"GLO_Polymorphed");


IF
ObjectFlagSet("GLO_RemovePolymorph",(CHARACTERGUID)_Player,_)
THEN
ProcRemovePolymorphs(_Player);
ObjectClearFlag(_Player,"GLO_RemovePolymorph");

//END_REGION

//REGION Shapeshift form reserving
PROC
ProcReservePolymorphShapes((CHARACTERGUID)_Char)
AND
DB_PolymorphStatuses(_Race,_)
THEN
CharacterReservePolymorphShape(_Char,_Race);

IF
DB_IsPlayer(_Char)
THEN
ProcReservePolymorphShapes(_Char);
ProcMarkUndeadOrigin(_Char);

PROC
ProcCheckRemoveOtherOrigins()
AND
DB_InCharacterCreation(0)
AND
DB_IsPlayer(_Player)
THEN
ProcReservePolymorphShapes(_Player);
ProcMarkUndeadOrigin(_Player);

IF
CharacterCreationFinished((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000)
AND
DB_IsPlayer(_Player)
THEN
ProcReservePolymorphShapes(_Player);
ProcMarkUndeadOrigin(_Player);

//END_REGION

//REGION Undead origins
PROC
ProcMarkUndeadOrigin((CHARACTERGUID)_Player)
AND
IsTagged(_Player,"UNDEAD",1)
THEN
DB_UndeadCharacter(_Player);
//END_REGION

//REGION Get current polymorph status for _Char (even if none)
// Returns it in DB_GLOBAL_Shapeshifting_PolymorphStatus(_Race). In case not polymorphed, _Race is an empty string
QRY
QRY_GLOBAL_Shapeshifting_GetPolymorphStatus((CHARACTERGUID)_Char)
AND
DB_GLOBAL_Shapeshifting_PolymorphStatus(_Race)
THEN
NOT DB_GLOBAL_Shapeshifting_PolymorphStatus(_Race);

QRY
QRY_GLOBAL_Shapeshifting_GetPolymorphStatus((CHARACTERGUID)_Char)
AND
DB_CharacterPolymorphedInto(_Char,_Race)
THEN
DB_GLOBAL_Shapeshifting_PolymorphStatus(_Race);

QRY
QRY_GLOBAL_Shapeshifting_GetPolymorphStatus((CHARACTERGUID)_Char)
AND
NOT DB_CharacterPolymorphedInto(_Char,_)
THEN
DB_GLOBAL_Shapeshifting_PolymorphStatus("");
//END_REGION

//REGION True race query
QRY
QRY_IsTrueRace((CHARACTERGUID)_Character,(STRING)_Race)
AND
CharacterGetRace(_Character,0,_Race)
THEN
DB_NOOP(1);

QRY
QRY_IsTrueUndead((CHARACTERGUID)_Character)
AND
CharacterGetRace(_Character,0,_TrueRace)
AND
DB_UndeadRacePresets((INTEGER)_,_TrueRace)
THEN
DB_NOOP(1);

//END_REGION

IF
TextEventSet("getrace")
AND
CharacterGetHostCharacter(_Player)
AND
CharacterGetRace(_Player,0,_TrueRace)
THEN
DebugText(_Player,_TrueRace);

//REGION Keeping track of true race
IF
DB_IsPlayer(_Player)
THEN
PROC_GLO_SetOriginalRaceTag(_Player);

PROC
PROC_GLO_SetOriginalRaceTag((CHARACTERGUID)_Player)
AND
CharacterGetRace(_Player, 0, _TrueRace)
AND
DB_Shapeshifting_OriginalRaces(_TrueRace, (STRING)_Tag)
THEN
SetTag(_Player, _Tag);

//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "__Shared_Campaign"
