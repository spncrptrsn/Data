Version 1
SubGoalCombiner SGC_AND
INITSECTION
//	DB_ArenaMaster_SetFlags((STRING)ArenaName,(STRING)FlagUsedInDialog_ArenaType,(STRING)ArenaType,(TRIGGERGUID)CheckTrigger);
//	Variables:
//		ArenaName - groups all Databases to the Arena used (Driftwood, FTJ, etc)
//		FlagUsedInDialog_ - Used at ObjectFlagSet from dialog (See RC_DW_Driftwood for example)
//		ArenaType - defines which grouping type and checks we use:
//			User - checks for Companions in region, available and groups them
//			Party - checks for all characters in party in region, availabe, and groups them
//			PVP - checks for initiator's Companions, and target and her Companions, in region, available and group in two teams
//		CheckTrigger - trigger where characters need to be to be considered as "in region" availability

//DB_ArenaMaster_SetFlags("Driftwood","Arena_Driftwood_User","User",(TRIGGERGUID)TRIGGERGUID_S_RC_DW_Undertavern_41caf09c-8ddd-461f-a892-a085009b648b);
//DB_ArenaMaster_SetFlags("Driftwood","Arena_Driftwood_Party","Party",(TRIGGERGUID)TRIGGERGUID_S_RC_DW_Undertavern_41caf09c-8ddd-461f-a892-a085009b648b);
//DB_ArenaMaster_SetFlags("Driftwood","Arena_Driftwood_Pvp","PVP",(TRIGGERGUID)TRIGGERGUID_S_RC_DW_Undertavern_41caf09c-8ddd-461f-a892-a085009b648b);

//	DB_ArenaMaster_WinFlags((STRING)ArenaName,(STRING)WinFlag,(STRING)LostFlag);
// 	Variables
//		ArenaName - groups all Databases to the Arena used (Driftwood, FTJ, etc)
//		WinFlag - flags winner character 
//		LostFlag - flags loser character 

//DB_ArenaMaster_WinFlags("Driftwood","Arena_Driftwood_Champion","Arena_Driftwood_Lost");

//	DB_ArenaMaster((STRING)ArenaMasterDialog,(STRING)ArenaName,(TRIGGER)ArenaMasterPosition);
// 	Variables
//		ArenaMasterDialog - dialog used for checking and initiating Arena fights
//		ArenaName - as mentioned before
//		ArenaMasterPosition - position where players will be teleported after arena
//DB_ArenaMaster((CHARACTERGUID)CHARACTERGUID_S_RC_DW_ArenaMaster_8a1c0600-aca0-479b-8044-a36d011ccff7,"RC_DW_ArenaMaster","Driftwood",(TRIGGERGUID)TRIGGERGUID_S_RC_DW_ArenaMaster_FnlPos_02858901-3e40-4a11-a724-4a289bbecff6);

//	DB_ArenaPresets_Player((STRING)ArenaName,(STRING)Arena_TeamX,(TRIGGERGUID)Trigger);
// 	Here we declare the position in which the characters will be teleportered when arena starts, according to their team
//	Variables
//		ArenaName - as mentioned before
//		Arena_TeamX - sets the team and alignment; these should be "Arena_TeamA" and "Arena_TeamB"
//			NOTE: there must be two DB_ArenaPresets_Player providing both "Arena_TeamA" and "Arena_TeamB" to allow PVP
//		Trigger - the trigger point characters will be teleported when arena starts
//			NOTE: Arena_TeamA and Arena_TeamB to start in different triggers

//DB_ArenaPresets_Player("Driftwood","Arena_TeamA",(TRIGGERGUID)TRIGGERGUID_S_RC_DW_Arena_StartA_b78d7cc5-e889-4624-a75e-963cad782953);
//DB_ArenaPresets_Player("Driftwood","Arena_TeamB",(TRIGGERGUID)TRIGGERGUID_S_RC_DW_Arena_StartB_e722e1da-2d01-49e4-89c2-4a073024049d);

//	DB_ArenaPresets_Mobs((STRING)ArenaName,(CHARACTERGUID)NPC,(TRIGGERGUID)Trigger);
//	When a preset is chosen, we look for which NPC and where they'll be teleported;
// 	Here you want to list each NPC in arena, and their trigger - for each Preset
//	Variables
//		ArenaName - as mentioned before
//		NPC - enemies who'll fight in the arena in that Preset
//		Trigger - position the npc will be teleported

//DB_ArenaPresets_Mobs("Driftwood",(CHARACTERGUID)CHARACTERGUID_S_RC_DW_UnderTavern_Dorotya_6fa62a51-5ac2-4b51-b3a8-0d7bf8e4b069,(TRIGGERGUID)TRIGGERGUID_S_RC_DW_Arena_StartB_e722e1da-2d01-49e4-89c2-4a073024049d);

//	DB_ArenaMaster_RingGirl
//	Initiates a final dialog when arena finished, before teleporting out
//	Variables
//		RingGirl - character used
//		RingGirlDialog - dialog used for checking and initiating Arena fights
//		ArenaName - as mentioned before
//		ArenaMasterPosition - position where players will be teleported after arena

//DB_ArenaMaster_RingGirl((CHARACTERGUID)CHARACTERGUID_S_RC_DW_Arena_RingGirl_dae14c53-e2ff-40ec-b637-a5ad688ec37d,"RC_DW_AD_Arena_RingGirl","Driftwood",(TRIGGERGUID)TRIGGERGUID_S_RC_DW_Arena_RingGirlTrig_a329f679-30a5-45f4-929f-424e080036c4);
//DB_ArenaMaster_RingGirl((CHARACTERGUID)CHARACTERGUID_S_FTJ_RingGirl_Helper_2c6f3151-8d67-4af7-a4b7-e18b7c64ac94,"FTJ_AD_ArenaGirl","FortJoy",(TRIGGERGUID)TRIGGERGUID_S_FTJ_ArenaMid_5b46ec8d-8652-464f-a1b4-698d9155f6b3);

//REGION Declarations

DB_ArenaMaster((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000,"NULL","NULL",(TRIGGERGUID)NULL_00000000-0000-0000-0000-000000000000);
DB_ArenaPresets_Mobs("NULL",(CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000,(TRIGGERGUID)NULL_00000000-0000-0000-0000-000000000000);
DB_ArenaChampionTag("NULL","NULL");
DB_ArenaMaster_WinFlags("NULL","NULL","NULL");
DB_ArenaPresets_Player("NULL","NULL",(TRIGGERGUID)NULL_00000000-0000-0000-0000-000000000000);
DB_Arena_DisableLastManStanding("NULL");
DB_Arena_ReviveCharAfter((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000);
DB_ArenaMaster_RingGirl((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000,"NULL","NULL",(TRIGGERGUID)NULL_00000000-0000-0000-0000-000000000000);
DB_Arena_MobIsAlreadyInArena((CHARACTERGUID)NULL_00000000-0000-0000-0000-000000000000);
DB_Arena_FightToTheDeath("NULL");
DB_ArenaMaster_SetFlags("NULL","NULL","NULL",(TRIGGERGUID)NULL_00000000-0000-0000-0000-000000000000);
DB_Arena_NonLethal("NULL");

//END_REGION

DB_VariableTranslatedString("Arena_AvailablePlayer_1","Arena_AvailablePlayer_1_3b7981f5-c807-44bc-b2cd-a434ba7b6b35");
DB_VariableTranslatedString("Arena_AvailablePlayer_2","Arena_AvailablePlayer_2_f3cb5f2b-c0ca-4b36-b671-dd64d481f45d");
DB_VariableTranslatedString("Arena_AvailablePlayer_3","Arena_AvailablePlayer_3_ed640a14-91d4-472d-b92b-b042b8011fde");
DB_VariableTranslatedString("Arena_AvailablePlayer_4","Arena_AvailablePlayer_4_3f666e1e-7f5e-43e8-8c02-3c61966147d3");
KBSECTION
//REGION Arena Masters
IF
DB_ArenaMaster_RingGirl((CHARACTERGUID)_Char,(STRING)_,(STRING)_,(TRIGGERGUID)_)
THEN
CharacterSetImmortal(_Char,1);
SetOnStage(_Char,0);

IF
ObjectFlagSet(_Flag,_Char,_Inst)
AND
DB_Arena_AvailablePlayer(_Flag,_Target,_)
THEN
DebugText(_Char,_Flag);
DB_Arena_PvpChallenge(_Char,_Target);

IF
ObjectFlagSet(_Flag,(CHARACTERGUID)_Char,_Inst) //Initiate Check
AND
DB_ArenaMaster_SetFlags((STRING)_Arena,(STRING)_Flag,(STRING)_Type,(TRIGGERGUID)_Trig)
THEN
//DebugText(_Char,_Arena);
DB_ArenaMaster_SetUp(_Inst);
Proc_Arena_CheckAvailableCharacters_1(_Arena,_Type,_Trig,_Char,_Inst);
ObjectClearFlag(_Char,_Flag,_Inst);

//Checking for other players
IF
DialogStarted(_Dialog,_Inst)
AND
DB_ArenaMaster(_,_Dialog,_,_)
AND
DialogGetInvolvedPlayer(_Inst,1,(CHARACTERGUID)_Initiator)
AND
CharacterGetReservedUserID(_Initiator,_InitiatorUser)
AND
NOT DB_ArenaMaster_CheckOtherPlayers_Initiated(_,_)
THEN
DB_ArenaMaster_CheckOtherPlayers_Initiated(_InitiatorUser,_Dialog);
Proc_Arena_CheckOtherPlayers(_InitiatorUser,_Dialog);

IF
DialogEnded(_Dialog,_)
AND
DB_ArenaMaster_CheckOtherPlayers_Initiated(_InitiatorUser,_Dialog)
THEN
NOT DB_ArenaMaster_CheckOtherPlayers_Initiated(_InitiatorUser,_Dialog);

PROC
Proc_Arena_CheckOtherPlayers((INTEGER)_,(STRING)_)
AND
DB_IsPlayer(_Char)
THEN
UserClearFlag(_Char,"Arena_HasAvatar",0);
PartyClearFlag(_Char,"Arena_PartyHasAvatar",0);

PROC
Proc_Arena_CheckOtherPlayers((INTEGER)_,(STRING)_)
AND
DB_Arena_CheckOtherPlayers_Count(_Int)
THEN
NOT DB_Arena_CheckOtherPlayers_Count(_Int);

PROC
Proc_Arena_CheckOtherPlayers((INTEGER)_,(STRING)_)
AND
DB_Arena_CheckOtherCharacters_Count(_Int)
THEN
NOT DB_Arena_CheckOtherCharacters_Count(_Int);

PROC
Proc_Arena_CheckOtherPlayers((INTEGER)_,(STRING)_)
THEN
GlobalClearFlag("ArenaDialog_SinglePlayer");
GlobalClearFlag("ArenaDialog_SingleCharacter");
GlobalClearFlag("Arena_AvailablePlayer_1");
GlobalClearFlag("Arena_AvailablePlayer_2");
GlobalClearFlag("Arena_AvailablePlayer_3");
GlobalClearFlag("Arena_AvailablePlayer_4");
GlobalClearFlag("Arena_ChallengePlayer_1");
GlobalClearFlag("Arena_ChallengePlayer_2");
GlobalClearFlag("Arena_ChallengePlayer_3");
GlobalClearFlag("Arena_ChallengePlayer_4");
GlobalClearFlag("ArenaDialog_NoOtherAvatars");

PROC
Proc_Arena_CheckOtherPlayers((INTEGER)_,(STRING)_)
AND
DB_Arena_AvailablePlayer(_ChallengeFlag,_Char,_User)
THEN
NOT DB_Arena_AvailablePlayer(_ChallengeFlag,_Char,_User);
DebugText(_Char,"Proc_Arena_CheckOtherPlayers");

PROC
Proc_Arena_CheckOtherPlayers((INTEGER)_,(STRING)_)
AND
DB_IsPlayer(_Char)
AND
IsTagged(_Char,"AVATAR",1)
THEN
UserSetFlag(_Char,"Arena_HasAvatar");
PartySetFlag(_Char,"Arena_PartyHasAvatar");

IF
GlobalFlagSet("ArenaDialog_SinglePlayer")
THEN
DebugText(CHARACTERGUID_S_FTJ_ArenaMaster_4eadc6c7-f934-43ad-bb74-c59358106114,"ArenaDialog_SinglePlayer");

PROC
Proc_Arena_CheckOtherPlayers((INTEGER)_,(STRING)_)
THEN
DB_Arena_CheckOtherCharacters_Count(0);

PROC
Proc_Arena_CheckOtherPlayers((INTEGER)_,(STRING)_)
AND
GetUserCount(1)
THEN
GlobalSetFlag("ArenaDialog_SinglePlayer");


PROC
Proc_Arena_CheckOtherPlayers((INTEGER)_,(STRING)_)
AND
GlobalGetFlag("ArenaDialog_SinglePlayer",0)
THEN
DB_Arena_CheckOtherPlayers_Count(0);


PROC 
Proc_Arena_CheckOtherPlayers((INTEGER)_InitiatorUser,(STRING)_)
AND
DB_IsPlayer(_Char)
AND
CharacterGetReservedUserID(_Char,_InitiatorUser)
AND
DB_Arena_CheckOtherCharacters_Count(_Int)
AND
IntegerSum(_Int,1,_Sum)
THEN
NOT DB_Arena_CheckOtherCharacters_Count(_Int);
DB_Arena_CheckOtherCharacters_Count(_Sum);

PROC 
Proc_Arena_CheckOtherPlayers((INTEGER)_InitiatorUser,(STRING)_)
AND
DB_Arena_CheckOtherCharacters_Count(_Int)
AND
NOT _Int > 1
THEN
GlobalSetFlag("ArenaDialog_SingleCharacter");


PROC 
Proc_Arena_CheckOtherPlayers((INTEGER)_InitiatorUser,(STRING)_)
AND
GlobalGetFlag("ArenaDialog_SinglePlayer",0)
AND
DB_IsPlayer(_Char)
AND
IsTagged(_Char,"AVATAR",1)
AND
CharacterGetReservedUserID(_Char,_User)
AND
_User!=_InitiatorUser
AND
DB_Arena_CheckOtherPlayers_Count(_Int)
AND
IntegerSum(_Int,1,_Sum)
AND
IntegertoString(_Sum,_SumString)
AND
StringConcatenate("Arena_AvailablePlayer_",_SumString,_CheckFlag)
AND
StringConcatenate("Arena_ChallengePlayer_",_SumString,_ChallengeFlag)
AND
NOT DB_Arena_AvailablePlayer(_,_,_User)
THEN
NOT DB_Arena_CheckOtherPlayers_Count(_Int);
DB_Arena_CheckOtherPlayers_Count(_Sum);
GlobalSetFlag(_CheckFlag);
DB_Arena_AvailablePlayer_SetDialogVar(_CheckFlag,_Char,_User);
DB_Arena_AvailablePlayer(_ChallengeFlag,_Char,_User);
DebugText(_Char,_ChallengeFlag);

PROC 
Proc_Arena_CheckOtherPlayers((INTEGER)_,(STRING)_Dialog)
AND
DB_Arena_AvailablePlayer_SetDialogVar(_CheckFlag,_Char,_User)
AND
DB_VariableTranslatedString(_CheckFlag,_Var)
AND
CharacterGetDisplayName(_Char,_handle,_ref)
THEN
DialogSetVariableTranslatedString(_Dialog,_Var,_handle,_ref);
NOT DB_Arena_AvailablePlayer_SetDialogVar(_CheckFlag,_Char,_User);


PROC 
Proc_Arena_CheckOtherPlayers(_,_)
AND
NOT DB_Arena_AvailablePlayer(_,_,_)
THEN
GlobalSetFlag("ArenaDialog_NoOtherAvatars");


//END_REGION

//REGION Team Manager
PROC
Proc_Arena_CheckAvailableCharacters_1((STRING)_,(STRING)_,(TRIGGERGUID)_,(CHARACTERGUID)_,(INTEGER)_)
THEN
GlobalClearFlag("Arena_CharNotInRegion");
GlobalClearFlag("Arena_CharNotAvailable");
GlobalClearFlag("Arena_StartAfterDialog");

PROC
Proc_Arena_CheckAvailableCharacters_1((STRING)_,"User",(TRIGGERGUID)_Trig,(CHARACTERGUID)_Initiator,(INTEGER)_)
AND
CharacterGetReservedUserID(_Initiator,_User)
AND
DB_IsPlayer(_Char)
AND
CharacterGetReservedUserID(_Char,_User)
THEN
Proc_Arena_CheckAvailableCharacters_2(_Char,_Trig,_Initiator);

PROC
Proc_Arena_CheckAvailableCharacters_1((STRING)_,"Party",(TRIGGERGUID)_Trig,(CHARACTERGUID)_Initiator,(INTEGER)_)
AND
DB_IsPlayer(_Char)
AND
CharacterIsInPartyWith(_Char,_Initiator,1)
THEN
Proc_Arena_CheckAvailableCharacters_2(_Char,_Trig,_Initiator);

PROC
Proc_Arena_CheckAvailableCharacters_1((STRING)_,"PVP",(TRIGGERGUID)_Trig,(CHARACTERGUID)_Initiator,(INTEGER)_)
AND
DB_Arena_PvpChallenge(_Initiator,_Target)
AND
CharacterGetReservedUserID((CHARACTERGUID)_Target,_User)
AND
DB_IsPlayer(_Char)
AND
CharacterGetReservedUserID(_Char,_User)
THEN
Proc_Arena_CheckAvailableCharacters_2(_Char,_Trig,_Initiator);
DebugText(_Char,"Proc_Arena_CheckAvailableCharacters_2");

PROC
Proc_Arena_CheckAvailableCharacters_1((STRING)_,"PVP",(TRIGGERGUID)_Trig,(CHARACTERGUID)_Initiator,(INTEGER)_)
AND
CharacterGetReservedUserID((CHARACTERGUID)_Initiator,_User)
AND
DB_IsPlayer(_Char)
AND
CharacterGetReservedUserID(_Char,_User)
THEN
Proc_Arena_CheckAvailableCharacters_2(_Char,_Trig,_Initiator);

PROC
Proc_Arena_CheckAvailableCharacters_2((CHARACTERGUID)_Char,(TRIGGERGUID)_Trig,(CHARACTERGUID)_)
AND
GlobalGetFlag("Arena_CharNotInRegion",0)
AND
NOT DB_InRegion(_Char,_Trig)
AND
NOT DB_Arena_PlayerParticipants("DriftwoodVoidwoken",_,_Char,_)
AND
NOT DB_Arena_PlayerParticipants("DriftwoodMurga",_,_Char,_)
THEN
//DebugText(_Char,"Arena_CharNotInRegion");
GlobalSetFlag("Arena_CharNotInRegion");

PROC
Proc_Arena_CheckAvailableCharacters_2((CHARACTERGUID)_Char,(TRIGGERGUID)_Trig,(CHARACTERGUID)_Initiator)
AND
GlobalGetFlag("Arena_CharNotInRegion",0)
AND
GlobalGetFlag("Arena_CharNotAvailable",0)
AND
_Char!=_Initiator
AND
NOT DB_Arena_PlayerParticipants("DriftwoodVoidwoken",_,_Char,_)
AND
NOT DB_Arena_PlayerParticipants("DriftwoodMurga",_,_Char,_)
AND
NOT QRY_SpeakerIsAvailable(_Char)
THEN
GlobalSetFlag("Arena_CharNotAvailable");
//DebugText(_Char,"Arena_CharNotAvailable");

PROC
Proc_Arena_CheckAvailableCharacters_1((STRING)_Arena,(STRING)_Type,(TRIGGERGUID)_,(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
AND
GlobalGetFlag("Arena_CharNotInRegion",0)
AND
GlobalGetFlag("Arena_CharNotAvailable",0)
THEN
Proc_Arena_SetUpTeams(_Arena,_Type,_Initiator,_Inst);
//DebugText(_Initiator,"Proc_Arena_SetUpTeams");

//END_REGION

//REGION Preset Manager; Player
PROC
Proc_Arena_SetUpTeams((STRING)_Arena,"Single",(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
THEN
DB_Arena_PlayerParticipants(_Arena,_Inst,_Initiator,"Arena_TeamA");

PROC
Proc_Arena_SetUpTeams((STRING)_Arena,"User",(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
AND
CharacterGetReservedUserID(_Initiator,_User)
AND
DB_IsPlayer(_Char)
AND
CharacterGetReservedUserID(_Char,_User)
AND
NOT DB_Arena_PlayerParticipants("DriftwoodVoidwoken",_,_Char,_)
AND
NOT DB_Arena_PlayerParticipants("DriftwoodMurga",_,_Char,_)
THEN
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,"Arena_TeamA");
//DebugText(_Char,"User Arena_TeamA");

PROC
Proc_Arena_SetUpTeams((STRING)_Arena,"Party",(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
AND
DB_IsPlayer(_Char)
AND
CharacterIsInPartyWith(_Char,_Initiator,1)
AND
NOT DB_Arena_PlayerParticipants("DriftwoodVoidwoken",_,_Char,_)
AND
NOT DB_Arena_PlayerParticipants("DriftwoodMurga",_,_Char,_)
THEN
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,"Arena_TeamA");
//DebugText(_Char,"Party Arena_TeamA");

PROC
Proc_Arena_SetUpTeams((STRING)_Arena,"PVP",(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
AND
CharacterGetReservedUserID(_Initiator,_User)
AND
DB_IsPlayer(_Char)
AND
CharacterGetReservedUserID(_Char,_User)
THEN
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,"Arena_TeamA");
//DebugText(_Char,"Arena_TeamA");

PROC
Proc_Arena_SetUpTeams((STRING)_Arena,"PVP",(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
AND
DB_Arena_PvpChallenge(_Initiator,_Target)
AND
CharacterGetReservedUserID((CHARACTERGUID)_Target,_User)
AND
DB_IsPlayer(_Char)
AND
CharacterGetReservedUserID(_Char,_User)
THEN
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,"Arena_TeamB");
DebugText(_Char,"Arena_TeamB");


PROC
Proc_Arena_SetUpTeams((STRING)_Arena,"PVP",(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
AND
NOT DB_Arena_PlayerParticipants(_,_Inst,_,"Arena_TeamB")
THEN
GlobalClearFlag("Arena_StartAfterDialog");
DebugText(_Initiator,"NO PARTICIPANTS!");


PROC
Proc_Arena_SetUpTeams((STRING)_,(STRING)_,(CHARACTERGUID)_Char,(INTEGER)_Inst)
AND
NOT DB_Arena_PlayerParticipants(_,_Inst,_,_)
THEN
DebugText(_Char,"NO PARTICIPANTS!");
//END_REGION

//REGION Preset Manager; NPCs
PROC
Proc_Arena_SetUpTeams((STRING)_Arena,(STRING)_Type,(CHARACTERGUID)_Initiator,(INTEGER)_)
AND
_Type != "PVP"
AND
DB_ArenaPresets_Mobs((STRING)_Arena,(CHARACTERGUID)_Char,(TRIGGERGUID)_Trig)
AND
CharacterIsDead(_Char,1)
THEN
DebugText(_Initiator,"Mob is dead!"); //TODO what now?

//TODO preset definitions & get preset
PROC
Proc_Arena_SetUpTeams((STRING)_Arena,(STRING)_Type,(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
AND
_Type != "PVP"
AND
DB_ArenaPresets_Mobs(_Arena,_Char,_Trig)
AND
NOT CharacterIsDead(_Char,1)
THEN
DB_Arena_MobParticipants(_Inst,_Char,_Trig,"Arena_TeamB");

PROC
Proc_Arena_SetUpTeams((STRING)_,(STRING)_Type,(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
AND
_Type != "PVP"
AND
NOT DB_Arena_MobParticipants(_Inst,_,_,_)
THEN
DebugText(_Initiator,"NO MOBS!");

PROC
Proc_Arena_SetUpTeams((STRING)_,(STRING)_Type,(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
AND
_Type != "PVP"
AND
GlobalGetFlag("Arena_StartAfterDialog",0)
AND
DB_Arena_PlayerParticipants(_,_Inst,_,_)
AND
DB_Arena_MobParticipants(_Inst,_,_,_)
THEN
GlobalSetFlag("Arena_StartAfterDialog");

PROC
Proc_Arena_SetUpTeams((STRING)_,"PVP",(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
AND
GlobalGetFlag("Arena_StartAfterDialog",0)
AND
DB_Arena_PlayerParticipants(_,_Inst,_Char,"Arena_TeamA")
AND
DB_Arena_PlayerParticipants(_,_Inst,_OtherChar,"Arena_TeamB")
AND
CharacterGetReservedUserID(_Char,_User)
AND
CharacterGetReservedUserID(_OtherChar,_User)
THEN
DB_Arena_PlayerParticipants_SameUser(1);
DebugText(_Char,"same user");

PROC
Proc_Arena_SetUpTeams((STRING)_,"PVP",(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
AND
NOT DB_Arena_PlayerParticipants_SameUser(1)
AND
GlobalGetFlag("Arena_StartAfterDialog",0)
AND
DB_Arena_PlayerParticipants(_,_Inst,_,"Arena_TeamA")
AND
DB_Arena_PlayerParticipants(_,_Inst,_,"Arena_TeamB")
THEN
GlobalSetFlag("Arena_StartAfterDialog");

//Creates Global flag: Arena_[ArenaName]_PvpInitiated
PROC
Proc_Arena_SetUpTeams((STRING)_Arena,(STRING)_Type,(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
AND
GlobalGetFlag("Arena_StartAfterDialog",1)
AND
DB_ArenaMaster_SetFlags((STRING)_Arena,(STRING)_Flag,(STRING)_Type,_)
AND
_Type == "Pvp"
AND
StringConcatenate("Arena_",_Arena,_ArenaFlag)
AND
StringConcatenate(_ArenaFlag,"_PvpInitiated",_NewFlag)
THEN
GlobalSetFlag(_NewFlag);

//Creates User flag: Arena_[ArenaName]_PvpParticipated
PROC
Proc_Arena_SetUpTeams((STRING)_Arena,(STRING)_Type,(CHARACTERGUID)_Initiator,(INTEGER)_Inst)
AND
GlobalGetFlag("Arena_StartAfterDialog",1)
AND
DB_ArenaMaster_SetFlags((STRING)_Arena,(STRING)_Flag,(STRING)_Type,_)
AND
_Type == "Pvp"
AND
StringConcatenate("Arena_",_Arena,_ArenaFlag)
AND
StringConcatenate(_ArenaFlag,"_PvpParticipated",_NewFlag)
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,_)
THEN
UserSetFlag(_Char,_NewFlag);

//Creates Global flag: Arena_[ArenaName]_PveInitiated
PROC
Proc_Arena_SetUpTeams((STRING)_Arena,(STRING)_Type,(CHARACTERGUID)_Initiator,_)
AND
GlobalGetFlag("Arena_StartAfterDialog",1)
AND
DB_ArenaMaster_SetFlags((STRING)_Arena,(STRING)_Flag,(STRING)_Type,_)
AND
_Type != "Pvp"
AND
StringConcatenate("Arena_",_Arena,_ArenaFlag)
AND
StringConcatenate(_ArenaFlag,"_PveInitiated",_NewFlag)
THEN
GlobalSetFlag(_NewFlag);

//Creates User flag: Arena_[ArenaName]_PveParticipated
PROC
Proc_Arena_SetUpTeams((STRING)_Arena,(STRING)_Type,(CHARACTERGUID)_Initiator,_)
AND
GlobalGetFlag("Arena_StartAfterDialog",1)
AND
DB_ArenaMaster_SetFlags((STRING)_Arena,(STRING)_Flag,(STRING)_Type,_)
AND
_Type != "Pvp"
AND
StringConcatenate("Arena_",_Arena,_ArenaFlag)
AND
StringConcatenate(_ArenaFlag,"_PveParticipated",_NewFlag)
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,_)
THEN
UserSetFlag(_Char,_NewFlag);

PROC
Proc_Arena_SetUpTeams((STRING)_Arena,(STRING)_Type,(CHARACTERGUID)_Initiator,_)
AND
GlobalGetFlag("Arena_StartAfterDialog",1)
AND
DB_ArenaMaster_SetFlags((STRING)_Arena,(STRING)_Flag,(STRING)_Type,_)
AND
_Type != "Pvp"
AND
StringConcatenate("Arena_",_Arena,_ArenaFlag)
AND
StringConcatenate(_ArenaFlag,"_PveParticipated",_NewFlag)
THEN
GlobalSetFlag(_NewFlag);

PROC
Proc_Arena_SetUpTeams(_,_,(CHARACTERGUID)_Initiator,_)
AND
GlobalGetFlag("Arena_StartAfterDialog",1)
THEN
DialogRequestStop(_Initiator);


//END_REGION


//REGION Arena Logic; Start
//TODO find a better place to start
IF
DialogEnded(_,_Inst)
AND
DB_ArenaMaster_SetUp(_Inst)
AND
GlobalGetFlag("Arena_StartAfterDialog",1)
THEN
Proc_Arena_Initiate(_Inst);
Proc_Arena_ClearFlagsAndDatabases(_Inst);

PROC
Proc_Arena_Initiate((INTEGER)_Inst)
THEN
GlobalSetFlag("Arena_OnGoing");

PROC
Proc_Arena_Initiate((INTEGER)_Inst)
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,_Team)
AND
DB_ArenaPresets_Player((STRING)_Arena,(STRING)_Team,(TRIGGERGUID)_Trig)
AND
GetFaction(_Char,_Faction)
THEN
DB_Arena_PreviousFaction(_Char,_Faction);
DB_Arena_CharIsAlive(_Team,_Char);
TeleportTo(_Char,_Trig,"",0);
SetInArena(_Char,1);
SetFaction(_Char,_Team); 


PROC
Proc_Arena_Initiate((INTEGER)_Inst)
AND
DB_Arena_MobParticipants(_Inst,_Char,_Trig,_Team)
AND
NOT DB_Arena_MobIsAlreadyInArena(_Char)
AND
GetFaction(_Char,_Faction)
AND
GetPosition(_Char,_X,_Y,_Z)
THEN
SetOnStage(_Char,1);
DB_Arena_PreviousFaction(_Char,_Faction);
DB_Arena_PreviousLocation(_Char,_X,_Y,_Z);
TeleportTo(_Char,_Trig);

PROC
Proc_Arena_Initiate((INTEGER)_Inst)
AND
DB_Arena_MobParticipants(_Inst,_Char,_Trig,_Team)
THEN
DB_Arena_CharIsAlive(_Team,_Char);
SetInArena(_Char,1);
SetFaction(_Char,_Team); 

//END_REGION

//REGION Win conditions
IF
CharacterDying(_Char)
AND
GlobalGetFlag("Arena_RequestingLastManStanding",0)
AND
DB_Arena_CharIsAlive(_Team,_Char)
AND
NOT QRY_CharIsAboutToResurrect(_Char)
THEN
NOT DB_Arena_CharIsAlive(_Team,_Char);
DB_Arena_CharWasAlive(_Team,_Char);
Proc_Arena_CheckWinCondition();

IF
CharacterResurrected(_Char)
AND
DB_Arena_CharWasAlive(_Team,_Char)
THEN
DB_Arena_CharIsAlive(_Team,_Char);
NOT DB_Arena_CharWasAlive(_Team,_Char);


//REGION Non-Lethal Arena / Unconcious Mechanic

IF
DB_Arena_CharIsAlive(_Team,_Char)
AND
Qry_Arena_InNonLethalArena(_Char)
THEN
CharacterSetImmortal(_Char,1);

IF
CharacterReceivedDamage(_Char,_,_)
AND
Qry_Arena_InNonLethalArena(_Char)
AND
CharacterGetHitpointsPercentage(_Char,_Per)
AND
_Per < 1
THEN
ApplyStatus(_Char,"UNCONSCIOUS",-1.0,1);

IF
CharacterStatusApplied(_Char,"UNCONSCIOUS",_)
AND
Qry_Arena_InNonLethalArena(_Char)
AND
DB_Arena_CharIsAlive(_Team,_Char)
THEN
SetInArena(_Char,0);
SetCanFight(_Char,0);
SetCanJoinCombat(_Char,0);
ObjectSetFlag(_Char,"GLO_BlockRegenAfterCombat");
NOT DB_Arena_CharIsAlive(_Team,_Char);
Proc_Arena_CheckWinCondition();


QRY
Qry_Arena_InNonLethalArena((CHARACTERGUID)_Char)
AND
DB_Arena_CharIsAlive(_,_Char)
AND
DB_ArenaPresets_Mobs(_Arena,_Char,_)
AND
DB_Arena_NonLethal(_Arena)
THEN
DB_NOOP(1);

QRY
Qry_Arena_InNonLethalArena((CHARACTERGUID)_Char)
AND
DB_Arena_CharIsAlive(_,_Char)
AND
DB_Arena_PlayerParticipants(_Arena,_,_Char,_)
AND
DB_Arena_NonLethal(_Arena)
THEN
DB_NOOP(1);


//Clean Up
PROC
Proc_Arena_Win_TeleportOut()
AND
DB_Arena_NonLethal(_Arena)
AND
DB_Arena_PlayerParticipants(_Arena,_,_Char,_)
THEN
Proc_Arena_NonLethalCombatEnded(_Char);

PROC
Proc_Arena_Win_TeleportOut()
AND
DB_Arena_NonLethal(_Arena)
AND
DB_Arena_PreviousLocation(_Char,_X,_Y,_Z)
AND
DB_ArenaPresets_Mobs(_Arena,_Char,_)
THEN
TeleportToPosition(_Char,_X,_Y,_Z,"",1);
NOT DB_Arena_PreviousLocation(_Char,_X,_Y,_Z);
Proc_Arena_NonLethalCombatEnded(_Char);

PROC
Proc_Arena_NonLethalCombatEnded((CHARACTERGUID)_Char)
THEN
SetInArena(_Char,0);
ObjectClearFlag(_Char,"GLO_BlockRegenAfterCombat");
SetCanFight(_Char,1);
SetCanJoinCombat(_Char,1);
Proc_CharacterFullRestore(_Char);
CharacterSetImmortal(_Char,0);

//END_REGION

PROC
Proc_Arena_CheckWinCondition()
THEN
GlobalClearFlag("Arena_RequestingLastManStanding");

PROC
Proc_Arena_CheckWinCondition()
AND
NOT DB_Arena_CharIsAlive("Arena_TeamA",_)
THEN
Proc_Arena_Win("Arena_TeamB");

PROC
Proc_Arena_CheckWinCondition()
AND
NOT DB_Arena_CharIsAlive("Arena_TeamB",_)
AND
DB_Arena_PlayerParticipants(_Arena,_,_,_)
AND
NOT DB_Arena_DisableLastManStanding(_Arena)
THEN
Proc_Arena_CheckWinCondition_CheckForLMS();

PROC
Proc_Arena_CheckWinCondition()
AND
NOT DB_Arena_CharIsAlive("Arena_TeamB",_)
AND
GlobalGetFlag("Arena_RequestingLastManStanding",0)
THEN
Proc_Arena_Win("Arena_TeamA");

PROC
Proc_Arena_Win((STRING)_)
AND
DB_Arena_PlayerParticipants(_,_,_Char,_)
THEN
ProcSetInvulnerable(_Char,1);

PROC
Proc_Arena_Win((STRING)_)
THEN
Proc_Arena_Win_RingGirl();

PROC
Proc_Arena_Win((STRING)_)
AND
DB_Arena_PlayerParticipants(_Arena,_,_,_)
THEN
Proc_Arena_SetMobsOffStage(_Arena);

PROC
Proc_Arena_SetMobsOffStage((STRING)_Arena)
THEN
DB_NOOP(1);

PROC
Proc_Arena_Win((STRING)_Team)
AND
DB_Arena_PlayerParticipants(_Arena,_,_Char,_Team)
AND
CharacterIsDead(_Char,0)
AND
DB_ArenaMaster_WinFlags(_Arena,_Flag,_Clear)
THEN
UserSetFlag(_Char,_Flag);
UserClearFlag(_Char,_Clear,0);


PROC
Proc_Arena_Win((STRING)_Team)
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,_Team)
AND
DB_Arena_MobParticipants(_Inst,_,_,_)
AND
DB_Avatars(_Char)
THEN
Proc_Arena_SetChampionTag(_Char,_Arena);

PROC
Proc_Arena_Win((STRING)_Team)
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,_Team)
AND
NOT DB_Arena_MobParticipants(_Inst,_,_,_)
AND
DB_Avatars(_Char)
AND
DB_Arena_PlayerParticipants(_Arena,_,_AnyChar,_)
AND
DB_ArenaChampionTag(_Arena,_Tag)
AND
IsTagged(_AnyChar,_Tag,1)
THEN
Proc_Arena_SetChampionTag((CHARACTERGUID)_Char,(STRING)_Arena);


PROC
Proc_Arena_SetChampionTag((CHARACTERGUID)_Player,(STRING)_Arena)
AND
DB_ArenaChampionTag(_Arena,_Tag)
AND
IsTagged(_Player,_Tag,0)
THEN
SetTag(_Player,_Tag);

PROC
Proc_Arena_SetChampionTag((CHARACTERGUID)_Player,(STRING)_Arena)
AND
DB_ArenaChampionTag(_Arena,_Tag)
AND
DB_IsPlayer(_Char)
AND
_Char != _Player
THEN
ClearTag(_Char,_Tag);

PROC
Proc_Arena_Win((STRING)_Team)
AND
DB_Arena_PlayerParticipants(_Arena,_,_Char,_Team)
AND
CharacterIsDead(_Char,1)
AND
DB_ArenaMaster_WinFlags(_Arena,_Clear,_Flag)
AND
UserGetFlag(_Char,_Clear,0)
THEN
UserSetFlag(_Char,_Flag);
UserClearFlag(_Char,_Clear,0);


PROC
Proc_Arena_Win((STRING)_Team)
AND
DB_Arena_PlayerParticipants(_Arena,_,_Char,_OtherTeam)
AND
_OtherTeam!=_Team
AND
DB_ArenaMaster_WinFlags(_Arena,_Clear,_Flag)
THEN
UserSetFlag(_Char,_Flag);
UserClearFlag(_Char,_Clear,0);

PROC
Proc_Arena_Win((STRING)_)
AND
DB_Arena_PreviousFaction(_Char,_Faction)
THEN
SetFaction(_Char,_Faction);
//SetInArena(_Char,0);
NOT DB_Arena_PreviousFaction(_Char,_Faction);

PROC
Proc_Arena_Win((STRING)_)
AND
GlobalGetFlag("Arnea_RingGirl_NoRingGirl",1)
THEN
Proc_Arena_Win_TeleportOut();

PROC
Proc_Arena_Win_TeleportOut()
THEN
GlobalClearFlag("Arena_RequestingLastManStanding");
GlobalClearFlag("Arena_LastManStanding_AcceptWinner");
GlobalClearFlag("Arena_LastManStanding_NoAccept");
GlobalClearFlag("Arena_LastManStanding_Accept");

PROC
Proc_Arena_Win_TeleportOut()
AND
DB_Arena_PlayerParticipants(_,_,_Char,_)
THEN
CharacterRemoveSummons(_Char,1);
RemoveHarmfulStatuses(_Char);
CharacterSetHitpointsPercentage(_Char,100.0);
ProcSetInvulnerable(_Char,0);
DialogRequestStop(_Char);

PROC
Proc_Arena_Win_TeleportOut()
//AND
//GlobalGetFlag("Arnea_RingGirl_NoRingGirl",0)
AND
DB_Arena_PlayerParticipants(_,_,_Char,_)
THEN
FadeToBlack(_Char,2.0,1,"Placeholder");

PROC
Proc_Arena_Win_TeleportOut()
THEN
GlobalClearFlag("Arnea_RingGirl_NoRingGirl");

PROC
Proc_Arena_Win_TeleportOut() //TODO what happens if enemy wins
AND
DB_Arena_PlayerParticipants(_Arena,_,_Char,_)
AND
DB_ArenaMaster(_,_,_Arena,_TeleportTo)
//AND
//NOT DB_Arena_FightToTheDeath(_Arena)
THEN
SetInArena(_Char,0);
CharacterSetSpectating(_Char,0);
TeleportTo(_Char,_TeleportTo);
CharacterFlushQueue(_Char);
SetStoryEvent(_Char,"Arena_CharacterTeleportedOutOfArena");

PROC
Proc_Arena_Win_TeleportOut()
AND
DB_Arena_PlayerParticipants(_Arena,_,_Char,_)
AND
CharacterIsDead(_Char,1)
AND
NOT DB_Arena_FightToTheDeath(_Arena)
THEN
CharacterResurrectCustom(_Char,"");

/* //TODO
PROC
Proc_Arena_Win_TeleportOut() //Do we revive enemies?
AND
DB_Arena_PreviousLocation(_Char,_X,_Y,_Z)
AND
CharacterIsDead(_Char,0)
THEN
SetInArena(_Char,0);
CharacterSetSpectating(_Char,0);
TeleportToPosition(_Char,_X,_Y,_Z,"",1);
NOT DB_Arena_PreviousLocation(_Char,_X,_Y,_Z);
*/
PROC
Proc_Arena_Win_TeleportOut() //Do we revive enemies?
AND
DB_Arena_PreviousLocation(_Char,_X,_Y,_Z)
AND
NOT DB_Arena_ReviveCharAfter(_Char)
THEN
NOT DB_Arena_PreviousLocation(_Char,_X,_Y,_Z);


//End arena; Unless PVP
PROC
Proc_Arena_Win_TeleportOut()
THEN
Proc_Arena_Clear();

//END_REGION

//REGION Arena Girl


PROC
Proc_Arena_Win_RingGirl()
AND
DB_Arena_PlayerParticipants(_Arena,_,_,_)
AND
DB_ArenaMaster_RingGirl(_Char,_Dialog,_Arena,_Trig)
AND
GlobalGetFlag("Arnea_RingGirl_Initiated",0)
THEN
TeleportTo(_Char,_Trig);
Foop(_Char);
JumpToTurn(CHARACTERGUID_S_FTJ_RingGirl_Helper_2c6f3151-8d67-4af7-a4b7-e18b7c64ac94);
GlobalSetFlag("Arnea_RingGirl_Initiated");
SetInArena(_Char,1);
SetStoryEvent(_Char,"Arnea_RingGirl_Appeared");
//CharacterAppearAt(_Char,_Trig,1,"Arnea_RingGirl_Appeared");

PROC
Proc_Arena_Win_RingGirl()
AND
GlobalGetFlag("Arnea_RingGirl_Initiated",1)
AND
DB_Arena_PlayerParticipants(_,_,_Char,_)
THEN
CharacterSetSpectating(_Char,1);

/* TEST! seems to work
PROC
Proc_Arena_Win_RingGirl()
AND
DB_Arena_PlayerParticipants(_Arena,_,_Char,_)
AND
NOT DB_ArenaMaster_RingGirl(_,_,_Arena,_)
AND
GlobalGetFlag("Arnea_RingGirl_NoRingGirl",0)
THEN
GlobalSetFlag("Arnea_RingGirl_NoRingGirl");
DebugText(_Char,"No Arena Girl");
*/

/*
PROC
Proc_Arena_Win_RingGirl()
AND
GlobalGetFlag("Arnea_RingGirl_NoRingGirl",1)
THEN
GlobalClearFlag("Arnea_RingGirl_NoRingGirl");
Proc_Arena_Win_TeleportOut();
*/

PROC
Proc_Arena_Win_RingGirl()
AND
DB_Arena_PlayerParticipants(_Arena,_,_Char,_)
AND
NOT DB_ArenaMaster_RingGirl(_,_,_Arena,_)
AND
DB_Arena_CharIsAlive(_,_Char)
THEN
PlayAnimation(_Char,"Victory_01");
FadeToBlack(_Char,2.0,0,"Placeholder");

PROC
Proc_Arena_Win_RingGirl()
AND
DB_Arena_PlayerParticipants(_Arena,_,_,_)
AND
NOT DB_ArenaMaster_RingGirl(_,_,_Arena,_)
THEN
TimerLaunch("Arena_PlayingVictoryAnimation",4000);

IF
TimerFinished("Arena_PlayingVictoryAnimation")
THEN
Proc_Arena_Win_TeleportOut();


IF
//ObjectTurnStarted(CHARACTERGUID_S_FTJ_RingGirl_Helper_2c6f3151-8d67-4af7-a4b7-e18b7c64ac94)
StoryEvent((CHARACTERGUID)_,"Arnea_RingGirl_Appeared")
AND
DB_Arena_PlayerParticipants(_,_,_Char,_)
THEN
FadeToBlack(_Char,2.0,0,"Placeholder");


IF
//ObjectTurnStarted(CHARACTERGUID_S_FTJ_RingGirl_Helper_2c6f3151-8d67-4af7-a4b7-e18b7c64ac94)
StoryEvent((CHARACTERGUID)_RingGirl,"Arnea_RingGirl_Appeared")
AND
DB_ArenaMaster_RingGirl(_RingGirl,_Dialog,_,_)
THEN
Proc_StartDialog(1,_Dialog,_RingGirl);

IF
AutomatedDialogEnded(_Dialog,_)
AND
DB_ArenaMaster_RingGirl(_Char,_Dialog,_,_)
AND
GlobalGetFlag("Arnea_RingGirl_Initiated",1)
THEN
GlobalClearFlag("Arnea_RingGirl_Initiated");
SetInArena(_Char,0);
Poof(_Char);
Proc_Arena_Win_TeleportOut();



//END_REGION



//REGION Clear flags
IF
DialogEnded(_,_Inst)
AND
DB_ArenaMaster_SetUp(_Inst)
AND
GlobalGetFlag("Arena_StartAfterDialog",0)
THEN
Proc_Arena_ClearFlagsAndDatabases(_Inst);

PROC
Proc_Arena_ClearFlagsAndDatabases((INTEGER)_Inst)
THEN
NOT DB_Arena_PlayerParticipants_SameUser(1);
GlobalClearFlag("Arena_CharNotInRegion");
GlobalClearFlag("Arena_CharNotAvailable");
GlobalClearFlag("Arena_StartAfterDialog");
NOT DB_ArenaMaster_SetUp(_Inst);
GlobalClearFlag("Arena_LastManStanding_NoAccept");
GlobalClearFlag("Arena_LastManStanding_AcceptWinner");


//Clearing after combat
PROC
Proc_Arena_Clear()
THEN
GlobalClearFlag("Arena_OnGoing");
NOT DB_Arena_PlayerParticipants_SameUser(1);

PROC
Proc_Arena_Clear()
AND
DB_Arena_CharIsAlive(_Team,_Char)
THEN
NOT DB_Arena_CharIsAlive(_Team,_Char);

PROC
Proc_Arena_Clear()
AND
DB_Arena_CharWasAlive(_Team,_Char)
THEN
NOT DB_Arena_CharWasAlive(_Team,_Char);

PROC
Proc_Arena_Clear()
AND
DB_Arena_MobParticipants(_Inst,_Char,_Trig,_Team)
THEN
NOT DB_Arena_MobParticipants(_Inst,_Char,_Trig,_Team);

PROC
Proc_Arena_Clear()
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,_Team)
THEN
NOT DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,_Team);

PROC
Proc_Arena_Clear()
AND
DB_Arena_LastManStandingTeams(_Char,_OtherId,_OtherTeam)
THEN
NOT DB_Arena_LastManStandingTeams(_Char,_OtherId,_OtherTeam);

//Clearing Player checks
IF
DialogEnded(_Dialog,_)
AND
DB_ArenaMaster(_,_Dialog,_,_)
THEN
Proc_Arena_ClearPlayerCheck();

PROC
Proc_Arena_ClearPlayerCheck()
AND
DB_Arena_PvpChallenge(_Char,_Target)
THEN
NOT DB_Arena_PvpChallenge(_Char,_Target);

PROC
Proc_Arena_ClearPlayerCheck()
AND
DB_Arena_AvailablePlayer(_Flag,_Char,_User)
THEN
NOT DB_Arena_AvailablePlayer(_Flag,_Char,_User);
DebugText(_Char,"Proc_Arena_ClearPlayerCheck");

PROC
Proc_Arena_ClearPlayerCheck()
AND
DB_IsPlayer(_Char)
THEN
ObjectClearFlag(_Char,"Arena_ChallengePlayer_1");
ObjectClearFlag(_Char,"Arena_ChallengePlayer_2");
ObjectClearFlag(_Char,"Arena_ChallengePlayer_3");
ObjectClearFlag(_Char,"Arena_ChallengePlayer_4");

PROC
Proc_Arena_ClearPlayerCheck()
AND
DB_Arena_CheckOtherPlayers_Count(_Int)
THEN
NOT DB_Arena_CheckOtherPlayers_Count(_Int);

PROC
Proc_Arena_ClearPlayerCheck()
THEN
GlobalClearFlag("ArenaDialog_SinglePlayer");
GlobalClearFlag("Arena_AvailablePlayer_1");

//END_REGION


//flag character if she fought in an arena
PROC
Proc_Arena_Initiate((INTEGER)_Inst)
AND
DB_Arena_PlayerParticipants(_,_Inst,_Char,_)
AND
ObjectGetFlag(_Char,"Arena_CharacterFoughtInArena",0)
THEN
ObjectSetFlag(_Char,"Arena_CharacterFoughtInArena");

PROC
Proc_Arena_Initiate((INTEGER)_Inst)
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,_)
AND
StringConcatenate("Arena_CharacterFoughtIn_",_Arena,_String)
AND
ObjectGetFlag(_Char,_String,0)
THEN
ObjectSetFlag(_Char,_String);

PROC
Proc_Arena_Initiate((INTEGER)_Inst)
AND
DB_Arena_PlayerParticipants(_Arena,_,_Char,_)
AND
ObjectGetFlag(_Char,"Arena_CharacterFoughtIn_Driftwood",0)
AND
StringContains(_Arena,"Driftwood",1)
THEN 
ObjectSetFlag(_Char,"Arena_CharacterFoughtIn_Driftwood");



//REGION save games and drop outs
IF 
SavegameLoaded(_,_,_,_)
AND
DB_Arena_PlayerParticipants(_,_,_,_)
THEN
Proc_ArenaSavegameLoaded_CheckForPvpPlayers();

PROC
Proc_ArenaSavegameLoaded_CheckForPvpPlayers()
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_CharA,_TeamA)
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_CharB,_TeamB)
AND
_TeamA != _TeamB
AND
_CharA != _CharB
AND
CharacterGetReservedUserID(_CharA,_User)
AND
CharacterGetReservedUserID(_CharB,_User)
THEN
Proc_ArenaSavegameLoaded_CheckForPvpPlayers_MergeTeam(_CharA,_CharB);

PROC
Proc_ArenaSavegameLoaded_CheckForPvpPlayers_MergeTeam((CHARACTERGUID)_CharA,(CHARACTERGUID)_CharB)
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_CharA,_TeamA)
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_CharB,_TeamB)
THEN
NOT DB_Arena_PlayerParticipants(_Arena,_Inst,_CharB,_TeamB);
DB_Arena_PlayerParticipants(_Arena,_Inst,_CharB,_TeamA);


PROC
Proc_ArenaSavegameLoaded_CheckForPvpPlayers_MergeTeam((CHARACTERGUID)_,(CHARACTERGUID)_CharB)
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_CharB,_Team)
AND
DB_Arena_CharIsAlive(_OldTeam,_CharB)
THEN
NOT DB_Arena_CharIsAlive(_OldTeam,_CharB);
DB_Arena_CharIsAlive(_Team,_CharB);

PROC
Proc_ArenaSavegameLoaded_CheckForPvpPlayers_MergeTeam(_,_)
AND
DB_Arena_LastManStandingTeams(_Char,_Id,_Team)
THEN
NOT DB_Arena_LastManStandingTeams(_Char,_Id,_Team);

PROC
Proc_ArenaSavegameLoaded_CheckForPvpPlayers()
THEN
Proc_Arena_CheckWinCondition();

IF
UserDisconnected(_User,_,_)
AND
DB_Arena_PlayerParticipants(_,_,_,_)
THEN 
Proc_ArenaSavegameLoaded_CheckForPvpPlayers();
//END_REGION


//REGION global blindfolds
IF
ItemTemplateEquipped("EQ_Clothing_UNIQUE_Blindfolds_A_60884e3d-45cb-4849-b35e-d24064386b9f",_Char)
THEN
ApplyStatus(_Char,"PERMANENT_BLIND",-1.0,1);

IF
CharacterStatusRemoved(_Char,"PERMANENT_BLIND",_)
AND
GetItemForItemTemplateInInventory(_Char,"EQ_Clothing_UNIQUE_Blindfolds_A_60884e3d-45cb-4849-b35e-d24064386b9f",_Item)
AND
CharacterGetEquippedItem(_Char,"Helmet",_Item)
AND
HasActiveStatus(_Char,"PERMANENT_BLIND",0)
THEN
ApplyStatus(_Char,"PERMANENT_BLIND",-1.0,1);

IF
CharacterResurrected(_Char)
AND
GetItemForItemTemplateInInventory(_Char,"EQ_Clothing_UNIQUE_Blindfolds_A_60884e3d-45cb-4849-b35e-d24064386b9f",_Item)
AND
CharacterGetEquippedItem(_Char,"Helmet",_Item)
THEN
ApplyStatus(_Char,"PERMANENT_BLIND",-1.0,1);

IF
ItemTemplateUnEquipped("EQ_Clothing_UNIQUE_Blindfolds_A_60884e3d-45cb-4849-b35e-d24064386b9f",_Char)
THEN
RemoveStatus(_Char,"PERMANENT_BLIND");

//END_REGION


//REGION set tag

//END_REGION

//REGION 
IF
CharacterReservedUserIDChanged(_Char,_,_User)
AND
DB_Arena_PlayerParticipants(_,_,_Char,_)
AND
GlobalGetFlag("Arena_RequestingLastManStanding",0)
THEN
Proc_Arena_PVP_Reassigned(_User,_Char);

PROC
Proc_Arena_PVP_Reassigned((INTEGER)_User,(CHARACTERGUID)_Char)
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,_Team)
AND
DB_IsPlayer(_OtherChar)
AND
_Char != _OtherChar
AND
CharacterGetReservedUserID(_OtherChar,_User)
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_OtherChar,_OtherTeam)
AND
_Team != _OtherTeam
THEN
NOT DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,_Team);
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,_OtherTeam);
SetFaction(_Char,_OtherTeam);

PROC
Proc_Arena_PVP_Reassigned((INTEGER)_User,(CHARACTERGUID)_Char)
AND
DB_Arena_PlayerParticipants(_Arena,_Inst,_Char,_Team)
AND
DB_Arena_CharIsAlive(_CheckTeam,_Char)
AND
_CheckTeam != _Team
THEN
NOT DB_Arena_CharIsAlive(_CheckTeam,_Char);
DB_Arena_CharIsAlive(_Team,_Char);

PROC
Proc_Arena_PVP_Reassigned(_,_)
THEN
Proc_Arena_CheckWinCondition();

//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "__Shared_Campaign"
